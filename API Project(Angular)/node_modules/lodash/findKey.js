An identifier may become repeated when bundling multiple source files into a single bundle, so
 * bundlers have a strategy of suffixing non-unique identifiers with a suffix like $2. This function
 * strips off such suffixes, so that ngcc deals with the canonical name of an identifier.
 * @param value The value to strip any suffix of, if applicable.
 * @returns The canonical representation of the value, without any suffix.
 */
export declare function stripDollarSuffix(value: string): string;
export declare function stripExtension(fileName: string): string;
/**
 * Parse the JSON from a `package.json` file.
 *
 * @param packageJsonPath The absolute path to the `package.json` file.
 * @returns JSON from the `package.json` file if it exists and is valid, `null` otherwise.
 */
export declare function loadJson<T extends JsonObject = JsonObject>(fs: ReadonlyFileSystem, packageJsonPath: AbsoluteFsPath): T | null;
/**
 * Given the parsed JSON of a `package.json` file, try to extract info for a secondary entry-point
 * from the `exports` property. Such info will only be present for packages following Angular
 * Package Format v14+.
 *
 * @param primaryPackageJson The parsed JSON of the primary `package.json` (or `null` if it failed
 *     to be loaded).
 * @param packagePath The absolute path to the containing npm pack