/// <amd-module name="@angular/compiler-cli/ngcc/src/host/ngcc_host" />
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import ts from 'typescript';
import { ClassDeclaration, Declaration, Decorator, ReflectionHost } from '../../../src/ngtsc/reflection';
import { SymbolWithValueDeclaration } from '../../../src/ngtsc/util/src/typescript';
/**
 * The symbol corresponding to a "class" declaration. I.e. a `ts.Symbol` whose `valueDeclaration` is
 * a `ClassDeclaration`.
 */
export declare type ClassSymbol = ts.Symbol & {
    valueDeclaration: ClassDeclaration;
};
/**
 * A representation of a class that accounts for the potential existence of two `ClassSymbol`s for a
 * given class, as the compiled JavaScript bundles that ngcc reflects on can have two declarations.
 */
export interface NgccClassSymbol {
    /**
     * The name of the class.
     */
    name: string;
    /**
     * Represents the symbol corresponding with the outer declaration of the class. This should be
     * considered the public class symbol, i.e. its declaration is visible to the rest of the program.
   