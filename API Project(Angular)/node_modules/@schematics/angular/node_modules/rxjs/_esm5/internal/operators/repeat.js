JlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cblxuLy8gVEhJUyBDT0RFIElTIEdFTkVSQVRFRCAtIERPIE5PVCBNT0RJRlkuXG5jb25zdCB1ID0gdW5kZWZpbmVkO1xuXG5mdW5jdGlvbiBwbHVyYWwodmFsOiBudW1iZXIpOiBudW1iZXIge1xuY29uc3QgbiA9IHZhbDtcblxuaWYgKG4gPT09IDEpXG4gICAgcmV0dXJuIDE7XG5yZXR1cm4gNTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgW1wibnluXCIsW1tcIkFNXCIsXCJQTVwiXSx1LHVdLHUsW1tcIlNcIixcIktcIixcIlJcIixcIlNcIixcIk5cIixcIlRcIixcIk1cIl0sW1wiU0FOXCIsXCJPUktcIixcIk9LQlwiLFwiT0tTXCIsXCJPS05cIixcIk9LVFwiLFwiT01LXCJdLFtcIlNhbmRlXCIsXCJPcndva3ViYW56YVwiLFwiT3J3YWthYmlyaVwiLFwiT3J3YWthc2hhdHVcIixcIk9yd2FrYW5hXCIsXCJPcndha2F0YWFub1wiLFwiT3J3YW11a2FhZ2FcIl0sW1wiU0FOXCIsXCJPUktcIixcIk9LQlwiLFwiT0tTXCIsXCJPS05cIixcIk9LVFwiLFwiT01LXCJdXSx1LFtbXCJKXCIsXCJGXCIsXCJNXCIsXCJBXCIsXCJNXCIsXCJKXCIsXCJKXCIsXCJBXCIsXCJTXCIsXCJPXCIsXCJOXCIsXCJEXCJdLFtcIktCWlwiLFwiS0JSXCIsXCJLU1RcIixcIktLTlwiLFwiS1ROXCIsXCJLTUtcIixcIktNU1wiLFwiS01OXCIsXCJLTVdcIixcIktLTVwiLFwiS05LXCIsXCJLTkJcIl0sW1wiT2t3b2t1YmFuemFcIixcIk9rd2FrYWJpcmlcIixcIk9rd2FrYXNoYXR1XCIsXCJPa3dha2FuYVwiLFwiT2t3YWthdGFhbmFcIixcIk9rd2FtdWthYWdhXCIsXCJPa3dhbXVzaGFuanVcIixcIk9rd2FtdW5hYW5hXCIsXCJPa3dhbXdlbmRhXCIsXCJPa3dhaWt1bWlcIixcIk9rd2Fpa3VtaSBuYSBrdW13ZVwiLFwiT2t3YWlrdW1pIG5hIGliaXJpXCJdXSx1LFtbXCJCQ1wiLFwiQURcIl0sdSxbXCJLdXJpc2l0byBBdGFrYWlqaXJlXCIsXCJLdXJpc2l0byBZYWlqaXJlXCJdXSwxLFswLDBdLFtcImRkL01NL3lcIixcImQgTU1NIHlcIixcImQgTU1NTSB5XCIsXCJFRUVFLCBkIE1NTU0geVwiXSxbXCJISDptbVwiLFwiSEg6bW06c3NcIixcIkhIOm1tOnNzIHpcIixcIkhIOm1tOnNzIHp6enpcIl0sW1wiezF9IHswfVwiLHUsdSx1XSxbXCIuXCIsXCIsXCIsXCI7XCIsXCIlXCIsXCIrXCIsXCItXCIsXCJFXCIsXCLDl1wiLFwi4oCwXCIsXCLiiJ5cIixcIk5hTlwiLFwiOlwiXSxbXCIjLCMjMC4jIyNcIixcIiMsIyMwJVwiLFwiwqQjLCMjMC4wMFwiLFwiI0UwXCJdLFwiVUdYXCIsXCJVU2hcIixcIkVzaGlyaW5naSB5YSBVZ2FuZGFcIix7XCJKUFlcIjpbXC