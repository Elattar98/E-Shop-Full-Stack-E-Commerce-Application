wczovL2FuZ3VsYXIuaW8vbGljZW5zZVxuICovXG5cbi8vIFRISVMgQ09ERSBJUyBHRU5FUkFURUQgLSBETyBOT1QgTU9ESUZZLlxuY29uc3QgdSA9IHVuZGVmaW5lZDtcblxuZnVuY3Rpb24gcGx1cmFsKHZhbDogbnVtYmVyKTogbnVtYmVyIHtcbmNvbnN0IG4gPSB2YWw7XG5cbnJldHVybiA1O1xufVxuXG5leHBvcnQgZGVmYXVsdCBbXCJsdW9cIixbW1wiT0RcIixcIk9UXCJdLHUsdV0sdSxbW1wiSlwiLFwiV1wiLFwiVFwiLFwiVFwiLFwiVFwiLFwiVFwiLFwiTlwiXSxbXCJKTVBcIixcIldVVFwiLFwiVEFSXCIsXCJUQURcIixcIlRBTlwiLFwiVEFCXCIsXCJOR1NcIl0sW1wiSnVtYXBpbFwiLFwiV3VvayBUaWNoXCIsXCJUaWNoIEFyaXlvXCIsXCJUaWNoIEFkZWtcIixcIlRpY2ggQW5n4oCZd2VuXCIsXCJUaWNoIEFiaWNoXCIsXCJOZ2Vzb1wiXSxbXCJKTVBcIixcIldVVFwiLFwiVEFSXCIsXCJUQURcIixcIlRBTlwiLFwiVEFCXCIsXCJOR1NcIl1dLHUsW1tcIkNcIixcIlJcIixcIkRcIixcIk5cIixcIkJcIixcIlVcIixcIkJcIixcIkJcIixcIkNcIixcIlBcIixcIkNcIixcIlBcIl0sW1wiREFDXCIsXCJEQVJcIixcIkRBRFwiLFwiREFOXCIsXCJEQUhcIixcIkRBVVwiLFwiREFPXCIsXCJEQUJcIixcIkRPQ1wiLFwiREFQXCIsXCJER0lcIixcIkRBR1wiXSxbXCJEd2UgbWFyIEFjaGllbFwiLFwiRHdlIG1hciBBcml5b1wiLFwiRHdlIG1hciBBZGVrXCIsXCJEd2UgbWFyIEFuZ+KAmXdlblwiLFwiRHdlIG1hciBBYmljaFwiLFwiRHdlIG1hciBBdWNoaWVsXCIsXCJEd2UgbWFyIEFiaXJpeW9cIixcIkR3ZSBtYXIgQWJvcm9cIixcIkR3ZSBtYXIgT2NoaWtvXCIsXCJEd2UgbWFyIEFwYXJcIixcIkR3ZSBtYXIgZ2kgYWNoaWVsXCIsXCJEd2UgbWFyIEFwYXIgZ2kgYXJpeW9cIl1dLHUsW1tcIkJDXCIsXCJBRFwiXSx1LFtcIkthcG9rIEtyaXN0byBvYmlyb1wiLFwi