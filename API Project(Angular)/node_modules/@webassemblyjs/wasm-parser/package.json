sContent: sourcesContent,
        _names: names,
      } = map;
      const line = getLine(mappings, genLine);
      const index = getColumnIndex(line, genColumn);

      if (!source) {
        if (skipable && skipSourceless(line, index)) return;
        return insert(line, index, [genColumn]);
      }

      // Sigh, TypeScript can't figure out sourceLine and sourceColumn aren't nullish if source
      // isn't nullish.
      assert<number>(sourceLine);
      assert<number>(sourceColumn);

      const sourcesIndex = put(sources, source);
      const namesIndex = name ? put(names, name) : NO_NAME;
      if (sourcesIndex === sourcesContent.length) sourcesContent[sourcesIndex] = content ?? null;

      if (skipable && skipSource(line, index, sourcesIndex, sourceLine, sourceColumn, namesIndex)) {
        return;
      }

      return insert(
        line,
        index,
        name
          ? [genColumn, sourcesIndex, sourceLine, sourceColumn, namesIndex]
          : [genColumn, sourcesIndex, sourceLine, sourceColumn],
      );
    };
  }
}

function assert<T>(_val: unknown): asserts _val is T {
  // noop.
}

function getLine(mapp