ns/budget"
          },
          "default": []
        },
        "webWorkerTsConfig": {
          "type": "string",
          "description": "TypeScript configuration for Web Worker modules."
        },
        "crossOrigin": {
          "type": "string",
          "description": "Define the crossorigin attribute setting of elements that provide CORS support.",
          "default": "none",
          "enum": [
            "none",
            "anonymous",
            "use-credentials"
          ]
        },
        "allowedCommonJsDependencies": {
          "description": "A list of CommonJS packages that are allowed to be used without a build time warning.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        }
      },
      "additionalProperties": false,
      "definitions": {
        "assetPattern": {
          "oneOf": [
            {
              "type": "object",
              "properties": {
                "followSymlinks": {
                  "type": "boolean",
                  "default": false,
                  "description": "Allow glob patterns to follow symlink directories. This allows subdirectories of the symlink to be searched."
                },
                "glob": {
                  "type": "string",
                  "description": "The pattern to match."
                },
                "input": {
                  "type": "string",
                  "description": "The input directory path in which to apply 'glob'. Defaults to the project root."
                },
                "ignore": {
                  "description": "An array of globs to ignore.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "output": {
                  "type": "string",
                  "description": "Absolute path within the output."
                }
              },
              "additionalProperties": false
            },
            {
              "type": "string"
            }
          ]
        },
        "fileReplacement": {
          "oneOf": [
            {
              "type": "object",
              "properties": {
                "src": {
                  "type": "string",
                  "pattern": "\\.(([cm]?j|t)sx?|json)$"
                },
                "replaceWith": {
                  "type": "string",
                  "pattern": "\\.(([cm]?j|t)sx?|json)$"
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "replace": {
                  "type": "string",
                  "pattern": "\\.(([cm]?j|t)sx?|json)$"
                },
                "with": {
                  "type": "string",
                  "pattern": "\\.(([cm]?j|t)sx?|json)$"
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "budget": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "The type of budget.",
              "enum": [
                "all",
                "allScript",
                "any",
                "anyScript",
                "anyComponentStyle",
                "bundle",
                "initial"
              ]
            },
            "name": {
              "type": "string",
              "description": "The name of the bundle."
            },
            "baseline": {
              "type": "string",
              "description": "The baseline size for comparison."
            },
            "maximumWarning": {
              "type": "string",
              "description": "The maximum threshold for warning relative to the baseline."
            },
            "maximumError": {
              "type": "string",
              "description": "The maximum threshold for error relative to the baseline."
            },
            "minimumWarning": {
              "type": "string",
              "description": "The minimum threshold for warning relative to the baseline."
            },
            "minimumError": {
              "type": "string",
              "description": "The minimum threshold for error relative to the baseline."
            },
            "warning": {
              "type": "string",
              "description": "The threshold for warning relative to the baseline (min & max)."
            },
            "error": {
              "type": "string",
              "description": "The threshold for error relative to the baseline (min & max)."
            }
          },
          "additionalProperties": false
        }
      }
    },
    "AngularDevkitBuildAngularBuildersDevServerSchema": {
      "title": "Dev Server Target",
      "description": "Dev Server target options for Build Facade.",
      "type": "object",
      "properties": {
        "browserTarget": {
          "type": "string",
          "description": "A browser builder target to serve in the format of `project:target[:configuration]`. You can also pass in more than one configuration name as a comma-separated list. Example: `project:target:production,staging`.",
          "pattern": "^[^:\\s]+:[^:\\s]+(:[^\\s]+)?$"
        },
        "port": {
          "type": "number",
          "description": "Port to listen on.",
          "default": 4200
        },
        "host": {
          "type": "string",
          "description": "Host to listen on.",
          "default": "localhost"
        },
   