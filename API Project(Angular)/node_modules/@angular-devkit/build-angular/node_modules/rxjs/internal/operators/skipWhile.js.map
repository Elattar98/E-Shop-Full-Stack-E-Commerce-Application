i5pby9saWNlbnNlXG4gKi9cblxuLy8gVEhJUyBDT0RFIElTIEdFTkVSQVRFRCAtIERPIE5PVCBNT0RJRlkuXG5jb25zdCB1ID0gdW5kZWZpbmVkO1xuXG5mdW5jdGlvbiBwbHVyYWwodmFsOiBudW1iZXIpOiBudW1iZXIge1xuY29uc3QgbiA9IHZhbDtcblxuaWYgKG4gPT09IDEpXG4gICAgcmV0dXJuIDE7XG5yZXR1cm4gNTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgW1wibGdcIixbW1wiQU1cIixcIlBNXCJdLHUsdV0sdSxbW1wiU1wiLFwiQlwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiLFwiTFwiXSxbXCJTYWJcIixcIkJhbFwiLFwiTHcyXCIsXCJMdzNcIixcIkx3NFwiLFwiTHc1XCIsXCJMdzZcIl0sW1wiU2FiYmlpdGlcIixcIkJhbGF6YVwiLFwiTHdha3ViaXJpXCIsXCJMd2FrdXNhdHVcIixcIkx3YWt1bmFcIixcIkx3YWt1dGFhbm9cIixcIkx3YW11a2FhZ2FcIl0sW1wiU2FiXCIsXCJCYWxcIixcIkx3MlwiLFwiTHczXCIsXCJMdzRcIixcIkx3NVwiLFwiTHc2XCJdXSx1LFtbXCJKXCIsXCJGXCIsXCJNXCIsXCJBXCIsXCJNXCIsXCJKXCIsXCJKXCIsXCJBXCIsXCJTXCIsXCJPXCIsXCJOXCIsXCJEXCJdLFtcIkphblwiLFwiRmViXCIsXCJNYXJcIixcIkFwdVwiLFwiTWFhXCIsXCJKdXVcIixcIkp1bFwiLFwiQWd1XCIsXCJTZWJcIixcIk9raVwiLFwiTm92XCIsXCJEZXNcIl0sW1wiSmFud2FsaXlvXCIsXCJGZWJ3YWxpeW9cIixcIk1hcmlzaVwiLFwiQXB1bGlcIixcIk1hYXlpXCIsXCJKdXVuaVwiLFwiSnVsYWF5aVwiLFwiQWd1c2l0b1wiLFwiU2VidXR0ZW1iYVwiLFwiT2tpdG9iYmFcIixcIk5vdmVtYmFcIixcIkRlc2VtYmFcIl1dLHUsW1tcIkJDXCIsXCJBRFwiXSx1LFtcIkt1bGlzaXRvIG5nYSB0YW5uYXphXCIsXCJCdWt5YSBLdWxpc2l0byBBemFhbFwiXV0sMSxbMCwwXSxbXCJkZC9NTS95XCIsXCJkIE1NTSB5XCIsXCJkIE1