'use strict';
/*
 Copyright 2012-2015, Yahoo Inc.
 Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */
const { ReportBase } = require('istanbul-lib-report');

class CloverReport extends ReportBase {
    constructor(opts) {
        super();

        this.cw = null;
        this.xml = null;
        this.projectRoot = opts.projectRoot || process.cwd();
        this.file = opts.file || 'clover.xml';
    }

    onStart(root, context) {
        this.cw = context.writer.writeFile(this.file);
        this.xml = context.getXMLWriter(this.cw);
        this.writeRootStats(root, context);
    }

    onEnd() {
        this.xml.closeAll();
        this.cw.close();
    }

    getTreeStats(node, context) {
        const state = {
            packages: 0,
            files: 0,
            classes: 0
        };
        const visitor = {
            onSummary(node, state) {
                const metrics = node.getCoverageSummary(true);
                if (metrics) {
                    state.packages += 1;
                }
            },
            onDetail(node, state) {
                state.classes += 1;
                state.files += 1;
            }
        };
        node.visit(context.getVisitor(visitor), state);
        return state;
    }

    writeRootStats(node, context) {
        this.cw.println('<?xml version="1.0" encoding="UTF-8"?>');
        this.xml.openTag('coverage', {
            generated: Date.now().toString(),
            clover: '3.2.0'
        });

