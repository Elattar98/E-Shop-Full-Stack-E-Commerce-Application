_map&&this._map.__ensureOwner(e);return e?kn(this,t,e):(this.__ownerID=e,this._map=t,this)};var Sn=_n.prototype;function kn(e,t,n){var r=Object.create(Object.getPrototypeOf(e));return r._map=t,r.__ownerID=n,r}function An(e){return e._name||e.constructor.name||"Record"}function Cn(e,t){try{t.forEach(On.bind(void 0,e))}catch(e){}}function On(e,t){Object.defineProperty(e,t,{get:function(){return this.get(t)},set:function(e){we(this.__ownerID,"Cannot set on an immutable record."),this.set(t,e)}})}function jn(e){return null==e?Dn():In(e)&&!c(e)?e:Dn().withMutations((function(t){var n=a(e);Ve(n.size),n.forEach((function(e){return t.add(e)}))}))}function In(e){return!(!e||!e[Nn])}Sn[m]=Sn.remove,Sn.deleteIn=Sn.removeIn=Ke.removeIn,Sn.merge=Ke.merge,Sn.mergeWith=Ke.mergeWith,Sn.mergeIn=Ke.mergeIn,Sn.mergeDeep=Ke.mergeDeep,Sn.mergeDeepWith=Ke.mergeDeepWith,Sn.mergeDeepIn=Ke.mergeDeepIn,Sn.setIn=Ke.setIn,Sn.update=Ke.update,Sn.updateIn=Ke.updateIn,Sn.withMutations=Ke.withMutations,Sn.asMutable=Ke.asMutable,Sn.asImmutable=Ke.asImmutable,t(jn,ke),jn.of=function(){return this(arguments)},jn.fromKeys=function(e){return this(r(e).keySeq())},jn.prototype.toString=function(){return this.__toString("Se