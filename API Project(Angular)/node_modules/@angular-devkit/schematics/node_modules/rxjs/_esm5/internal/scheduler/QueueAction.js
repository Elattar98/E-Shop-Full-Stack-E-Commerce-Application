tion`,
  // this smells like "internal API"
  // eslint-disable-next-line max-len
  `declare export function buildChildren(node: { children: Array<${NODE_PREFIX}JSXText | ${NODE_PREFIX}JSXExpressionContainer | ${NODE_PREFIX}JSXSpreadChild | ${NODE_PREFIX}JSXElement | ${NODE_PREFIX}JSXFragment | ${NODE_PREFIX}JSXEmptyExpression> }): Array<${NODE_PREFIX}JSXText | ${NODE_PREFIX}JSXExpressionContainer | ${NODE_PREFIX}JSXSpreadChild | ${NODE_PREFIX}JSXElement | ${NODE_PREFIX}JSXFragment>`,

  // clone/
  `declare export function clone<T>(n: T): T;`,
  `declare export function cloneDeep<T>(n: T): T;`,
  `declare export function cloneDeepWithoutLoc<T>(n: T): T;`,
  `declare export function cloneNode<T>(n: T, deep?: boolean, withoutLoc?: boolean): T;`,
  `declare export function cloneWithoutLoc<T>(n: T): T;`,

  // comments/
  `declare type CommentTypeShorthand = 'leading' | 'inner' | 'trailing'`,
  // eslint-disable-next-line max-len
  `declare export function addComment<T: BabelNode>(node: T, type: CommentTypeShorthand, content: string, line?: boolean): T`,
  // eslint-disable-next-line max-len
  `declare export function addComments<T: BabelNode>(node: T, type: CommentTypeShorthand, comments: Array<Comment>): T`,
  `declare export function inheritInnerComments(node: BabelNode, parent: BabelNode): void`,
  `declare export function inheritLeadingComments(node: BabelNode, parent: BabelNode): void`,
  `declare export function inheritsComments<T: BabelNode>(node: T, 