"use strict";
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.memoize = void 0;
/**
 * A decorator that memoizes methods and getters.
 *
 * **Note**: Be cautious where and how to use this decorator as the size of the cache will grow unbounded.
 *
 * @see https://en.wikipedia.org/wiki/Memoization
 */
function memoize(target, propertyKey, descriptor) {
    const descriptorPropertyName = descriptor.get ? 'get' : 'value';
    const originalMethod = descriptor[descriptorPropertyName];
    if (typeof originalMethod !== 'function') {
        throw new Error('Memoize decorator can only be used on methods or get accessors.');
    }
    const cache = new Map();
    return {
        .