cm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxuICovXG5cbi8vIFRISVMgQ09ERSBJUyBHRU5FUkFURUQgLSBETyBOT1QgTU9ESUZZLlxuY29uc3QgdSA9IHVuZGVmaW5lZDtcblxuZnVuY3Rpb24gcGx1cmFsKHZhbDogbnVtYmVyKTogbnVtYmVyIHtcbmNvbnN0IG4gPSB2YWw7XG5cbnJldHVybiA1O1xufVxuXG5leHBvcnQgZGVmYXVsdCBbXCJkYXZcIixbW1wiTHVtYSBsd2EgS1wiLFwibHVtYSBsd2EgcFwiXSx1LHVdLHUsW1tcIkpcIixcIkpcIixcIktcIixcIktcIixcIktcIixcIktcIixcIk5cIl0sW1wiSnVtXCIsXCJKaW1cIixcIkthd1wiLFwiS2FkXCIsXCJLYW5cIixcIkthc1wiLFwiTmd1XCJdLFtcIkl0dWt1IGphIGp1bXdhXCIsXCJLdXJhbXVrYSBqaW13ZXJpXCIsXCJLdXJhbXVrYSBrYXdpXCIsXCJLdXJhbXVrYSBrYWRhZHVcIixcIkt1cmFtdWthIGthbmFcIixcIkt1cmFtdWthIGthc2FudVwiLFwiS2lmdWxhIG5ndXdvXCJdLFtcIkp1bVwiLFwiSmltXCIsXCJLYXdcIixcIkthZFwiLFwiS2FuXCIsXCJLYXNcIixcIk5ndVwiXV0sdSxbW1wiSVwiLFwiS1wiLFwiS1wiLFwiS1wiLFwiS1wiLFwiS1wiLFwiTVwiLFwiV1wiLFwiSVwiLFwiSVwiLFwiSVwiLFwiSVwiXSxbXCJJbWJcIixcIkthd1wiLFwiS2FkXCIsXCJLYW5cIixcIkthc1wiLFwiS2FyXCIsXCJNZnVcIixcIld1blwiLFwiSWtlXCIsXCJJa3VcIixcIkltd1wiLFwiSXdpXCJdLFtcIk1vcmkgZ2h3YSBpbWJpcmlcIixcIk1vcmkgZ2h3YSBrYXdpXCIsXCJNb3JpIGdod2Ega2FkYWR1XCIsXCJNb3JpIGdod2Ega2FuYVwiLFwiTW9yaSBnaHdhIGthc2FudVwiLFwiTW9yaSBnaHdhIGthcmFuZGFkdVwiLFwiTW9yaSBnaHd