123);
      for (t2 = $parent.children, t2 = new A.ListIterator(t2, t2.get$length(t2)), t3 = _this._style !== B.OutputStyle_compressed, t4 = A._instanceType(t2)._precomputed1, t5 = type$.CssComment, t6 = type$.CssParentNode, prePrevious = null, previous = null; t2.moveNext$0();) {
        t7 = t2.__internal$_current;
        previous0 = t7 == null ? t4._as(t7) : t7;
        if (_this._isInvisible$1(previous0))
          continue;
        t7 = previous == null;
        if (!t7)
          t8 = t6._is(previous) ? previous.get$isChildless() : !t5._is(previous);
        else
          t8 = false;
        if (t8)
          t1.writeCharCode$1(59);
        if (_this._isTrailingComment$2(previous0, t7 ? $parent : previous)) {
          if (t3)
            t1.writeCharCode$1(32);
          savedIndentation = _this._indentation;
          _this._indentation = 0;
          new A._SerializeVisitor__visitChildren_closure(_this, previous0).call$0();
          _this._indentation = savedIndentation;
        } else {
          if (t3)
            t1.write$1(0, "\n");
          ++_this._indentation;
          new A._SerializeVisitor__visitChildren_closure0(_this, previous0).call$0();
          --_this._indentation;
        }
        prePrevious = previous;
        previous = previous0;
      }
      if (previous != null) {
        if ((t6._is(previous) ? previous.get$isChildless() : !t5._is(previous)) && t3)
          t1.writeCharCode$1(59);
        if (prePrevious == null && _this._isTrailingComment$2(previous, $parent)) {
          if (t3)
            t1.writeCharCode$1(32);
        } else {
          _this._writeLineFeed$0();
          _this._writeIndentation$0();
        }
      }
      t1.writeCharCode$1(125);
    },
    _isTrailingComment$2(node, previous) {
      var t1, t2, t3, t4, searchFrom, endOffset, t5, span;
      if (this._style === B.OutputStyle_compressed)
        return false;
      if (!type$.CssComment._is(node))
        return false;
      t1 = previous.get$span(previous);
      t2 = node.span;
      t3 = t1.file;
      t4 = t2.file;
      if (!(J.$eq$(t3.url, t4.url) && A.FileLocation$_(t3, t1._file$_start).offset <= A.FileLocation$_(t4, t2._file$_start).offset && A.FileLocation$_(t3, t1._end).offset >= A.FileLocation$_(t4, t2._end).offset)) {
        t1 = A.FileLocation$_(t4, t2._file$_start);
        t1 = t1.file.getLine$1(t1.offset);
        t2 = previous.get$span(previous);
        t2 = A.FileLocation$_(t2.file, t2._end);
        return t1 === t2.file.getLine$1(t2.offset);
      }
      t1 = t2._file$_start;
      t2 = A.FileLocation$_(t4, t1);
      t3 = previous.get$span(previous);
      searchFrom = t2.offset - A.FileLocation$_(t3.file, t3._file$_start).offset - 1;
      if (searchFrom < 0)
        return false;
      t2 = previous.get$span(previous);
      endOffset = Math.max(0, B.JSString_methods.lastIndexOf$2(A.String_String$fromCharCodes(B.NativeUint32List_methods.sublist$2(t2.file._decodedChars, t2._file$_start, t2._end), 0, null), "{", searchFrom));
      t2 = previous.get$span(previous);
      t3 = previous.get$span(previous);
      t3 = A.FileLocation$_(t3.file, t3._file$_start);
      t5 = previous.get$span(previous);
      span = t2.file.span$2(0, t3.offset, A.FileLocation$_(t5.file, t5._file$_start).offset + endOffset);
      t1 = A.FileLocation$_(t4, t1);
      t1 = t1.file.getLine$1(t1.offset);
      t4 = A.FileLocation$_(span.file, span._end);
      return t1 === t4.file.getLine$1(t4.offset);
    },
    _writeLineFeed$0() {
      if (this._style !== B.OutputStyle_compressed)
        this._serialize$_buffer.write$1(0, "\n");
    },
    _writeIndentation$0() {
      var _this = this;
      if (_this._style === B.OutputStyle_compressed)
        return;
      _this._writeTimes$2(_this._indentCharacter, _this._indentation * _this._indentWidth);
    },
    _writeTimes$2(char, times) {
      var t1, i;
      for (t1 = this._serialize$_buffer, i = 0; i < times; ++i)
        t1.writeCharCode$1(char);
    },
    _writeBetween$1$3(iterable, text, callback) {
      var t1, t2, first, value;
      for (t1 = J.get$iterator$ax(iterable), t2 = this._serialize$_buffer, first = true; t1.moveNext$0();) {
        value = t1.get$current(t1);
        if (first)
          first = false;
        else
          t2.write$1(0, text);
        callback.call$1(value);
      }
    },
    _writeBetween$3(iterable, text, callback) {
      return this._writeBetween$1$3(iterable, text, callback, type$.dynamic);
    },
    _isInvisible$1(node) {
      if (this._inspect)
        return false;
      if (this._style === B.OutputStyle_compressed && type$.CssComment._is(node) && B.JSString_methods._codeUnitAt$1(node.text, 2) !== 33)
        return true;
      if (type$.CssParentNode._is(node)) {
        if (type$.CssAtRule._is(node))
          return false;
        if (type$.CssStyleRule._is(node) && node.selector.value.get$isInvisible())
          return true;
        return J.every$1$ax(node.get$children(node), this.get$_isInvisible());
      } else
        return false;
    }
  };
  A._SerializeVisitor_visitCssComment_closure.prototype = {
    call$0() {
      var t2, t3, minimumIndentation,
        t1 = this.$this;
      if (t1._style === B.OutputStyle_compressed && B.JSString_methods._codeUnitAt$1(this.node.text, 2) !== 33)
        return;
      t2 = this.node;
      t3 = t2.text;
      minimumIndentation = t1._minimumIndentation$1(t3);
      if (minimumIndentation == null) {
        t1._writeIndentation$0();
        t1._serialize$_buffer.write$1(0, t3);
        return;
      }
      t2 = t2.span;
      t2 = A.FileLocation$_(t2.file, t2._file$_start);
      minimumIndentation = Math.min(minimumIndentation, t2.file.getColumn$1(t2.offset));
      t1._writeIndentation$0();
      t1._writeWithIndent$2(t3, minimumIndentation);
    },
    $signature: 1
  };
  A._SerializeVisitor_visitCssAtRule_closure.prototype = {
    call$0() {
      var t3, value,
        t1 = this.$this,
        t2 = t1._serialize$_buffer;
      t2.writeCharCode$1(64);
      t3 = this.node;
      t1._serialize$_write$1(t3.name);
      value = t3.value;
      if (value != null) {
        t2.writeCharCode$1(32);
        t1._serialize$_write$1(value);
      }
    },
    $signature: 1
  };
  A._SerializeVisitor_visitCssMediaRule_closure.prototype = {
    call$0() {
      var t3, t4,
        t1 = this.$this,
        t2 = t1._serialize$_buffer;
      t2.write$1(0, "@media");
      t3 = t1._style === B.OutputStyle_compressed;
      if (t3) {
        t4 = B.JSArray_methods.get$first(this.node.queries);
        t4 = !(t4.modifier == null && t4.type == null);
      } else
        t4 = true;
      if (t4)
        t2.writeCharCode$1(32);
      t2 = t3 ? "," : ", ";
      t1._writeBetween$3(this.node.queries, t2, t1.get$_visitMediaQuery());
    },
    $signature: 1
  };
  A._SerializeVisitor_visitCssImport_closure.prototype = {
    call$0() {
      var t3, t4, t5, modifiers,
        t1 = this.$this,
        t2 = t1._serialize$_buffer;
      t2.write$1(0, "@import");
      t3 = t1._style !== B.OutputStyle_compressed;
      if (t3)
        t2.writeCharCode$1(32);
      t4 = this.node;
      t5 = t4.url;
      t2.forSpan$2(t5.get$span(t5), new A._SerializeVisitor_visitCssImport__closure(t1, t4));
      modifiers = t4.modifiers;
      if (modifiers != null) {
        if (t3)
          t2.writeCharCode$1(32);
        t2.write$1(0, modifiers);
      }
    },
    $signature: 1
  };
  A._SerializeVisitor_visitCssImport__closure.prototype = {
    call$0() {
      var t1 = this.node.url;
      return this.$this._writeImportUrl$1(t1.get$value(t1));
    },
    $signature: 0
  };
  A._SerializeVisitor_visitCssKeyframeBlock_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._style === B.OutputStyle_compressed ? "," : ", ",
        t3 = t1._serialize$_buffer;
      return t1._writeBetween$3(this.node.selector.value, t2, t3.get$write(t3));
    },
    $signature: 0
  };
  A._SerializeVisitor_visitCssStyleRule_closure.prototype = {
    call$0() {
      return this.$this.visitSelectorList$1(this.node.selector.value);
    },
    $signature: 0
  };
  A._SerializeVisitor_visitCssSupportsRule_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._serialize$_buffer;
      t2.write$1(0, "@supports");
      if (!(t1._style === B.OutputStyle_compressed && J.codeUnitAt$1$s(this.node.condition.value, 0) === 40))
        t2.writeCharCode$1(32);
      t1._serialize$_write$1(this.node.condition);
    },
    $signature: 1
  };
  A._SerializeVisitor_visitCssDeclaration_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = this.node;
      if (t1._style === B.OutputStyle_compressed)
        t1._writeFoldedValue$1(t2);
      else
        t1._writeReindentedValue$1(t2);
    },
    $signature: 1
  };
  A._SerializeVisitor_visitCssDeclaration_closure0.prototype = {
    call$0() {
      var t1 = this.node.value;
      return t1.get$value(t1).accept$1(this.$this);
    },
    $signature: 0
  };
  A._SerializeVisitor_visitList_closure.prototype = {
    call$1(element) {
      return !element.get$isBlank();
    },
    $signature: 62
  };
  A._SerializeVisitor_visitList_closure0.prototype = {
    call$1(element) {
      var t1 = this.$this,
        needsParens = t1._elementNeedsParens$2(this.value._separator, element);
      if (needsParens)
        t1._serialize$_buffer.writeCharCode$1(40);
      element.accept$1(t1);
      if (needsParens)
        t1._serialize$_buffer.writeCharCode$1(41);
    },
    $signature: 56
  };
  A._SerializeVisitor_visitList_closure1.prototype = {
    call$1(element) {
      element.accept$1(this.$this);
    },
    $signature: 56
  };
  A._SerializeVisitor_visitMap_closure.prototype = {
    call$1(entry) {
      var t1 = this.$this;
      t1._writeMapElement$1(entry.key);
      t1._serialize$_buffer.write$1(0, ": ");
      t1._writeMapElement$1(entry.value);
    },
    $signature: 270
  };
  A._SerializeVisitor_visitSelectorList_closure.prototype = {
    call$1(complex) {
      return !complex.get$isInvisible();
    },
    $signature: 19
  };
  A._SerializeVisitor__write_closure.prototype = {
    call$0() {
      var t1 = this.value;
      return this.$this._serialize$_buffer.write$1(0, t1.get$value(t1));
    },
    $signature: 0
  };
  A._SerializeVisitor__visitChildren_closure.prototype = {
    call$0() {
      return this.child.accept$1(this.$this);
    },
    $signature: 0
  };
  A._SerializeVisitor__visitChildren_closure0.prototype = {
    call$0() {
      this.child.accept$1(this.$this);
    },
    $signature: 0
  };
  A.OutputStyle.prototype = {
    toString$0(_) {
      return this._name;
    }
  };
  A.LineFeed.prototype = {
    toString$0(_) {
      return "lf";
    }
  };
  A.SerializeResult.prototype = {};
  A.StatementSearchVisitor.prototype = {
    visitAtRootRule$1(node) {
      return this.visitChildren$1(node.children);
    },
    visitAtRule$1(node) {
      return A.NullableExtension_andThen(node.children, this.get$visitChildren());
    },
    visitContentBlock$1(node) {
      return this.visitChildren$1(node.children);
    },
    visitDebugRule$1(node) {
      return null;
    },
    visitDeclaration$1(node) {
      return A.NullableExtension_andThen(node.children, this.get$visitChildren());
    },
    visitEachRule$1(node) {
      return this.visitChildren$1(node.children);
    },
    visitErrorRule$1(node) {
      return null;
    },
    visitExtendRule$1(node) {
      return null;
    },
    visitForRule$1(node) {
      return this.visitChildren$1(node.children);
    },
    visitForwardRule$1(node) {
      return null;
    },
    visitFunctionRule$1(node) {
      return this.visitChildren$1(node.children);
    },
    visitIfRule$1(node) {
      var t1 = A._IterableExtension__search(node.clauses, new A.StatementSearchVisitor_visitIfRule_closure(this));
      return t1 == null ? A.NullableExtension_andThen(node.lastClause, new A.StatementSearchVisitor_visitIfRule_closure0(this)) : t1;
    },
    visitImportRule$1(node) {
      return null;
    },
    visitIncludeRule$1(node) {
      return A.NullableExtension_andThen(node.content, this.get$visitContentBlock());
    },
    visitLoudComment$1(node) {
      return null;
    },
    visitMediaRule$1(node) {
      return this.visitChildren$1(node.children);
    },
    visitMixinRule$1(node) {
      return this.visitChildren$1(node.children);
    },
    visitReturnRule$1(node) {
      return null;
    },
    visitSilentComment$1(node) {
      return null;
    },
    visitStyleRule$1(node) {
      return this.visitChildren$1(node.children);
    },
    visitStylesheet$1(node) {
      return this.visitChildren$1(node.children);
    },
    visitSupportsRule$1(node) {
      return this.visitChildren$1(node.children);
    },
    visitUseRule$1(node) {
      return null;
    },
    visitVariableDeclaration$1(node) {
      return null;
    },
    visitWarnRule$1(node) {
      return null;
    },
    visitWhileRule$1(node) {
      return this.visitChildren$1(node.children);
    },
    visitChildren$1(children) {
      return A._IterableExtension__search(children, new A.StatementSearchVisitor_visitChildren_closure(this));
    }
  };
  A.StatementSearchVisitor_visitIfRule_closure.prototype = {
    call$1(clause) {
      return A._IterableExtension__search(clause.children, new A.StatementSearchVisitor_visitIfRule__closure0(this.$this));
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("StatementSearchVisitor.T?(IfClause)");
    }
  };
  A.StatementSearchVisitor_visitIfRule__closure0.prototype = {
    call$1(child) {
      return child.accept$1(this.$this);
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("StatementSearchVisitor.T?(Statement)");
    }
  };
  A.StatementSearchVisitor_visitIfRule_closure0.prototype = {
    call$1(lastClause) {
      return A._IterableExtension__search(lastClause.children, new A.StatementSearchVisitor_visitIfRule__closure(this.$this));
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("StatementSearchVisitor.T?(ElseClause)");
    }
  };
  A.StatementSearchVisitor_visitIfRule__closure.prototype = {
    call$1(child) {
      return child.accept$1(this.$this);
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("StatementSearchVisitor.T?(Statement)");
    }
  };
  A.StatementSearchVisitor_visitChildren_closure.prototype = {
    call$1(child) {
      return child.accept$1(this.$this);
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("StatementSearchVisitor.T?(Statement)");
    }
  };
  A.Entry.prototype = {
    compareTo$1(_, other) {
      var t1, t2,
        res = this.target.compareTo$1(0, other.target);
      if (res !== 0)
        return res;
      t1 = this.source;
      t2 = other.source;
      res = B.JSString_methods.compareTo$1(J.toString$0$(t1.file.url), J.toString$0$(t2.file.url));
      if (res !== 0)
        return res;
      return t1.compareTo$1(0, t2);
    },
    $isComparable: 1
  };
  A.Mapping.prototype = {};
  A.SingleMapping.prototype = {
    toJson$1$includeSourceContents(includeSourceContents) {
      var t1, t2, line, column, srcLine, srcColumn, srcUrlId, srcNameId, first, _i, entry, nextLine, i, t3, t4, column0, t5, newUrlId, srcLine0, srcColumn0, srcNameId0, result, _this = this,
        buff = new A.StringBuffer("");
      for (t1 = _this.lines, t2 = t1.length, line = 0, column = 0, srcLine = 0, srcColumn = 0, srcUrlId = 0, srcNameId = 0, first = true, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        entry = t1[_i];
        nextLine = entry.line;
        if (nextLine > line) {
          for (i = line; i < nextLine; ++i)
            buff._contents += ";";
          line = nextLine;
          column = 0;
          first = true;
        }
        for (t3 = J.get$iterator$ax(entry.entries); t3.moveNext$0(); column = column0, first = false) {
          t4 = t3.get$current(t3);
          if (!first)
            buff._contents += ",";
          column0 = t4.column;
          t5 = A.encodeVlq(column0 - column);
          t5 = A.StringBuffer__writeAll(buff._contents, t5, "");
          buff._contents = t5;
          newUrlId = t4.sourceUrlId;
          t5 = A.StringBuffer__writeAll(t5, A.encodeVlq(newUrlId - srcUrlId), "");
          buff._contents = t5;
          srcLine0 = t4.sourceLine;
          t5 = A.StringBuffer__writeAll(t5, A.encodeVlq(srcLine0 - srcLine), "");
          buff._contents = t5;
          srcColumn0 = t4.sourceColumn;
          t5 = A.StringBuffer__writeAll(t5, A.encodeVlq(srcColumn0 - srcColumn), "");
          buff._contents = t5;
          srcNameId0 = t4.sourceNameId;
          if (srcNameId0 == null) {
            srcUrlId = newUrlId;
            srcColumn = srcColumn0;
            srcLine = srcLine0;
            continue;
          }
          buff._contents = A.StringBuffer__writeAll(t5, A.encodeVlq(srcNameId0 - srcNameId), "");
          srcNameId = srcNameId0;
          srcUrlId = newUrlId;
          srcColumn = srcColumn0;
          srcLine = srcLine0;
        }
      }
      t1 = _this.sourceRoot;
      if (t1 == null)
        t1 = "";
      t2 = buff._contents;
      result = A.LinkedHashMap_LinkedHashMap$_literal(["version", 3, "sourceRoot", t1, "sources", _this.urls, "names", _this.names, "mappings", t2.charCodeAt(0) == 0 ? t2 : t2], type$.String, type$.Object);
      t1 = _this.targetUrl;
      if (t1 != null)
        result.$indexSet(0, "file", t1);
      if (includeSourceContents) {
        t1 = _this.files;
        t2 = A._arrayInstanceType(t1)._eval$1("MappedListIterable<1,String?>");
        result.$indexSet(0, "sourcesContent", A.List_List$of(new A.MappedListIterable(t1, new A.SingleMapping_toJson_closure(), t2), true, t2._eval$1("ListIterable.E")));
      }
      _this.extensions.forEach$1(0, new A.SingleMapping_toJson_closure0(result));
      return result;
    },
    toJson$0() {
      return this.toJson$1$includeSourceContents(false);
    },
    toString$0(_) {
      var _this = this,
        t1 = A.getRuntimeType(_this).toString$0(0) + " : [" + "targetUrl: " + A.S(_this.targetUrl) + ", sourceRoot: " + A.S(_this.sourceRoot) + ", urls: " + A.S(_this.urls) + ", names: " + A.S(_this.names) + ", lines: " + A.S(_this.lines) + "]";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.SingleMapping_SingleMapping$fromEntries_closure.prototype = {
    call$0() {
      return this.urls.__js_helper$_length;
    },
    $signature: 12
  };
  A.SingleMapping_SingleMapping$fromEntries_closure0.prototype = {
    call$0() {
      return this.sourceEntry.source.file;
    },
    $signature: 271
  };
  A.SingleMapping_SingleMapping$fromEntries_closure1.prototype = {
    call$1(i) {
      return this.files.$index(0, i);
    },
    $signature: 272
  };
  A.SingleMapping_toJson_closure.prototype = {
    call$1(file) {
      return file == null ? null : A.String_String$fromCharCodes(B.NativeUint32List_methods.sublist$2(file._decodedChars, 0, null), 0, null);
    },
    $signature: 273
  };
  A.SingleMapping_toJson_closure0.prototype = {
    call$2($name, value) {
      this.result.$indexSet(0, $name, value);
      return value;
    },
    $signature: 255
  };
  A.TargetLineEntry.prototype = {
    toString$0(_) {
      return A.getRuntimeType(this).toString$0(0) + ": " + this.line + " " + A.S(this.entries);
    }
  };
  A.TargetEntry.prototype = {
    toString$0(_) {
      var _this = this;
      return A.getRuntimeType(_this).toString$0(0) + ": (" + _this.column + ", " + _this.sourceUrlId + ", " + _this.sourceLine + ", " + _this.sourceColumn + ", " + A.S(_this.sourceNameId) + ")";
    }
  };
  A.SourceFile.prototype = {
    get$length(_) {
      return this._decodedChars.length;
    },
    get$lines() {
      return this._lineStarts.length;
    },
    SourceFile$decoded$2$url(decodedChars, url) {
      var t1, t2, t3, i, c, j;
      for (t1 = this._decodedChars, t2 = t1.length, t3 = this._lineStarts, i = 0; i < t2; ++i) {
        c = t1[i];
        if (c === 13) {
          j = i + 1;
          if (j >= t2 || t1[j] !== 10)
            c = 10;
        }
        if (c === 10)
          t3.push(i + 1);
      }
    },
    span$2(_, start, end) {
      return A._FileSpan$(this, start, end == null ? this._decodedChars.length : end);
    },
    span$1($receiver, start) {
      return this.span$2($receiver, start, null);
    },
    getLine$1(offset) {
      var t1, _this = this;
      if (offset < 0)
        throw A.wrapException(A.RangeError$("Offset may not be negative, was " + offset + "."));
      else if (offset > _this._decodedChars.length)
        throw A.wrapException(A.RangeError$("Offset " + offset + string$.x20must_ + _this.get$length(_this) + "."));
      t1 = _this._lineStarts;
      if (offset < B.JSArray_methods.get$first(t1))
        return -1;
      if (offset >= B.JSArray_methods.get$last(t1))
        return t1.length - 1;
      if (_this._isNearCachedLine$1(offset)) {
        t1 = _this._cachedLine;
        t1.toString;
        return t1;
      }
      return _this._cachedLine = _this._binarySearch$1(offset) - 1;
    },
    _isNearCachedLine$1(offset) {
      var t2, t3,
        t1 = this._cachedLine;
      if (t1 == null)
        return false;
      t2 = this._lineStarts;
      if (offset < t2[t1])
        return false;
      t3 = t2.length;
      if (t1 >= t3 - 1 || offset < t2[t1 + 1])
        return true;
      if (t1 >= t3 - 2 || offset < t2[t1 + 2]) {
        this._cachedLine = t1 + 1;
        return true;
      }
      return false;
    },
    _binarySearch$1(offset) {
      var min, half,
        t1 = this._lineStarts,
        max = t1.length - 1;
      for (min = 0; min < max;) {
        half = min + B.JSInt_methods._tdivFast$1(max - min, 2);
        if (t1[half] > offset)
          max = half;
        else
          min = half + 1;
      }
      return max;
    },
    getColumn$1(offset) {
      var line, lineStart, _this = this;
      if (offset < 0)
        throw A.wrapException(A.RangeError$("Offset may not be negative, was " + offset + "."));
      else if (offset > _this._decodedChars.length)
        throw A.wrapException(A.RangeError$("Offset " + offset + " must be not be greater than the number of characters in the file, " + _this.get$length(_this) + "."));
      line = _this.getLine$1(offset);
      lineStart = _this._lineStarts[line];
      if (lineStart > offset)
        throw A.wrapException(A.RangeError$("Line " + line + " comes after offset " + offset + "."));
      return offset - lineStart;
    },
    getOffset$1(line) {
      var t1, t2, result, t3;
      if (line < 0)
        throw A.wrapException(A.RangeError$("Line may not be negative, was " + line + "."));
      else {
        t1 = this._lineStarts;
        t2 = t1.length;
        if (line >= t2)
          throw A.wrapException(A.RangeError$("Line " + line + " must be less than the number of lines in the file, " + this.get$lines() + "."));
      }
      result = t1[line];
      if (result <= this._decodedChars.length) {
        t3 = line + 1;
        t1 = t3 < t2 && result >= t1[t3];
      } else
        t1 = true;
      if (t1)
        throw A.wrapException(A.RangeError$("Line " + line + " doesn't have 0 columns."));
      return result;
    }
  };
  A.FileLocation.prototype = {
    get$sourceUrl(_) {
      return this.file.url;
    },
    get$line() {
      return this.file.getLine$1(this.offset);
    },
    get$column() {
      return this.file.getColumn$1(this.offset);
    },
    FileLocation$_$2(file, offset) {
      var t2,
        t1 = this.offset;
      if (t1 < 0)
        throw A.wrapException(A.RangeError$("Offset may not be negative, was " + t1 + "."));
      else {
        t2 = this.file;
        if (t1 > t2._decodedChars.length)
          throw A.wrapException(A.RangeError$("Offset " + t1 + string$.x20must_ + t2.get$length(t2) + "."));
      }
    },
    pointSpan$0() {
      var t1 = this.offset;
      return A._FileSpan$(this.file, t1, t1);
    },
    get$offset() {
      return this.offset;
    }
  };
  A._FileSpan.prototype = {
    get$sourceUrl(_) {
      return this.file.url;
    },
    get$length(_) {
      return this._end - this._file$_start;
    },
    get$start(_) {
      return A.FileLocation$_(this.file, this._file$_start);
    },
    get$end(_) {
      return A.FileLocation$_(this.file, this._end);
    },
    get$text() {
      return A.String_String$fromCharCodes(B.NativeUint32List_methods.sublist$2(this.file._decodedChars, this._file$_start, this._end), 0, null);
    },
    get$context(_) {
      var _this = this,
        t1 = _this.file,
        endOffset = _this._end,
        endLine = t1.getLine$1(endOffset);
      if (t1.getColumn$1(endOffset) === 0 && endLine !== 0) {
        if (endOffset - _this._file$_start === 0)
          return endLine === t1._lineStarts.length - 1 ? "" : A.String_String$fromCharCodes(B.NativeUint32List_methods.sublist$2(t1._decodedChars, t1.getOffset$1(endLine), t1.getOffset$1(endLine + 1)), 0, null);
      } else
        endOffset = endLine === t1._lineStarts.length - 1 ? t1._decodedChars.length : t1.getOffset$1(endLine + 1);
      return A.String_String$fromCharCodes(B.NativeUint32List_methods.sublist$2(t1._decodedChars, t1.getOffset$1(t1.getLine$1(_this._file$_start)), endOffset), 0, null);
    },
    _FileSpan$3(file, _start, _end) {
      var t3,
        t1 = this._end,
        t2 = this._file$_start;
      if (t1 < t2)
        throw A.wrapException(A.ArgumentError$("End " + t1 + " must come after start " + t2 + ".", null));
      else {
        t3 = this.file;
        if (t1 > t3._decodedChars.length)
          throw A.wrapException(A.RangeError$("End " + t1 + string$.x20must_ + t3.get$length(t3) + "."));
        else if (t2 < 0)
          throw A.wrapException(A.RangeError$("Start may not be negative, was " + t2 + "."));
      }
    },
    compareTo$1(_, other) {
      var result;
      if (!(other instanceof A._FileSpan))
        return this.super$SourceSpanMixin$compareTo(0, other);
      result = B.JSInt_methods.compareTo$1(this._file$_start, other._file$_start);
      return result === 0 ? B.JSInt_methods.compareTo$1(this._end, other._end) : result;
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (!type$.FileSpan._is(other))
        return _this.super$SourceSpanMixin$$eq(0, other);
      return _this._file$_start === other._file$_start && _this._end === other._end && J.$eq$(_this.file.url, other.file.url);
    },
    get$hashCode(_) {
      return A.Object_hash(this._file$_start, this._end, this.file.url);
    },
    expand$1(_, other) {
      var start, _this = this,
        t1 = _this.file;
      if (!J.$eq$(t1.url, other.file.url))
        throw A.wrapException(A.ArgumentError$('Source URLs "' + A.S(_this.get$sourceUrl(_this)) + '" and  "' + A.S(other.get$sourceUrl(other)) + "\" don't match.", null));
      start = Math.min(_this._file$_start, other._file$_start);
      return A._FileSpan$(t1, start, Math.max(_this._end, other._end));
    },
    $isFileSpan: 1,
    $isSourceSpanWithContext: 1
  };
  A.Highlighter.prototype = {
    highlight$0() {
      var t2, highlightsByColumn, t3, t4, i, line, lastLine, t5, t6, t7, t8, t9, t10, t11, index, primaryIdx, primary, _i, highlight, _this = this, _null = null,
        t1 = _this._lines;
      _this._writeFileStart$1(B.JSArray_methods.get$first(t1).url);
      t2 = _this._maxMultilineSpans;
      highlightsByColumn = A.List_List$filled(t2, _null, false, type$.nullable__Highlight);
      for (t3 = _this._highlighter$_buffer, t2 = t2 !== 0, t4 = _this._primaryColor, i = 0; i < t1.length; ++i) {
        line = t1[i];
        if (i > 0) {
          lastLine = t1[i - 1];
          t5 = lastLine.url;
          t6 = line.url;
          if (!J.$eq$(t5, t6)) {
            _this._writeSidebar$1$end($._glyphs.get$upEnd());
            t3._contents += "\n";
            _this._writeFileStart$1(t6);
          } else if (lastLine.number + 1 !== line.number) {
            _this._writeSidebar$1$text("...");
            t3._contents += "\n";
          }
        }
        for (t5 = line.highlights, t6 = new A.ReversedListIterable(t5, A._arrayInstanceType(t5)._eval$1("ReversedListIterable<1>")), t6 = new A.ListIterator(t6, t6.get$length(t6)), t7 = A._instanceType(t6)._precomputed1, t8 = line.number, t9 = line.text; t6.moveNext$0();) {
          t10 = t6.__internal$_current;
          if (t10 == null)
            t10 = t7._as(t10);
          t11 = t10.span;
          if (t11.get$start(t11).get$line() !== t11.get$end(t11).get$line() && t11.get$start(t11).get$line() === t8 && _this._isOnlyWhitespace$1(B.JSString_methods.substring$2(t9, 0, t11.get$start(t11).get$column()))) {
            index = B.JSArray_methods.indexOf$1(highlightsByColumn, _null);
            if (index < 0)
              A.throwExpression(A.ArgumentError$(A.S(highlightsByColumn) + " contains no null elements.", _null));
            highlightsByColumn[index] = t10;
          }
        }
        _this._writeSidebar$1$line(t8);
        t3._contents += " ";
        _this._writeMultilineHighlights$2(line, highlightsByColumn);
        if (t2)
          t3._contents += " ";
        primaryIdx = B.JSArray_methods.indexWhere$1(t5, new A.Highlighter_highlight_closure());
        primary = primaryIdx === -1 ? _null : t5[primaryIdx];
        t6 = primary != null;
        if (t6) {
          t7 = primary.span;
          t10 = t7.get$start(t7).get$line() === t8 ? t7.get$start(t7).get$column() : 0;
          _this._writeHighlightedText$4$color(t9, t10, t7.get$end(t7).get$line() === t8 ? t7.get$end(t7).get$column() : t9.length, t4);
        } else
          _this._writeText$1(t9);
        t3._contents += "\n";
        if (t6)
          _this._writeIndicator$3(line, primary, highlightsByColumn);
        for (t6 = t5.length, _i = 0; _i < t5.length; t5.length === t6 || (0, A.throwConcurrentModificationError)(t5), ++_i) {
          highlight = t5[_i];
          if (highlight.isPrimary)
            continue;
          _this._writeIndicator$3(line, highlight, highlightsByColumn);
        }
      }
      _this._writeSidebar$1$end($._glyphs.get$upEnd());
      t1 = t3._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _writeFileStart$1(url) {
      var _this = this,
        t1 = !_this._multipleFiles || !type$.Uri._is(url),
        t2 = $._glyphs;
      if (t1)
        _this._writeSidebar$1$end(t2.get$downEnd());
      else {
        _this._writeSidebar$1$end(t2.get$topLeftCorner());
        _this._colorize$2$color(new A.Highlighter__writeFileStart_closure(_this), "\x1b[34m");
        _this._highlighter$_buffer._contents += " " + $.$get$context().prettyUri$1(url);
      }
      _this._highlighter$_buffer._contents += "\n";
    },
    _writeMultilineHighlights$3$current(line, highlightsByColumn, current) {
      var t1, currentColor, t2, t3, t4, t5, foundCurrent, _i, highlight, t6, startLine, t7, endLine, _this = this, _box_0 = {};
      _box_0.openedOnThisLine = false;
      _box_0.openedOnThisLineColor = null;
      t1 = current == null;
      if (t1)
        currentColor = null;
      else
        currentColor = current.isPrimary ? _this._primaryColor : _this._secondaryColor;
      for (t2 = highlightsByColumn.length, t3 = _this._secondaryColor, t1 = !t1, t4 = _this._primaryColor, t5 = _this._highlighter$_buffer, foundCurrent = false, _i = 0; _i < t2; ++_i) {
        highlight = highlightsByColumn[_i];
        t6 = highlight == null;
        if (t6)
          startLine = null;
        else {
          t7 = highlight.span;
          startLine = t7.get$start(t7).get$line();
        }
        if (t6)
          endLine = null;
        else {
          t7 = highlight.span;
          endLine = t7.get$end(t7).get$line();
        }
        if (t1 && highlight === current) {
          _this._colorize$2$color(new A.Highlighter__writeMultilineHighlights_closure(_this, startLine, line), currentColor);
          foundCurrent = true;
        } else if (foundCurrent)
          _this._colorize$2$color(new A.Highlighter__writeMultilineHighlights_closure0(_this, highlight), currentColor);
        else if (t6)
          if (_box_0.openedOnThisLine)
            _this._colorize$2$color(new A.Highlighter__writeMultilineHighlights_closure1(_this), _box_0.openedOnThisLineColor);
          else
            t5._contents += " ";
        else {
          t6 = highlight.isPrimary ? t4 : t3;
          _this._colorize$2$color(new A.Highlighter__writeMultilineHighlights_closure2(_box_0, _this, current, startLine, line, highlight, endLine), t6);
        }
      }
    },
    _writeMultilineHighlights$2(line, highlightsByColumn) {
      return this._writeMultilineHighlights$3$current(line, highlightsByColumn, null);
    },
    _writeHighlightedText$4$color(text, startColumn, endColumn, color) {
      var _this = this;
      _this._writeText$1(B.JSString_methods.substring$2(text, 0, startColumn));
      _this._colorize$2$color(new A.Highlighter__writeHighlightedText_closure(_this, text, startColumn, endColumn), color);
      _this._writeText$1(B.JSString_methods.substring$2(text, endColumn, text.length));
    },
    _writeIndicator$3(line, highlight, highlightsByColumn) {
      var t2, coversWholeLine, _this = this,
        color = highlight.isPrimary ? _this._primaryColor : _this._secondaryColor,
        t1 = highlight.span;
      if (t1.get$start(t1).get$line() === t1.get$end(t1).get$line()) {
        _this._writeSidebar$0();
        t1 = _this._highlighter$_buffer;
        t1._contents += " ";
        _this._writeMultilineHighlights$3$current(line, highlightsByColumn, highlight);
        if (highlightsByColumn.length !== 0)
          t1._contents += " ";
        _this._colorize$2$color(new A.Highlighter__writeIndicator_closure(_this, line, highlight), color);
        t1._contents += "\n";
      } else {
        t2 = line.number;
        if (t1.get$start(t1).get$line() === t2) {
          if (B.JSArray_methods.contains$1(highlightsByColumn, highlight))
            return;
          A.replaceFirstNull(highlightsByColumn, highlight);
          _this._writeSidebar$0();
          t1 = _this._highlighter$_buffer;
          t1._contents += " ";
          _this._writeMultilineHighlights$3$current(line, highlightsByColumn, highlight);
          _this._colorize$2$color(new A.Highlighter__writeIndicator_closure0(_this, line, highlight), color);
          t1._contents += "\n";
        } else if (t1.get$end(t1).get$line() === t2) {
          coversWholeLine = t1.get$end(t1).get$column() === line.text.length;
          if (coversWholeLine && highlight.label == null) {
            A.replaceWithNull(highlightsByColumn, highlight);
            return;
          }
          _this._writeSidebar$0();
          t1 = _this._highlighter$_buffer;
          t1._contents += " ";
          _this._writeMultilineHighlights$3$current(line, highlightsByColumn, highlight);
          _this._colorize$2$color(new A.Highlighter__writeIndicator_closure1(_this, coversWholeLine, line, highlight), color);
          t1._contents += "\n";
          A.replaceWithNull(highlightsByColumn, highlight);
        }
      }
    },
    _writeArrow$3$beginning(line, column, beginning) {
      var t2,
        t1 = beginning ? 0 : 1,
        tabs = this._countTabs$1(B.JSString_methods.substring$2(line.text, 0, column + t1));
      t1 = this._highlighter$_buffer;
      t2 = t1._contents += B.JSString_methods.$mul($._glyphs.get$horizontalLine(), 1 + column + tabs * 3);
      t1._contents = t2 + "^";
    },
    _writeArrow$2(line, column) {
      return this._writeArrow$3$beginning(line, column, true);
    },
    _writeText$1(text) {
      var t1, t2, t3, t4;
      for (t1 = new A.CodeUnits(text), t1 = new A.ListIterator(t1, t1.get$length(t1)), t2 = this._highlighter$_buffer, t3 = A._instanceType(t1)._precomputed1; t1.moveNext$0();) {
        t4 = t1.__internal$_current;
        if (t4 == null)
          t4 = t3._as(t4);
        if (t4 === 9)
          t2._contents += B.JSString_methods.$mul(" ", 4);
        else
          t2._contents += A.Primitives_stringFromCharCode(t4);
      }
    },
    _writeSidebar$3$end$line$text(end, line, text) {
      var t1 = {};
      t1.text = text;
      if (line != null)
        t1.text = B.JSInt_methods.toString$0(line + 1);
      this._colorize$2$color(new A.Highlighter__writeSidebar_closure(t1, this, end), "\x1b[34m");
    },
    _writeSidebar$1$end(end) {
      return this._writeSidebar$3$end$line$text(end, null, null);
    },
    _writeSidebar$1$text(text) {
      return this._writeSidebar$3$end$line$text(null, null, text);
    },
    _writeSidebar$1$line(line) {
      return this._writeSidebar$3$end$line$text(null, line, null);
    },
    _writeSidebar$0() {
      return this._writeSidebar$3$end$line$text(null, null, null);
    },
    _countTabs$1(text) {
      var t1, t2, count, t3;
      for (t1 = new A.CodeUnits(text), t1 = new A.ListIterator(t1, t1.get$length(t1)), t2 = A._instanceType(t1)._precomputed1, count = 0; t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if ((t3 == null ? t2._as(t3) : t3) === 9)
          ++count;
      }
      return count;
    },
    _isOnlyWhitespace$1(text) {
      var t1, t2, t3;
      for (t1 = new A.CodeUnits(text), t1 = new A.ListIterator(t1, t1.get$length(t1)), t2 = A._instanceType(t1)._precomputed1; t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        if (t3 !== 32 && t3 !== 9)
          return false;
      }
      return true;
    },
    _colorize$2$color(callback, color) {
      var t1 = this._primaryColor != null;
      if (t1 && color != null)
        this._highlighter$_buffer._contents += color;
      callback.call$0();
      if (t1 && color != null)
        this._highlighter$_buffer._contents += "\x1b[0m";
    }
  };
  A.Highlighter_closure.prototype = {
    call$0() {
      var t1 = this.color,
        t2 = J.getInterceptor$(t1);
      if (t2.$eq(t1, true))
        return "\x1b[31m";
      if (t2.$eq(t1, false))
        return null;
      return A._asStringQ(t1);
    },
    $signature: 41
  };
  A.Highlighter$__closure.prototype = {
    call$1(line) {
      var t1 = line.highlights;
      t1 = new A.WhereIterable(t1, new A.Highlighter$___closure(), A._arrayInstanceType(t1)._eval$1("WhereIterable<1>"));
      return t1.get$length(t1);
    },
    $signature: 274
  };
  A.Highlighter$___closure.prototype = {
    call$1(highlight) {
      var t1 = highlight.span;
      return t1.get$start(t1).get$line() !== t1.get$end(t1).get$line();
    },
    $signature: 138
  };
  A.Highlighter$__closure0.prototype = {
    call$1(line) {
      return line.url;
    },
    $signature: 276
  };
  A.Highlighter__collateLines_closure.prototype = {
    call$1(highlight) {
      var t1 = highlight.span;
      t1 = t1.get$sourceUrl(t1);
      return t1 == null ? new A.Object() : t1;
    },
    $signature: 277
  };
  A.Highlighter__collateLines_closure0.prototype = {
    call$2(highlight1, highlight2) {
      return highlight1.span.compareTo$1(0, highlight2.span);
    },
    $signature: 278
  };
  A.Highlighter__collateLines_closure1.prototype = {
    call$1(entry) {
      var t1, t2, t3, t4, context, t5, linesBeforeSpan, lineNumber, _i, line, activeHighlights, highlightIndex, oldHighlightLength,
        url = entry.key,
        highlightsForFile = entry.value,
        lines = A._setArrayType([], type$.JSArray__Line);
      for (t1 = J.getInterceptor$ax(highlightsForFile), t2 = t1.get$iterator(highlightsForFile), t3 = type$.JSArray__Highlight; t2.moveNext$0();) {
        t4 = t2.get$current(t2).span;
        context = t4.get$context(t4);
        t5 = A.findLineStart(context, t4.get$text(), t4.get$start(t4).get$column());
        t5.toString;
        t5 = B.JSString_methods.allMatches$1("\n", B.JSString_methods.substring$2(context, 0, t5));
        linesBeforeSpan = t5.get$length(t5);
        lineNumber = t4.get$start(t4).get$line() - linesBeforeSpan;
        for (t4 = context.split("\n"), t5 = t4.length, _i = 0; _i < t5; ++_i) {
          line = t4[_i];
          if (lines.length === 0 || lineNumber > B.JSArray_methods.get$last(lines).number)
            lines.push(new A._Line(line, lineNumber, url, A._setArrayType([], t3)));
          ++lineNumber;
        }
      }
      activeHighlights = A._setArrayType([], t3);
      for (t2 = lines.length, highlightIndex = 0, _i = 0; _i < lines.length; lines.length === t2 || (0, A.throwConcurrentModificationError)(lines), ++_i) {
        line = lines[_i];
        if (!!activeHighlights.fixed$length)
          A.throwExpression(A.UnsupportedError$("removeWhere"));
        B.JSArray_methods._removeWhere$2(activeHighlights, new A.Highlighter__collateLines__closure(line), true);
        oldHighlightLength = activeHighlights.length;
        for (t3 = t1.skip$1(highlightsForFile, highlightIndex), t3 = t3.get$iterator(t3); t3.moveNext$0();) {
          t4 = t3.get$current(t3);
          t5 = t4.span;
          if (t5.get$start(t5).get$line() > line.number)
            break;
          activeHighlights.push(t4);
        }
        highlightIndex += activeHighlights.length - oldHighlightLength;
        B.JSArray_methods.addAll$1(line.highlights, activeHighlights);
      }
      return lines;
    },
    $signature: 279
  };
  A.Highlighter__collateLines__closure.prototype = {
    call$1(highlight) {
      var t1 = highlight.span;
      return t1.get$end(t1).get$line() < this.line.number;
    },
    $signature: 138
  };
  A.Highlighter_highlight_closure.prototype = {
    call$1(highlight) {
      return highlight.isPrimary;
    },
    $signature: 138
  };
  A.Highlighter__writeFileStart_closure.prototype = {
    call$0() {
      this.$this._highlighter$_buffer._contents += B.JSString_methods.$mul($._glyphs.get$horizontalLine(), 2) + ">";
      return null;
    },
    $signature: 0
  };
  A.Highlighter__writeMultilineHighlights_closure.prototype = {
    call$0() {
      var t1 = $._glyphs;
      t1 = this.startLine === this.line.number ? t1.get$topLeftCorner() : t1.get$bottomLeftCorner();
      this.$this._highlighter$_buffer._contents += t1;
    },
    $signature: 0
  };
  A.Highlighter__writeMultilineHighlights_closure0.prototype = {
    call$0() {
      var t1 = $._glyphs;
      t1 = this.highlight == null ? t1.get$horizontalLine() : t1.get$cross();
      this.$this._highlighter$_buffer._contents += t1;
    },
    $signature: 0
  };
  A.Highlighter__writeMultilineHighlights_closure1.prototype = {
    call$0() {
      this.$this._highlighter$_buffer._contents += $._glyphs.get$horizontalLine();
      return null;
    },
    $signature: 0
  };
  A.Highlighter__writeMultilineHighlights_closure2.prototype = {
    call$0() {
      var _this = this,
        t1 = _this._box_0,
        t2 = t1.openedOnThisLine,
        t3 = $._glyphs,
        vertical = t2 ? t3.get$cross() : t3.get$verticalLine();
      if (_this.current != null)
        _this.$this._highlighter$_buffer._contents += vertical;
      else {
        t2 = _this.line;
        t3 = t2.number;
        if (_this.startLine === t3) {
          t2 = _this.$this;
          t2._colorize$2$color(new A.Highlighter__writeMultilineHighlights__closure(t1, t2), t1.openedOnThisLineColor);
          t1.openedOnThisLine = true;
          if (t1.openedOnThisLineColor == null)
            t1.openedOnThisLineColor = _this.highlight.isPrimary ? t2._primaryColor : t2._secondaryColor;
        } else {
          if (_this.endLine === t3) {
            t3 = _this.highlight.span;
            t2 = t3.get$end(t3).get$column() === t2.text.length;
          } else
            t2 = false;
          t3 = _this.$this;
          if (t2) {
            t1 = _this.highlight.label == null ? $._glyphs.glyphOrAscii$2("\u2514", "\\") : vertical;
            t3._highlighter$_buffer._contents += t1;
          } else
            t3._colorize$2$color(new A.Highlighter__writeMultilineHighlights__closure0(t3, vertical), t1.openedOnThisLineColor);
        }
      }
    },
    $signature: 0
  };
  A.Highlighter__writeMultilineHighlights__closure.prototype = {
    call$0() {
      var t1 = this._box_0.openedOnThisLine ? "\u252c" : "\u250c";
      this.$this._highlighter$_buffer._contents += $._glyphs.glyphOrAscii$2(t1, "/");
    },
    $signature: 0
  };
  A.Highlighter__writeMultilineHighlights__closure0.prototype = {
    call$0() {
      this.$this._highlighter$_buffer._contents += this.vertical;
    },
    $signature: 0
  };
  A.Highlighter__writeHighlightedText_closure.prototype = {
    call$0() {
      var _this = this;
      return _this.$this._writeText$1(B.JSString_methods.substring$2(_this.text, _this.startColumn, _this.endColumn));
    },
    $signature: 0
  };
  A.Highlighter__writeIndicator_closure.prototype = {
    call$0() {
      var tabsBefore, tabsInside,
        t1 = this.$this,
        t2 = this.highlight,
        t3 = t2.span,
        t4 = t2.isPrimary ? "^" : $._glyphs.get$horizontalLineBold(),
        startColumn = t3.get$start(t3).get$column(),
        endColumn = t3.get$end(t3).get$column();
      t3 = this.line.text;
      tabsBefore = t1._countTabs$1(B.JSString_methods.substring$2(t3, 0, startColumn));
      tabsInside = t1._countTabs$1(B.JSString_methods.substring$2(t3, startColumn, endColumn));
      startColumn += tabsBefore * 3;
      t1 = t1._highlighter$_buffer;
      t1._contents += B.JSString_methods.$mul(" ", startColumn);
      t4 = t1._contents += B.JSString_methods.$mul(t4, Math.max(endColumn + (tabsBefore + tabsInside) * 3 - startColumn, 1));
      t2 = t2.label;
      if (t2 != null)
        t1._contents = t4 + (" " + t2);
    },
    $signature: 0
  };
  A.Highlighter__writeIndicator_closure0.prototype = {
    call$0() {
      var t1 = this.highlight.span;
      return this.$this._writeArrow$2(this.line, t1.get$start(t1).get$column());
    },
    $signature: 0
  };
  A.Highlighter__writeIndicator_closure1.prototype = {
    call$0() {
      var t2, _this = this,
        t1 = _this.$this;
      if (_this.coversWholeLine)
        t1._highlighter$_buffer._contents += B.JSString_methods.$mul($._glyphs.get$horizontalLine(), 3);
      else {
        t2 = _this.highlight.span;
        t1._writeArrow$3$beginning(_this.line, Math.max(t2.get$end(t2).get$column() - 1, 0), false);
      }
      t2 = _this.highlight.label;
      if (t2 != null)
        t1._highlighter$_buffer._contents += " " + t2;
    },
    $signature: 0
  };
  A.Highlighter__writeSidebar_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._highlighter$_buffer,
        t3 = this._box_0.text;
      if (t3 == null)
        t3 = "";
      t2._contents += B.JSString_methods.padRight$1(t3, t1._paddingBeforeSidebar);
      t1 = this.end;
      t2._contents += t1 == null ? $._glyphs.get$verticalLine() : t1;
    },
    $signature: 0
  };
  A._Highlight.prototype = {
    toString$0(_) {
      var t1 = this.isPrimary ? "" + "primary " : "",
        t2 = this.span;
      t2 = t1 + ("" + t2.get$start(t2).get$line() + ":" + t2.get$start(t2).get$column() + "-" + t2.get$end(t2).get$line() + ":" + t2.get$end(t2).get$column());
      t1 = this.label;
      t1 = t1 != null ? t2 + (" (" + t1 + ")") : t2;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A._Highlight_closure.prototype = {
    call$0() {
      var t2, t3, t4, t5,
        t1 = this.span;
      if (!(type$.SourceSpanWithContext._is(t1) && A.findLineStart(t1.get$context(t1), t1.get$text(), t1.get$start(t1).get$column()) != null)) {
        t2 = A.SourceLocation$(t1.get$start(t1).get$offset(), 0, 0, t1.get$sourceUrl(t1));
        t3 = t1.get$end(t1).get$offset();
        t4 = t1.get$sourceUrl(t1);
        t5 = A.countCodeUnits(t1.get$text(), 10);
        t1 = A.SourceSpanWithContext$(t2, A.SourceLocation$(t3, A._Highlight__lastLineLength(t1.get$text()), t5, t4), t1.get$text(), t1.get$text());
      }
      return A._Highlight__normalizeEndOfLine(A._Highlight__normalizeTrailingNewline(A._Highlight__normalizeNewlines(t1)));
    },
    $signature: 280
  };
  A._Line.prototype = {
    toString$0(_) {
      return "" + this.number + ': "' + this.text + '" (' + B.JSArray_methods.join$1(this.highlights, ", ") + ")";
    }
  };
  A.SourceLocation.prototype = {
    distance$1(other) {
      var t1 = this.sourceUrl;
      if (!J.$eq$(t1, other.get$sourceUrl(other)))
        throw A.wrapException(A.ArgumentError$('Source URLs "' + A.S(t1) + '" and "' + A.S(other.get$sourceUrl(other)) + "\" don't match.", null));
      return Math.abs(this.offset - other.get$offset());
    },
    compareTo$1(_, other) {
      var t1 = this.sourceUrl;
      if (!J.$eq$(t1, other.get$sourceUrl(other)))
        throw A.wrapException(A.ArgumentError$('Source URLs "' + A.S(t1) + '" and "' + A.S(other.get$sourceUrl(other)) + "\" don't match.", null));
      return this.offset - other.get$offset();
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return type$.SourceLocation._is(other) && J.$eq$(this.sourceUrl, other.get$sourceUrl(other)) && this.offset === other.get$offset();
    },
    get$hashCode(_) {
      var t1 = this.sourceUrl;
      t1 = t1 == null ? null : t1.get$hashCode(t1);
      if (t1 == null)
        t1 = 0;
      return t1 + this.offset;
    },
    toString$0(_) {
      var _this = this,
        t1 = A.getRuntimeType(_this).toString$0(0),
        source = _this.sourceUrl;
      return "<" + t1 + ": " + _this.offset + " " + (A.S(source == null ? "unknown source" : source) + ":" + (_this.line + 1) + ":" + (_this.column + 1)) + ">";
    },
    $isComparable: 1,
    get$sourceUrl(receiver) {
      return this.sourceUrl;
    },
    get$offset() {
      return this.offset;
    },
    get$line() {
      return this.line;
    },
    get$column() {
      return this.column;
    }
  };
  A.SourceLocationMixin.prototype = {
    distance$1(other) {
      var _this = this;
      if (!J.$eq$(_this.file.url, other.get$sourceUrl(other)))
        throw A.wrapException(A.ArgumentError$('Source URLs "' + A.S(_this.get$sourceUrl(_this)) + '" and "' + A.S(other.get$sourceUrl(other)) + "\" don't match.", null));
      return Math.abs(_this.offset - other.get$offset());
    },
    compareTo$1(_, other) {
      var _this = this;
      if (!J.$eq$(_this.file.url, other.get$sourceUrl(other)))
        throw A.wrapException(A.ArgumentError$('Source URLs "' + A.S(_this.get$sourceUrl(_this)) + '" and "' + A.S(other.get$sourceUrl(other)) + "\" don't match.", null));
      return _this.offset - other.get$offset();
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return type$.SourceLocation._is(other) && J.$eq$(this.file.url, other.get$sourceUrl(other)) && this.offset === other.get$offset();
    },
    get$hashCode(_) {
      var t1 = this.file.url;
      t1 = t1 == null ? null : t1.get$hashCode(t1);
      if (t1 == null)
        t1 = 0;
      return t1 + this.offset;
    },
    toString$0(_) {
      var t1 = A.getRuntimeType(this).toString$0(0),
        t2 = this.offset,
        t3 = this.file,
        source = t3.url;
      return "<" + t1 + ": " + t2 + " " + (A.S(source == null ? "unknown source" : source) + ":" + (t3.getLine$1(t2) + 1) + ":" + (t3.getColumn$1(t2) + 1)) + ">";
    },
    $isComparable: 1,
    $isSourceLocation: 1
  };
  A.SourceSpanBase.prototype = {
    SourceSpanBase$3(start, end, text) {
      var t3,
        t1 = this.end,
        t2 = this.start;
      if (!J.$eq$(t1.get$sourceUrl(t1), t2.get$sourceUrl(t2)))
        throw A.wrapException(A.ArgumentError$('Source URLs "' + A.S(t2.get$sourceUrl(t2)) + '" and  "' + A.S(t1.get$sourceUrl(t1)) + "\" don't match.", null));
      else if (t1.get$offset() < t2.get$offset())
        throw A.wrapException(A.ArgumentError$("End " + t1.toString$0(0) + " must come after start " + t2.toString$0(0) + ".", null));
      else {
        t3 = this.text;
        if (t3.length !== t2.distance$1(t1))
          throw A.wrapException(A.ArgumentError$('Text "' + t3 + '" must be ' + t2.distance$1(t1) + " characters long.", null));
      }
    },
    get$start(receiver) {
      return this.start;
    },
    get$end(receiver) {
      return this.end;
    },
    get$text() {
      return this.text;
    }
  };
  A.SourceSpanException.prototype = {
    get$message(_) {
      return this._span_exception$_message;
    },
    get$span(_) {
      return this._span;
    },
    toString$1$color(_, color) {
      var _this = this;
      _this.get$span(_this);
      return "Error on " + _this.get$span(_this).message$2$color(0, _this._span_exception$_message, color);
    },
    toString$0($receiver) {
      return this.toString$1$color($receiver, null);
    },
    $isException: 1
  };
  A.SourceSpanFormatException.prototype = {$isFormatException: 1,
    get$source() {
      return this.source;
    }
  };
  A.SourceSpanMixin.prototype = {
    get$sourceUrl(_) {
      var t1 = this.get$start(this);
      return t1.get$sourceUrl(t1);
    },
    get$length(_) {
      var _this = this;
      return _this.get$end(_this).get$offset() - _this.get$start(_this).get$offset();
    },
    compareTo$1(_, other) {
      var _this = this,
        result = _this.get$start(_this).compareTo$1(0, other.get$start(other));
      return result === 0 ? _this.get$end(_this).compareTo$1(0, other.get$end(other)) : result;
    },
    message$2$color(_, message, color) {
      var t2, highlight, _this = this,
        t1 = "" + ("line " + (_this.get$start(_this).get$line() + 1) + ", column " + (_this.get$start(_this).get$column() + 1));
      if (_this.get$sourceUrl(_this) != null) {
        t2 = _this.get$sourceUrl(_this);
        t2 = t1 + (" of " + $.$get$context().prettyUri$1(t2));
        t1 = t2;
      }
      t1 += ": " + message;
      highlight = _this.highlight$1$color(color);
      if (highlight.length !== 0)
        t1 = t1 + "\n" + highlight;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    message$1($receiver, message) {
      return this.message$2$color($receiver, message, null);
    },
    highlight$1$color(color) {
      var _this = this;
      if (!type$.SourceSpanWithContext._is(_this) && _this.get$length(_this) === 0)
        return "";
      return A.Highlighter$(_this, color).highlight$0();
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return type$.SourceSpan._is(other) && _this.get$start(_this).$eq(0, other.get$start(other)) && _this.get$end(_this).$eq(0, other.get$end(other));
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.get$start(_this), _this.get$end(_this), B.C_SentinelValue);
    },
    toString$0(_) {
      var _this = this;
      return "<" + A.getRuntimeType(_this).toString$0(0) + ": from " + _this.get$start(_this).toString$0(0) + " to " + _this.get$end(_this).toString$0(0) + ' "' + _this.get$text() + '">';
    },
    $isComparable: 1,
    $isSourceSpan: 1
  };
  A.SourceSpanWithContext.prototype = {
    get$context(_) {
      return this._context;
    }
  };
  A.Chain.prototype = {
    toTrace$0() {
      var t1 = this.traces;
      return A.Trace$(new A.ExpandIterable(t1, new A.Chain_toTrace_closure(), A._arrayInstanceType(t1)._eval$1("ExpandIterable<1,Frame>")), null);
    },
    toString$0(_) {
      var t1 = this.traces,
        t2 = A._arrayInstanceType(t1);
      return new A.MappedListIterable(t1, new A.Chain_toString_closure(new A.MappedListIterable(t1, new A.Chain_toString_closure0(), t2._eval$1("MappedListIterable<1,int>")).fold$2(0, 0, B.CONSTANT)), t2._eval$1("MappedListIterable<1,String>")).join$1(0, string$.x3d_____);
    },
    $isStackTrace: 1
  };
  A.Chain_Chain$parse_closure.prototype = {
    call$1(line) {
      return line.length !== 0;
    },
    $signature: 6
  };
  A.Chain_Chain$parse_closure0.prototype = {
    call$1(trace) {
      return A.Trace$parseVM(trace);
    },
    $signature: 145
  };
  A.Chain_Chain$parse_closure1.prototype = {
    call$1(trace) {
      return A.Trace$parseFriendly(trace);
    },
    $signature: 145
  };
  A.Chain_toTrace_closure.prototype = {
    call$1(trace) {
      return trace.get$frames();
    },
    $signature: 283
  };
  A.Chain_toString_closure0.prototype = {
    call$1(trace) {
      var t1 = trace.get$frames();
      return new A.MappedListIterable(t1, new A.Chain_toString__closure0(), A._arrayInstanceType(t1)._eval$1("MappedListIterable<1,int>")).fold$2(0, 0, B.CONSTANT);
    },
    $signature: 284
  };
  A.Chain_toString__closure0.prototype = {
    call$1(frame) {
      return frame.get$location().length;
    },
    $signature: 146
  };
  A.Chain_toString_closure.prototype = {
    call$1(trace) {
      var t1 = trace.get$frames();
      return new A.MappedListIterable(t1, new A.Chain_toString__closure(this.longest), A._arrayInstanceType(t1)._eval$1("MappedListIterable<1,String>")).join$0(0);
    },
    $signature: 286
  };
  A.Chain_toString__closure.prototype = {
    call$1(frame) {
      return B.JSString_methods.padRight$1(frame.get$location(), this.longest) + "  " + A.S(frame.get$member()) + "\n";
    },
    $signature: 147
  };
  A.Frame.prototype = {
    get$isCore() {
      return this.uri.get$scheme() === "dart";
    },
    get$library() {
      var t1 = this.uri;
      if (t1.get$scheme() === "data")
        return "data:...";
      return $.$get$context().prettyUri$1(t1);
    },
    get$$package() {
      var t1 = this.uri;
      if (t1.get$scheme() !== "package")
        return null;
      return B.JSArray_methods.get$first(t1.get$path(t1).split("/"));
    },
    get$location() {
      var t2, _this = this,
        t1 = _this.line;
      if (t1 == null)
        return _this.get$library();
      t2 = _this.column;
      if (t2 == null)
        return _this.get$library() + " " + A.S(t1);
      return _this.get$library() + " " + A.S(t1) + ":" + A.S(t2);
    },
    toString$0(_) {
      return this.get$location() + " in " + A.S(this.member);
    },
    get$uri() {
      return this.uri;
    },
    get$line() {
      return this.line;
    },
    get$column() {
      return this.column;
    },
    get$member() {
      return this.member;
    }
  };
  A.Frame_Frame$parseVM_closure.prototype = {
    call$0() {
      var match, t2, t3, member, uri, lineAndColumn, line, _null = null,
        t1 = this.frame;
      if (t1 === "...")
        return new A.Frame(A._Uri__Uri(_null, _null, _null, _null), _null, _null, "...");
      match = $.$get$_vmFrame().firstMatch$1(t1);
      if (match == null)
        return new A.UnparsedFrame(A._Uri__Uri(_null, "unparsed", _null, _null), t1);
      t1 = match._match;
      t2 = t1[1];
      t2.toString;
      t3 = $.$get$_asyncBody();
      t2 = A.stringReplaceAllUnchecked(t2, t3, "<async>");
      member = A.stringReplaceAllUnchecked(t2, "<anonymous closure>", "<fn>");
      t2 = t1[2];
      t3 = t2;
      t3.toString;
      if (B.JSString_methods.startsWith$1(t3, "<data:"))
        uri = A.Uri_Uri$dataFromString("", _null, _null);
      else {
        t2 = t2;
        t2.toString;
        uri = A.Uri_parse(t2);
      }
      lineAndColumn = t1[3].split(":");
      t1 = lineAndColumn.length;
      line = t1 > 1 ? A.int_parse(lineAndColumn[1], _null) : _null;
      return new A.Frame(uri, line, t1 > 2 ? A.int_parse(lineAndColumn[2], _null) : _null, member);
    },
    $signature: 70
  };
  A.Frame_Frame$parseV8_closure.prototype = {
    call$0() {
      var t2, t3, _s4_ = "<fn>",
        t1 = this.frame,
        match = $.$get$_v8Frame().firstMatch$1(t1);
      if (match == null)
        return new A.UnparsedFrame(A._Uri__Uri(null, "unparsed", null, null), t1);
      t1 = new A.Frame_Frame$parseV8_closure_parseLocation(t1);
      t2 = match._match;
      t3 = t2[2];
      if (t3 != null) {
        t3 = t3;
        t3.toString;
        t2 = t2[1];
        t2.toString;
        t2 = A.stringReplaceAllUnchecked(t2, "<anonymous>", _s4_);
        t2 = A.stringReplaceAllUnchecked(t2, "Anonymous function", _s4_);
        return t1.call$2(t3, A.stringReplaceAllUnchecked(t2, "(anonymous function)", _s4_));
      } else {
        t2 = t2[3];
        t2.toString;
        return t1.call$2(t2, _s4_);
      }
    },
    $signature: 70
  };
  A.Frame_Frame$parseV8_closure_parseLocation.prototype = {
    call$2($location, member) {
      var t2, urlMatch, uri, line, columnMatch, _null = null,
        t1 = $.$get$_v8EvalLocation(),
        evalMatch = t1.firstMatch$1($location);
      for (; evalMatch != null; $location = t2) {
        t2 = evalMatch._match[1];
        t2.toString;
        evalMatch = t1.firstMatch$1(t2);
      }
      if ($location === "native")
        return new A.Frame(A.Uri_parse("native"), _null, _null, member);
      urlMatch = $.$get$_v8UrlLocation().firstMatch$1($location);
      if (urlMatch == null)
        return new A.UnparsedFrame(A._Uri__Uri(_null, "unparsed", _null, _null), this.frame);
      t1 = urlMatch._match;
      t2 = t1[1];
      t2.toString;
      uri = A.Frame__uriOrPathToUri(t2);
      t2 = t1[2];
      t2.toString;
      line = A.int_parse(t2, _null);
      columnMatch = t1[3];
      return new A.Frame(uri, line, columnMatch != null ? A.int_parse(columnMatch, _null) : _null, member);
    },
    $signature: 289
  };
  A.Frame_Frame$_parseFirefoxEval_closure.prototype = {
    call$0() {
      var t2, member, uri, line, _null = null,
        t1 = this.frame,
        match = $.$get$_firefoxEvalLocation().firstMatch$1(t1);
      if (match == null)
        return new A.UnparsedFrame(A._Uri__Uri(_null, "unparsed", _null, _null), t1);
      t1 = match._match;
      t2 = t1[1];
      t2.toString;
      member = A.stringReplaceAllUnchecked(t2, "/<", "");
      t2 = t1[2];
      t2.toString;
      uri = A.Frame__uriOrPathToUri(t2);
      t1 = t1[3];
      t1.toString;
      line = A.int_parse(t1, _null);
      return new A.Frame(uri, line, _null, member.length === 0 || member === "anonymous" ? "<fn>" : member);
    },
    $signature: 70
  };
  A.Frame_Frame$parseFirefox_closure.prototype = {
    call$0() {
      var t2, t3, t4, uri, member, line, column, _null = null,
        t1 = this.frame,
        match = $.$get$_firefoxSafariFrame().firstMatch$1(t1);
      if (match == null)
        return new A.UnparsedFrame(A._Uri__Uri(_null, "unparsed", _null, _null), t1);
      t2 = match._match;
      t3 = t2[3];
      t4 = t3;
      t4.toString;
      if (B.JSString_methods.contains$1(t4, " line "))
        return A.Frame_Frame$_parseFirefoxEval(t1);
      t1 = t3;
      t1.toString;
      uri = A.Frame__uriOrPathToUri(t1);
      member = t2[1];
      if (member != null) {
        t1 = t2[2];
        t1.toString;
        t1 = B.JSString_methods.allMatches$1("/", t1);
        member += B.JSArray_methods.join$0(A.List_List$filled(t1.get$length(t1), ".<fn>", false, type$.String));
        if (member === "")
          member = "<fn>";
        member = B.JSString_methods.replaceFirst$2(member, $.$get$_initialDot(), "");
      } else
        member = "<fn>";
      t1 = t2[4];
      if (t1 === "")
        line = _null;
      else {
        t1 = t1;
        t1.toString;
        line = A.int_parse(t1, _null);
      }
      t1 = t2[5];
      if (t1 == null || t1 === "")
        column = _null;
      else {
        t1 = t1;
        t1.toString;
        column = A.int_parse(t1, _null);
      }
      return new A.Frame(uri, line, column, member);
    },
    $signature: 70
  };
  A.Frame_Frame$parseFriendly_closure.prototype = {
    call$0() {
      var t2, uri, line, column, _null = null,
        t1 = this.frame,
        match = $.$get$_friendlyFrame().firstMatch$1(t1);
      if (match == null)
        throw A.wrapException(A.FormatException$("Couldn't parse package:stack_trace stack trace line '" + t1 + "'.", _null, _null));
      t1 = match._match;
      t2 = t1[1];
      if (t2 === "data:...")
        uri = A.Uri_Uri$dataFromString("", _null, _null);
      else {
        t2 = t2;
        t2.toString;
        uri = A.Uri_parse(t2);
      }
      if (uri.get$scheme() === "") {
        t2 = $.$get$context();
        uri = t2.toUri$1(t2.absolute$7(t2.style.pathFromUri$1(A._parseUri(uri)), _null, _null, _null, _null, _null, _null));
      }
      t2 = t1[2];
      if (t2 == null)
        line = _null;
      else {
        t2 = t2;
        t2.toString;
        line = A.int_parse(t2, _null);
      }
      t2 = t1[3];
      if (t2 == null)
        column = _null;
      else {
        t2 = t2;
        t2.toString;
        column = A.int_parse(t2, _null);
      }
      return new A.Frame(uri, line, column, t1[4]);
    },
    $signature: 70
  };
  A.LazyTrace.prototype = {
    get$_lazy_trace$_trace() {
      var result, _this = this,
        value = _this.__LazyTrace__trace;
      if (value === $) {
        result = _this._thunk.call$0();
        A._lateInitializeOnceCheck(_this.__LazyTrace__trace, "_trace");
        _this.__LazyTrace__trace = result;
        value = result;
      }
      return value;
    },
    get$frames() {
      return this.get$_lazy_trace$_trace().get$frames();
    },
    get$terse() {
      return new A.LazyTrace(new A.LazyTrace_terse_closure(this));
    },
    toString$0(_) {
      return this.get$_lazy_trace$_trace().toString$0(0);
    },
    $isStackTrace: 1,
    $isTrace: 1
  };
  A.LazyTrace_terse_closure.prototype = {
    call$0() {
      return this.$this.get$_lazy_trace$_trace().get$terse();
    },
    $signature: 149
  };
  A.Trace.prototype = {
    get$terse() {
      return this.foldFrames$2$terse(new A.Trace_terse_closure(), true);
    },
    foldFrames$2$terse(predicate, terse) {
      var newFrames, t1, t2, t3, _box_0 = {};
      _box_0.predicate = predicate;
      _box_0.predicate = new A.Trace_foldFrames_closure(predicate);
      newFrames = A._setArrayType([], type$.JSArray_Frame);
      for (t1 = this.frames, t1 = new A.ReversedListIterable(t1, A._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>")), t1 = new A.ListIterator(t1, t1.get$length(t1)), t2 = A._instanceType(t1)._precomputed1; t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        if (t3 instanceof A.UnparsedFrame || !_box_0.predicate.call$1(t3))
          newFrames.push(t3);
        else if (newFrames.length === 0 || !_box_0.predicate.call$1(B.JSArray_methods.get$last(newFrames)))
          newFrames.push(new A.Frame(t3.get$uri(), t3.get$line(), t3.get$column(), t3.get$member()));
      }
      t1 = type$.MappedListIterable_Frame_Frame;
      newFrames = A.List_List$of(new A.MappedListIterable(newFrames, new A.Trace_foldFrames_closure0(_box_0), t1), true, t1._eval$1("ListIterable.E"));
      if (newFrames.length > 1 && _box_0.predicate.call$1(B.JSArray_methods.get$first(newFrames)))
        B.JSArray_methods.removeAt$1(newFrames, 0);
      return A.Trace$(new A.ReversedListIterable(newFrames, A._arrayInstanceType(newFrames)._eval$1("ReversedListIterable<1>")), this.original._stackTrace);
    },
    toString$0(_) {
      var t1 = this.frames,
        t2 = A._arrayInstanceType(t1);
      return new A.MappedListIterable(t1, new A.Trace_toString_closure(new A.MappedListIterable(t1, new A.Trace_toString_closure0(), t2._eval$1("MappedListIterable<1,int>")).fold$2(0, 0, B.CONSTANT)), t2._eval$1("MappedListIterable<1,String>")).join$0(0);
    },
    $isStackTrace: 1,
    get$frames() {
      return this.frames;
    }
  };
  A.Trace_Trace$from_closure.prototype = {
    call$0() {
      return A.Trace_Trace$parse(this.trace.toString$0(0));
    },
    $signature: 149
  };
  A.Trace__parseVM_closure.prototype = {
    call$1(line) {
      return line.length !== 0;
    },
    $signature: 6
  };
  A.Trace__parseVM_closure0.prototype = {
    call$1(line) {
      return A.Frame_Frame$parseVM(line);
    },
    $signature: 69
  };
  A.Trace$parseV8_closure.prototype = {
    call$1(line) {
      return !B.JSString_methods.startsWith$1(line, $.$get$_v8TraceLine());
    },
    $signature: 6
  };
  A.Trace$parseV8_closure0.prototype = {
    call$1(line) {
      return A.Frame_Frame$parseV8(line);
    },
    $signature: 69
  };
  A.Trace$parseJSCore_closure.prototype = {
    call$1(line) {
      return line !== "\tat ";
    },
    $signature: 6
  };
  A.Trace$parseJSCore_closure0.prototype = {
    call$1(line) {
      return A.Frame_Frame$parseV8(line);
    },
    $signature: 69
  };
  A.Trace$parseFirefox_closure.prototype = {
    call$1(line) {
      return line.length !== 0 && line !== "[native code]";
    },
    $signature: 6
  };
  A.Trace$parseFirefox_closure0.prototype = {
    call$1(line) {
      return A.Frame_Frame$parseFirefox(line);
    },
    $signature: 69
  };
  A.Trace$parseFriendly_closure.prototype = {
    call$1(line) {
      return !B.JSString_methods.startsWith$1(line, "=====");
    },
    $signature: 6
  };
  A.Trace$parseFriendly_closure0.prototype = {
    call$1(line) {
      return A.Frame_Frame$parseFriendly(line);
    },
    $signature: 69
  };
  A.Trace_terse_closure.prototype = {
    call$1(_) {
      return false;
    },
    $signature: 151
  };
  A.Trace_foldFrames_closure.prototype = {
    call$1(frame) {
      var t1;
      if (this.oldPredicate.call$1(frame))
        return true;
      if (frame.get$isCore())
        return true;
      if (frame.get$$package() === "stack_trace")
        return true;
      t1 = frame.get$member();
      t1.toString;
      if (!B.JSString_methods.contains$1(t1, "<async>"))
        return false;
      return frame.get$line() == null;
    },
    $signature: 151
  };
  A.Trace_foldFrames_closure0.prototype = {
    call$1(frame) {
      var t1, t2;
      if (frame instanceof A.UnparsedFrame || !this._box_0.predicate.call$1(frame))
        return frame;
      t1 = frame.get$library();
      t2 = $.$get$_terseRegExp();
      return new A.Frame(A.Uri_parse(A.stringReplaceAllUnchecked(t1, t2, "")), null, null, frame.get$member());
    },
    $signature: 293
  };
  A.Trace_toString_closure0.prototype = {
    call$1(frame) {
      return frame.get$location().length;
    },
    $signature: 146
  };
  A.Trace_toString_closure.prototype = {
    call$1(frame) {
      if (frame instanceof A.UnparsedFrame)
        return frame.toString$0(0) + "\n";
      return B.JSString_methods.padRight$1(frame.get$location(), this.longest) + "  " + A.S(frame.get$member()) + "\n";
    },
    $signature: 147
  };
  A.UnparsedFrame.prototype = {
    toString$0(_) {
      return this.member;
    },
    $isFrame: 1,
    get$uri() {
      return this.uri;
    },
    get$line() {
      return null;
    },
    get$column() {
      return null;
    },
    get$isCore() {
      return false;
    },
    get$library() {
      return "unparsed";
    },
    get$$package() {
      return null;
    },
    get$location() {
      return "unparsed";
    },
    get$member() {
      return this.member;
    }
  };
  A.TransformByHandlers_transformByHandlers_closure.prototype = {
    call$0() {
      var t2, subscription, t3, t4, _this = this, t1 = {};
      t1.valuesDone = false;
      t2 = _this.controller;
      subscription = _this._this.listen$3$onDone$onError(0, new A.TransformByHandlers_transformByHandlers__closure(_this.handleData, t2, _this.S), new A.TransformByHandlers_transformByHandlers__closure0(t1, _this.handleDone, t2), new A.TransformByHandlers_transformByHandlers__closure1(_this.handleError, t2));
      t3 = _this._box_1;
      t3.subscription = subscription;
      t2.set$onPause(subscription.get$pause(subscription));
      t4 = t3.subscription;
      t2.set$onResume(t4.get$resume(t4));
      t2.set$onCancel(new A.TransformByHandlers_transformByHandlers__closure2(t3, t1));
    },
    $signature: 0
  };
  A.TransformByHandlers_transformByHandlers__closure.prototype = {
    call$1(value) {
      return this.handleData.call$2(value, this.controller);
    },
    $signature() {
      return this.S._eval$1("~(0)");
    }
  };
  A.TransformByHandlers_transformByHandlers__closure1.prototype = {
    call$2(error, stackTrace) {
      this.handleError.call$3(error, stackTrace, this.controller);
    },
    $signature: 63
  };
  A.TransformByHandlers_transformByHandlers__closure0.prototype = {
    call$0() {
      this._box_0.valuesDone = true;
      this.handleDone.call$1(this.controller);
    },
    $signature: 0
  };
  A.TransformByHandlers_transformByHandlers__closure2.prototype = {
    call$0() {
      var t1 = this._box_1,
        toCancel = t1.subscription;
      t1.subscription = null;
      if (!this._box_0.valuesDone)
        return toCancel.cancel$0();
      return null;
    },
    $signature: 224
  };
  A.RateLimit__debounceAggregate_closure.prototype = {
    call$2(value, sink) {
      var _this = this,
        t1 = _this._box_0,
        t2 = new A.RateLimit__debounceAggregate_closure_emit(t1, sink, _this.S),
        t3 = t1.timer;
      if (t3 != null)
        t3.cancel$0();
      t1.soFar = _this.collect.call$2(value, t1.soFar);
      t1.hasPending = true;
      if (t1.timer == null && _this.leading) {
        t1.emittedLatestAsLeading = true;
        t2.call$0();
      } else
        t1.emittedLatestAsLeading = false;
      t1.timer = A.Timer_Timer(_this.duration, new A.RateLimit__debounceAggregate__closure(t1, _this.trailing, t2, sink));
    },
    $signature() {
      return this.T._eval$1("@<0>")._bind$1(this.S)._eval$1("~(1,EventSink<2>)");
    }
  };
  A.RateLimit__debounceAggregate_closure_emit.prototype = {
    call$0() {
      var t1 = this._box_0,
        t2 = t1.soFar;
      if (t2 == null)
        t2 = this.S._as(t2);
      this.sink.add$1(0, t2);
      t1.soFar = null;
      t1.hasPending = false;
    },
    $signature: 0
  };
  A.RateLimit__debounceAggregate__closure.prototype = {
    call$0() {
      var t1 = this._box_0,
        t2 = t1.emittedLatestAsLeading;
      if (!t2)
        this.emit.call$0();
      if (t1.shouldClose)
        this.sink.close$0(0);
      t1.timer = null;
    },
    $signature: 0
  };
  A.RateLimit__debounceAggregate_closure0.prototype = {
    call$1(sink) {
      var t1 = this._box_0;
      if (t1.hasPending && this.trailing)
        t1.shouldClose = true;
      else {
        t1 = t1.timer;
        if (t1 != null)
          t1.cancel$0();
        sink.close$0(0);
      }
    },
    $signature() {
      return this.S._eval$1("~(EventSink<0>)");
    }
  };
  A.StringScannerException.prototype = {
    get$source() {
      return A._asString(this.source);
    }
  };
  A.LineScanner.prototype = {
    scanChar$1(character) {
      if (!this.super$StringScanner$scanChar(character))
        return false;
      this._adjustLineAndColumn$1(character);
      return true;
    },
    _adjustLineAndColumn$1(character) {
      var t1, _this = this;
      if (character !== 10)
        t1 = character === 13 && _this.peekChar$0() !== 10;
      else
        t1 = true;
      if (t1) {
        ++_this._line_scanner$_line;
        _this._line_scanner$_column = 0;
      } else
        ++_this._line_scanner$_column;
    },
    scan$1(pattern) {
      var t1, newlines, t2, _this = this;
      if (!_this.super$StringScanner$scan(pattern))
        return false;
      t1 = _this.get$lastMatch();
      newlines = _this._newlinesIn$1(t1.pattern);
      t1 = _this._line_scanner$_line;
      t2 = newlines.length;
      _this._line_scanner$_line = t1 + t2;
      if (t2 === 0) {
        t1 = _this._line_scanner$_column;
        t2 = _this.get$lastMatch();
        _this._line_scanner$_column = t1 + t2.pattern.length;
      } else {
        t1 = _this.get$lastMatch();
        _this._line_scanner$_column = t1.pattern.length - J.get$end$z(B.JSArray_methods.get$last(newlines));
      }
      return true;
    },
    _newlinesIn$1(text) {
      var t1 = $.$get$_newlineRegExp().allMatches$1(0, text),
        newlines = A.List_List$of(t1, true, A._instanceType(t1)._eval$1("Iterable.E"));
      if (this.peekChar$1(-1) === 13 && this.peekChar$0() === 10)
        B.JSArray_methods.removeLast$0(newlines);
      return newlines;
    }
  };
  A.SpanScanner.prototype = {
    set$state(state) {
      if (state._scanner !== this)
        throw A.wrapException(A.ArgumentError$(string$.The_gi, null));
      this.set$position(state.position);
    },
    spanFrom$2(startState, endState) {
      var endPosition = endState == null ? this._string_scanner$_position : endState.position;
      return this._sourceFile.span$2(0, startState.position, endPosition);
    },
    spanFrom$1(startState) {
      return this.spanFrom$2(startState, null);
    },
    matches$1(pattern) {
      var t1, t2, _this = this;
      if (!_this.super$StringScanner$matches(pattern))
        return false;
      t1 = _this._string_scanner$_position;
      t2 = _this.get$lastMatch();
      _this._sourceFile.span$2(0, t1, t2.start + t2.pattern.length);
      return true;
    },
    error$3$length$position(_, message, $length, position) {
      var t2, match, _this = this,
        t1 = _this.string;
      A.validateErrorArgs(t1, null, position, $length);
      t2 = position == null && $length == null;
      match = t2 ? _this.get$lastMatch() : null;
      if (position == null)
        position = match == null ? _this._string_scanner$_position : match.start;
      if ($length == null)
        if (match == null)
          $length = 0;
        else {
          t2 = match.start;
          $length = t2 + match.pattern.length - t2;
        }
      throw A.wrapException(A.StringScannerException$(message, _this._sourceFile.span$2(0, position, position + $length), t1));
    },
    error$1($receiver, message) {
      return this.error$3$length$position($receiver, message, null, null);
    },
    error$2$position($receiver, message, position) {
      return this.error$3$length$position($receiver, message, null, position);
    },
    error$2$length($receiver, message, $length) {
      return this.error$3$length$position($receiver, message, $length, null);
    }
  };
  A._SpanScannerState.prototype = {};
  A.StringScanner.prototype = {
    set$position(position) {
      if (B.JSInt_methods.get$isNegative(position) || position > this.string.length)
        throw A.wrapException(A.ArgumentError$("Invalid position " + position, null));
      this._string_scanner$_position = position;
      this._lastMatch = null;
    },
    get$lastMatch() {
      var _this = this;
      if (_this._string_scanner$_position !== _this._lastMatchPosition)
        _this._lastMatch = null;
      return _this._lastMatch;
    },
    readChar$0() {
      var _this = this,
        t1 = _this._string_scanner$_position,
        t2 = _this.string;
      if (t1 === t2.length)
        _this.error$3$length$position(0, "expected more input.", 0, t1);
      return B.JSString_methods.codeUnitAt$1(t2, _this._string_scanner$_position++);
    },
    peekChar$1(offset) {
      var index;
      if (offset == null)
        offset = 0;
      index = this._string_scanner$_position + offset;
      if (index < 0 || index >= this.string.length)
        return null;
      return B.JSString_methods.codeUnitAt$1(this.string, index);
    },
    peekChar$0() {
      return this.peekChar$1(null);
    },
    scanChar$1(character) {
      var t1 = this._string_scanner$_position,
        t2 = this.string;
      if (t1 === t2.length)
        return false;
      if (B.JSString_methods.codeUnitAt$1(t2, t1) !== character)
        return false;
      this._string_scanner$_position = t1 + 1;
      return true;
    },
    expectChar$2$name(character, $name) {
      if (this.scanChar$1(character))
        return;
      if ($name == null)
        if (character === 92)
          $name = '"\\"';
        else
          $name = character === 34 ? '"\\""' : '"' + A.Primitives_stringFromCharCode(character) + '"';
      this.error$3$length$position(0, "expected " + $name + ".", 0, this._string_scanner$_position);
    },
    expectChar$1(character) {
      return this.expectChar$2$name(character, null);
    },
    scan$1(pattern) {
      var t1, _this = this,
        success = _this.matches$1(pattern);
      if (success) {
        t1 = _this._lastMatch;
        _this._lastMatchPosition = _this._string_scanner$_position = t1.start + t1.pattern.length;
      }
      return success;
    },
    expect$1(pattern) {
      var t1, $name;
      if (this.scan$1(pattern))
        return;
      t1 = A.stringReplaceAllUnchecked(pattern, "\\", "\\\\");
      $name = '"' + A.stringReplaceAllUnchecked(t1, '"', '\\"') + '"';
      this.error$3$length$position(0, "expected " + $name + ".", 0, this._string_scanner$_position);
    },
    expectDone$0() {
      var t1 = this._string_scanner$_position;
      if (t1 === this.string.length)
        return;
      this.error$3$length$position(0, "expected no more input.", 0, t1);
    },
    matches$1(pattern) {
      var _this = this,
        t1 = B.JSString_methods.matchAsPrefix$2(pattern, _this.string, _this._string_scanner$_position);
      _this._lastMatch = t1;
      _this._lastMatchPosition = _this._string_scanner$_position;
      return t1 != null;
    },
    substring$1(_, start) {
      var end = this._string_scanner$_position;
      return B.JSString_methods.substring$2(this.string, start, end);
    },
    error$3$length$position(_, message, $length, position) {
      var t1 = this.string;
      A.validateErrorArgs(t1, null, position, $length);
      throw A.wrapException(A.StringScannerException$(message, A.SourceFile$fromString(t1, this.sourceUrl).span$2(0, position, position + $length), t1));
    }
  };
  A.AsciiGlyphSet.prototype = {
    glyphOrAscii$2(glyph, alternative) {
      return alternative;
    },
    get$horizontalLine() {
      return "-";
    },
    get$verticalLine() {
      return "|";
    },
    get$topLeftCorner() {
      return ",";
    },
    get$bottomLeftCorner() {
      return "'";
    },
    get$cross() {
      return "+";
    },
    get$upEnd() {
      return "'";
    },
    get$downEnd() {
      return ",";
    },
    get$horizontalLineBold() {
      return "=";
    }
  };
  A.UnicodeGlyphSet.prototype = {
    glyphOrAscii$2(glyph, alternative) {
      return glyph;
    },
    get$horizontalLine() {
      return "\u2500";
    },
    get$verticalLine() {
      return "\u2502";
    },
    get$topLeftCorner() {
      return "\u250c";
    },
    get$bottomLeftCorner() {
      return "\u2514";
    },
    get$cross() {
      return "\u253c";
    },
    get$upEnd() {
      return "\u2575";
    },
    get$downEnd() {
      return "\u2577";
    },
    get$horizontalLineBold() {
      return "\u2501";
    }
  };
  A.Tuple2.prototype = {
    toString$0(_) {
      return "[" + A.S(this.item1) + ", " + A.S(this.item2) + "]";
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Tuple2 && J.$eq$(other.item1, this.item1) && J.$eq$(other.item2, this.item2);
    },
    get$hashCode(_) {
      var t1 = J.get$hashCode$(this.item1),
        t2 = J.get$hashCode$(this.item2);
      return A._finish(A._combine(A._combine(0, B.JSInt_methods.get$hashCode(t1)), B.JSInt_methods.get$hashCode(t2)));
    }
  };
  A.Tuple3.prototype = {
    toString$0(_) {
      return "[" + this.item1.toString$0(0) + ", " + this.item2.toString$0(0) + ", " + this.item3.toString$0(0) + "]";
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Tuple3 && other.item1 === this.item1 && other.item2.$eq(0, this.item2) && other.item3.$eq(0, this.item3);
    },
    get$hashCode(_) {
      var t3,
        t1 = A.Primitives_objectHashCode(this.item1),
        t2 = this.item2;
      t2 = t2.get$hashCode(t2);
      t3 = this.item3;
      t3 = t3.get$hashCode(t3);
      return A._finish(A._combine(A._combine(A._combine(0, B.JSInt_methods.get$hashCode(t1)), B.JSInt_methods.get$hashCode(t2)), B.JSInt_methods.get$hashCode(t3)));
    }
  };
  A.Tuple4.prototype = {
    toString$0(_) {
      var _this = this;
      return "[" + _this.item1.toString$0(0) + ", " + _this.item2 + ", " + _this.item3.toString$0(0) + ", " + A.S(_this.item4) + "]";
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof A.Tuple4 && other.item1.$eq(0, _this.item1) && other.item2 === _this.item2 && other.item3 === _this.item3 && J.$eq$(other.item4, _this.item4);
    },
    get$hashCode(_) {
      var t2, t3, t4, _this = this,
        t1 = _this.item1;
      t1 = t1.get$hashCode(t1);
      t2 = B.JSBool_methods.get$hashCode(_this.item2);
      t3 = A.Primitives_objectHashCode(_this.item3);
      t4 = J.get$hashCode$(_this.item4);
      return A._finish(A._combine(A._combine(A._combine(A._combine(0, B.JSInt_methods.get$hashCode(t1)), B.JSInt_methods.get$hashCode(t2)), B.JSInt_methods.get$hashCode(t3)), B.JSInt_methods.get$hashCode(t4)));
    }
  };
  A.WatchEvent.prototype = {
    toString$0(_) {
      return this.type.toString$0(0) + " " + this.path;
    }
  };
  A.ChangeType.prototype = {
    toString$0(_) {
      return this._watch_event$_name;
    }
  };
  A.SupportsAnything0.prototype = {
    toString$0(_) {
      return "(" + this.contents.toString$0(0) + ")";
    },
    $isAstNode0: 1,
    get$span(receiver) {
      return this.span;
    }
  };
  A.Argument0.prototype = {
    toString$0(_) {
      var t1 = this.defaultValue,
        t2 = this.name;
      return t1 == null ? t2 : t2 + ": " + t1.toString$0(0);
    },
    $isAstNode0: 1,
    get$span(receiver) {
      return this.span;
    }
  };
  A.ArgumentDeclaration0.prototype = {
    get$spanWithName() {
      var t3, t4,
        t1 = this.span,
        t2 = t1.file,
        text = A.String_String$fromCharCodes(B.NativeUint32List_methods.sublist$2(t2._decodedChars, 0, null), 0, null),
        i = A.FileLocation$_(t2, t1._file$_start).offset - 1;
      while (true) {
        if (i > 0) {
          t3 = B.JSString_methods.codeUnitAt$1(text, i);
          t3 = t3 === 32 || t3 === 9 || t3 === 10 || t3 === 13 || t3 === 12;
        } else
          t3 = false;
        if (!t3)
          break;
        --i;
      }
      t3 = B.JSString_methods.codeUnitAt$1(text, i);
      if (!(t3 === 95 || A.isAlphabetic1(t3) || t3 >= 128 || A.isDigit0(t3) || t3 === 45))
        return t1;
      --i;
      while (true) {
        if (i >= 0) {
          t3 = B.JSString_methods.codeUnitAt$1(text, i);
          if (t3 !== 95) {
            if (!(t3 >= 97 && t3 <= 122))
              t4 = t3 >= 65 && t3 <= 90;
            else
              t4 = true;
            t4 = t4 || t3 >= 128;
          } else
            t4 = true;
          if (!t4) {
            t4 = t3 >= 48 && t3 <= 57;
            t3 = t4 || t3 === 45;
          } else
            t3 = true;
        } else
          t3 = false;
        if (!t3)
          break;
        --i;
      }
      t3 = i + 1;
      t4 = B.JSString_methods.codeUnitAt$1(text, t3);
      if (!(t4 === 95 || A.isAlphabetic1(t4) || t4 >= 128))
        return t1;
      return A.SpanExtensions_trimRight0(A.SpanExtensions_trimLeft0(t2.span$2(0, t3, A.FileLocation$_(t2, t1._end).offset)));
    },
    verify$2(positional, names) {
      var t1, t2, t3, namedUsed, i, argument, t4, unknownNames, _this = this,
        _s10_ = "invocation",
        _s8_ = "argument";
      for (t1 = _this.$arguments, t2 = t1.length, t3 = names._baseMap, namedUsed = 0, i = 0; i < t2; ++i) {
        argument = t1[i];
        if (i < positional) {
          t4 = argument.name;
          if (t3.containsKey$1(t4))
            throw A.wrapException(A.SassScriptException$0("Argument " + _this._argument_declaration$_originalArgumentName$1(t4) + string$.x20was_p));
        } else {
          t4 = argument.name;
          if (t3.containsKey$1(t4))
            ++namedUsed;
          else if (argument.defaultValue == null)
            throw A.wrapException(A.MultiSpanSassScriptException$0("Missing argument " + _this._argument_declaration$_originalArgumentName$1(t4) + ".", _s10_, A.LinkedHashMap_LinkedHashMap$_literal([_this.get$spanWithName(), "declaration"], type$.FileSpan, type$.String)));
        }
      }
      if (_this.restArgument != null)
        return;
      if (positional > t2) {
        t1 = names.get$isEmpty(names) ? "" : "positional ";
        throw A.wrapException(A.MultiSpanSassScriptException$0("Only " + t2 + " " + t1 + A.pluralize0(_s8_, t2, null) + " allowed, but " + positional + " " + A.pluralize0("was", positional, "were") + " passed.", _s10_, A.LinkedHashMap_LinkedHashMap$_literal([_this.get$spanWithName(), "declaration"], type$.FileSpan, type$.String)));
      }
      if (namedUsed < t3.get$length(t3)) {
        t2 = type$.String;
        unknownNames = A.LinkedHashSet_LinkedHashSet$of(names, t2);
        unknownNames.removeAll$1(new A.MappedListIterable(t1, new A.ArgumentDeclaration_verify_closure1(), A._arrayInstanceType(t1)._eval$1("MappedListIterable<1,Object?>")));
        throw A.wrapException(A.MultiSpanSassScriptException$0("No " + A.pluralize0(_s8_, unknownNames._collection$_length, null) + " named " + A.S(A.toSentence0(unknownNames.map$1$1(0, new A.ArgumentDeclaration_verify_closure2(), type$.Object), "or")) + ".", _s10_, A.LinkedHashMap_LinkedHashMap$_literal([_this.get$spanWithName(), "declaration"], type$.FileSpan, t2)));
      }
    },
    _argument_declaration$_originalArgumentName$1($name) {
      var t1, text, t2, _i, argument, t3, t4, end, _null = null;
      if ($name === this.restArgument) {
        t1 = this.span;
        text = A.String_String$fromCharCodes(B.NativeUint32List_methods.sublist$2(t1.file._decodedChars, t1._file$_start, t1._end), 0, _null);
        return B.JSString_methods.substring$2(B.JSString_methods.substring$1(text, B.JSString_methods.lastIndexOf$1(text, "$")), 0, B.JSString_methods.indexOf$1(text, "."));
      }
      for (t1 = this.$arguments, t2 = t1.length, _i = 0; _i < t2; ++_i) {
        argument = t1[_i];
        if (argument.name === $name) {
          t1 = argument.defaultValue;
          t2 = argument.span;
          t3 = t2.file;
          t4 = t2._file$_start;
          t2 = t2._end;
          if (t1 == null) {
            t1 = t3._decodedChars;
            t1 = A.String_String$fromCharCodes(new Uint32Array(t1.subarray(t4, A._checkValidRange(t4, t2, t1.length))), 0, _null);
          } else {
            t1 = t3._decodedChars;
            text = A.String_String$fromCharCodes(new Uint32Array(t1.subarray(t4, A._checkValidRange(t4, t2, t1.length))), 0, _null);
            t1 = B.JSString_methods.substring$2(text, 0, B.JSString_methods.indexOf$1(text, ":"));
            end = A._lastNonWhitespace0(t1, false);
            t1 = end == null ? "" : B.JSString_methods.substring$2(t1, 0, end + 1);
          }
          return t1;
        }
      }
      throw A.wrapException(A.ArgumentError$(string$.This_d + $name + '".', _null));
    },
    matches$2(positional, names) {
      var t1, t2, t3, namedUsed, i, argument;
      for (t1 = this.$arguments, t2 = t1.length, t3 = names._baseMap, namedUsed = 0, i = 0; i < t2; ++i) {
        argument = t1[i];
        if (i < positional) {
          if (t3.containsKey$1(argument.name))
            return false;
        } else if (t3.containsKey$1(argument.name))
          ++namedUsed;
        else if (argument.defaultValue == null)
          return false;
      }
      if (this.restArgument != null)
        return true;
      if (positional > t2)
        return false;
      if (namedUsed < t3.get$length(t3))
        return false;
      return true;
    },
    toString$0(_) {
      var t2, t3, _i,
        t1 = A._setArrayType([], type$.JSArray_String);
      for (t2 = this.$arguments, t3 = t2.length, _i = 0; _i < t3; ++_i)
        t1.push("$" + A.S(t2[_i]));
      t2 = this.restArgument;
      if (t2 != null)
        t1.push("$" + t2 + "...");
      return B.JSArray_methods.join$1(t1, ", ");
    },
    $isAstNode0: 1,
    get$span(receiver) {
      return this.span;
    }
  };
  A.ArgumentDeclaration_verify_closure1.prototype = {
    call$1(argument) {
      return argument.name;
    },
    $signature: 294
  };
  A.ArgumentDeclaration_verify_closure2.prototype = {
    call$1($name) {
      return "$" + $name;
    },
    $signature: 5
  };
  A.ArgumentInvocation0.prototype = {
    get$isEmpty(_) {
      var t1;
      if (this.positional.length === 0) {
        t1 = this.named;
        t1 = t1.get$isEmpty(t1) && this.rest == null;
      } else
        t1 = false;
      return t1;
    },
    toString$0(_) {
      var t2, t3, t4, _this = this,
        t1 = A.List_List$of(_this.positional, true, type$.Object);
      for (t2 = _this.named, t3 = J.get$iterator$ax(t2.get$keys(t2)); t3.moveNext$0();) {
        t4 = t3.get$current(t3);
        t1.push("$" + t4 + ": " + A.S(t2.$index(0, t4)));
      }
      t2 = _this.rest;
      if (t2 != null)
        t1.push(t2.toString$0(0) + "...");
      t2 = _this.keywordRest;
      if (t2 != null)
        t1.push(t2.toString$0(0) + "...");
      return "(" + B.JSArray_methods.join$1(t1, ", ") + ")";
    },
    $isAstNode0: 1,
    get$span(receiver) {
      return this.span;
    }
  };
  A.argumentListClass_closure.prototype = {
    call$0() {
      var t1 = type$.JSClass,
        jsClass = t1._as(A.allowInteropCaptureThisNamed("sass.SassArgumentList", new A.argumentListClass__closure()));
      A.defineGetter(J.get$$prototype$x(jsClass), "keywords", new A.argumentListClass__closure0(), null);
      A.JSClassExtension_injectSuperclass(t1._as(A.SassArgumentList$0(A._setArrayType([], type$.JSArray_Value_2), A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.Value_2), B.ListSeparator_undecided_null0).constructor), jsClass);
      return jsClass;
    },
    $signature: 23
  };
  A.argumentListClass__closure.prototype = {
    call$4($self, contents, keywords, separator) {
      var t3,
        t1 = self.immutable.isOrderedMap(contents) ? J.toArray$0$x(type$.ImmutableList._as(contents)) : type$.List_dynamic._as(contents),
        t2 = type$.Value_2;
      t1 = J.cast$1$0$ax(t1, t2);
      t3 = self.immutable.isOrderedMap(keywords) ? A.immutableMapToDartMap(type$.ImmutableMap._as(keywords)) : A.objectToMap(keywords);
      return A.SassArgumentList$0(t1, t3.cast$2$0(0, type$.String, t2), A.jsToDartSeparator(separator));
    },
    call$3($self, contents, keywords) {
      return this.call$4($self, contents, keywords, ",");
    },
    "call*": "call$4",
    $requiredArgCount: 3,
    $defaultValues() {
      return [","];
    },
    $signature: 296
  };
  A.argumentListClass__closure0.prototype = {
    call$1($self) {
      $self._argument_list$_wereKeywordsAccessed = true;
      return A.dartMapToImmutableMap($self._argument_list$_keywords);
    },
    $signature: 297
  };
  A.SassArgumentList0.prototype = {};
  A.JSArray1.prototype = {};
  A.AsyncImporter0.prototype = {};
  A.NodeToDartAsyncImporter.prototype = {
    canonicalize$1(_, url) {
      return this.canonicalize$body$NodeToDartAsyncImporter(0, url);
    },
    canonicalize$body$NodeToDartAsyncImporter(_, url) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_Uri),
        $async$returnValue, $async$self = this, t1, result;
      var $async$canonicalize$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              result = $async$self._async0$_canonicalize.call$2(url.toString$0(0), {fromImport: A.fromImport0()});
              $async$goto = result != null && result instanceof self.Promise ? 3 : 4;
              break;
            case 3:
              // then
              $async$goto = 5;
              return A._asyncAwait(A.promiseToFuture(type$.Promise._as(result), type$.nullable_Object), $async$canonicalize$1);
            case 5:
              // returning from await.
              result = $async$result;
            case 4:
              // join
              if (result == null) {
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              t1 = self.URL;
              if (result instanceof t1) {
                $async$returnValue = A.Uri_parse(J.toString$0$(type$.JSUrl._as(result)));
                // goto return
                $async$goto = 1;
                break;
              }
              A.jsThrow(new self.Error(string$.The_ca));
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$canonicalize$1, $async$completer);
    },
    load$1(_, url) {
      return this.load$body$NodeToDartAsyncImporter(0, url);
    },
    load$body$NodeToDartAsyncImporter(_, url) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_ImporterResult),
        $async$returnValue, $async$self = this, t1, contents, syntax, t2, result;
      var $async$load$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              result = $async$self._load.call$1(new self.URL(url.toString$0(0)));
              $async$goto = result != null && result instanceof self.Promise ? 3 : 4;
              break;
            case 3:
              // then
              $async$goto = 5;
              return A._asyncAwait(A.promiseToFuture(type$.Promise._as(result), type$.nullable_Object), $async$load$1);
            case 5:
              // returning from await.
              result = $async$result;
            case 4:
              // join
              if (result == null) {
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              type$.NodeImporterResult._as(result);
              t1 = J.getInterceptor$x(result);
              contents = t1.get$contents(result);
              syntax = t1.get$syntax(result);
              if (contents == null || syntax == null)
                A.jsThrow(new self.Error(string$.The_lo));
              t2 = A.parseSyntax(syntax);
              $async$returnValue = A.ImporterResult$(contents, A.NullableExtension_andThen0(t1.get$sourceMapUrl(result), A.utils1__jsToDartUrl$closure()), t2);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$load$1, $async$completer);
    }
  };
  A.AsyncBuiltInCallable0.prototype = {
    callbackFor$2(positional, names) {
      return new A.Tuple2(this._async_built_in0$_arguments, this._async_built_in0$_callback, type$.Tuple2_of_ArgumentDeclaration_and_FutureOr_Value_Function_List_Value_2);
    },
    $isAsyncCallable0: 1,
    get$name(receiver) {
      return this.name;
    }
  };
  A.AsyncBuiltInCallable$mixin_closure0.prototype = {
    call$1($arguments) {
      return this.$call$body$AsyncBuiltInCallable$mixin_closure0($arguments);
    },
    $call$body$AsyncBuiltInCallable$mixin_closure0($arguments) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Value_2),
        $async$returnValue, $async$self = this;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait($async$self.callback.call$1($arguments), $async$call$1);
            case 3:
              // returning from await.
              $async$returnValue = B.C__SassNull0;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 99
  };
  A._compileStylesheet_closure2.prototype = {
    call$1(url) {
      return url === "" ? A.Uri_Uri$dataFromString(A.String_String$fromCharCodes(B.NativeUint32List_methods.sublist$2(this.stylesheet.span.file._decodedChars, 0, null), 0, null), B.C_Utf8Codec, null).get$_text() : this.importCache.sourceMapUrl$1(0, A.Uri_parse(url)).toString$0(0);
    },
    $signature: 5
  };
  A.AsyncEnvironment0.prototype = {
    closure$0() {
      var t4, t5, t6, _this = this,
        t1 = _this._async_environment0$_forwardedModules,
        t2 = _this._async_environment0$_nestedForwardedModules,
        t3 = _this._async_environment0$_variables;
      t3 = A._setArrayType(t3.slice(0), A._arrayInstanceType(t3));
      t4 = _this._async_environment0$_variableNodes;
      t4 = A._setArrayType(t4.slice(0), A._arrayInstanceType(t4));
      t5 = _this._async_environment0$_functions;
      t5 = A._setArrayType(t5.slice(0), A._arrayInstanceType(t5));
      t6 = _this._async_environment0$_mixins;
      t6 = A._setArrayType(t6.slice(0), A._arrayInstanceType(t6));
      return A.AsyncEnvironment$_0(_this._async_environment0$_modules, _this._async_environment0$_namespaceNodes, _this._async_environment0$_globalModules, _this._async_environment0$_importedModules, t1, t2, _this._async_environment0$_allModules, t3, t4, t5, t6, _this._async_environment0$_content);
    },
    addModule$3$namespace(module, nodeWithSpan, namespace) {
      var t1, t2, span, _this = this;
      if (namespace == null) {
        _this._async_environment0$_globalModules.$indexSet(0, module, nodeWithSpan);
        _this._async_environment0$_allModules.push(module);
        for (t1 = J.get$iterator$ax(J.get$keys$z(B.JSArray_methods.get$first(_this._async_environment0$_variables))); t1.moveNext$0();) {
          t2 = t1.get$current(t1);
          if (module.get$variables().containsKey$1(t2))
            throw A.wrapException(A.SassScriptException$0(string$.This_ma + t2 + '".'));
        }
      } else {
        t1 = _this._async_environment0$_modules;
        if (t1.containsKey$1(namespace)) {
          t1 = _this._async_environment0$_namespaceNodes.$index(0, namespace);
          span = t1 == null ? null : t1.span;
          t1 = A.LinkedHashMap_LinkedHashMap$_empty(type$.FileSpan, type$.String);
          if (span != null)
            t1.$indexSet(0, span, "original @use");
          throw A.wrapException(A.MultiSpanSassScriptException$0(string$.There_ + namespace + '".', "new @use", t1));
        }
        t1.$indexSet(0, namespace, module);
        _this._async_environment0$_namespaceNodes.$indexSet(0, namespace, nodeWithSpan);
        _this._async_environment0$_allModules.push(module);
      }
    },
    forwardModule$2(module, rule) {
      var view, t1, t2, _this = this,
        forwardedModules = _this._async_environment0$_forwardedModules;
      if (forwardedModules == null)
        forwardedModules = _this._async_environment0$_forwardedModules = A.LinkedHashMap_LinkedHashMap$_empty(type$.Module_AsyncCallable_2, type$.AstNode_2);
      view = A.ForwardedModuleView_ifNecessary0(module, rule, type$.AsyncCallable_2);
      for (t1 = A.LinkedHashMapKeyIterator$(forwardedModules, forwardedModules._modifications); t1.moveNext$0();) {
        t2 = t1.__js_helper$_current;
        _this._async_environment0$_assertNoConflicts$5(view.get$variables(), t2.get$variables(), view, t2, "variable");
        _this._async_environment0$_assertNoConflicts$5(view.get$functions(view), t2.get$functions(t2), view, t2, "function");
        _this._async_environment0$_assertNoConflicts$5(view.get$mixins(), t2.get$mixins(), view, t2, "mixin");
      }
      _this._async_environment0$_allModules.push(module);
      forwardedModules.$indexSet(0, view, rule);
    },
    _async_environment0$_assertNoConflicts$5(newMembers, oldMembers, newModule, oldModule, type) {
      var larger, smaller, t1, t2, $name, span;
      if (newMembers.get$length(newMembers) < oldMembers.get$length(oldMembers)) {
        larger = oldMembers;
        smaller = newMembers;
      } else {
        larger = newMembers;
        smaller = oldMembers;
      }
      for (t1 = J.get$iterator$ax(smaller.get$keys(smaller)), t2 = type === "variable"; t1.moveNext$0();) {
        $name = t1.get$current(t1);
        if (!larger.containsKey$1($name))
          continue;
        if (t2 ? newModule.variableIdentity$1($name) === oldModule.variableIdentity$1($name) : J.$eq$(larger.$index(0, $name), smaller.$index(0, $name)))
          continue;
        if (t2)
          $name = "$" + $name;
        t1 = this._async_environment0$_forwardedModules;
        if (t1 == null)
          span = null;
        else {
          t1 = t1.$index(0, oldModule);
          span = t1 == null ? null : J.get$span$z(t1);
        }
        t1 = A.LinkedHashMap_LinkedHashMap$_empty(type$.FileSpan, type$.String);
        if (span != null)
          t1.$indexSet(0, span, "original @forward");
        throw A.wrapException(A.MultiSpanSassScriptException$0("Two forwarded modules both define a " + type + " named " + $name + ".", "new @forward", t1));
      }
    },
    importForwards$1(module) {
      var forwardedModules, t1, t2, t3, t4, t5, forwardedVariableNames, forwardedFunctionNames, forwardedMixinNames, _i, entry, shadowed, t6, _length, _list, _this = this,
        forwarded = module._async_environment0$_environment._async_environment0$_forwardedModules;
      if (forwarded == null)
        return;
      forwardedModules = _this._async_environment0$_forwardedModules;
      if (forwardedModules != null) {
        t1 = A.LinkedHashMap_LinkedHashMap$_empty(type$.Module_AsyncCallable_2, type$.AstNode_2);
        for (t2 = forwarded.get$entries(forwarded), t2 = t2.get$iterator(t2), t3 = _this._async_environment0$_globalModules; t2.moveNext$0();) {
          t4 = t2.get$current(t2);
          t5 = t4.key;
          if (!forwardedModules.containsKey$1(t5) || !t3.containsKey$1(t5))
            t1.$indexSet(0, t5, t4.value);
        }
        forwarded = t1;
      } else
        forwardedModules = _this._async_environment0$_forwardedModules = A.LinkedHashMap_LinkedHashMap$_empty(type$.Module_AsyncCallable_2, type$.AstNode_2);
      t1 = A._instanceType(forwarded)._eval$1("LinkedHashMapKeyIterable<1>");
      t2 = t1._eval$1("ExpandIterable<Iterable.E,String>");
      t3 = t2._eval$1("Iterable.E");
      forwardedVariableNames = A.LinkedHashSet_LinkedHashSet$of(new A.ExpandIterable(new A.LinkedHashMapKeyIterable(forwarded, t1), new A.AsyncEnvironment_importForwards_closure2(), t2), t3);
      forwardedFunctionNames = A.LinkedHashSet_LinkedHashSet$of(new A.ExpandIterable(new A.LinkedHashMapKeyIterable(forwarded, t1), new A.AsyncEnvironment_importForwards_closure3(), t2), t3);
      forwardedMixinNames = A.LinkedHashSet_LinkedHashSet$of(new A.ExpandIterable(new A.LinkedHashMapKeyIterable(forwarded, t1), new A.AsyncEnvironment_importForwards_closure4(), t2), t3);
      t2 = _this._async_environment0$_variables;
      t3 = t2.length;
      if (t3 === 1) {
        for (t1 = _this._async_environment0$_importedModules, t3 = t1.get$entries(t1).toList$0(0), t4 = t3.length, t5 = type$.AsyncCallable_2, _i = 0; _i < t3.length; t3.length === t4 || (0, A.throwConcurrentModificationError)(t3), ++_i) {
          entry = t3[_i];
          module = entry.key;
          shadowed = A.ShadowedModuleView_ifNecessary0(module, forwardedFunctionNames, forwardedMixinNames, forwardedVariableNames, t5);
          if (shadowed != null) {
            t1.remove$1(0, module);
            t6 = shadowed.variables;
            if (t6.get$isEmpty(t6)) {
              t6 = shadowed.functions;
              if (t6.get$isEmpty(t6)) {
                t6 = shadowed.mixins;
                if (t6.get$isEmpty(t6)) {
                  t6 = shadowed._shadowed_view0$_inner;
                  t6 = t6.get$css(t6);
                  t6 = J.get$isEmpty$asx(t6.get$children(t6));
                } else
                  t6 = false;
              } else
                t6 = false;
            } else
              t6 = false;
            if (!t6)
              t1.$indexSet(0, shadowed, entry.value);
          }
        }
        for (t3 = forwardedModules.get$entries(forwardedModules).toList$0(0), t4 = t3.length, _i = 0; _i < t3.length; t3.length === t4 || (0, A.throwConcurrentModificationError)(t3), ++_i) {
          entry = t3[_i];
          module = entry.key;
          shadowed = A.ShadowedModuleView_ifNecessary0(module, forwardedFunctionNames, forwardedMixinNames, forwardedVariableNames, t5);
          if (shadowed != null) {
            forwardedModules.remove$1(0, module);
            t6 = shadowed.variables;
            if (t6.get$isEmpty(t6)) {
              t6 = shadowed.functions;
              if (t6.get$isEmpty(t6)) {
                t6 = shadowed.mixins;
                if (t6.get$isEmpty(t6)) {
                  t6 = shadowed._shadowed_view0$_inner;
                  t6 = t6.get$css(t6);
                  t6 = J.get$isEmpty$asx(t6.get$children(t6));
                } else
                  t6 = false;
              } else
                t6 = false;
            } else
              t6 = false;
            if (!t6)
              forwardedModules.$indexSet(0, shadowed, entry.value);
          }
        }
        t1.addAll$1(0, forwarded);
        forwardedModules.addAll$1(0, forwarded);
      } else {
        t4 = _this._async_environment0$_nestedForwardedModules;
        if (t4 == null) {
          _length = t3 - 1;
          _list = J.JSArray_JSArray$allocateGrowable(_length, type$.List_Module_AsyncCallable_2);
          for (t3 = type$.JSArray_Module_AsyncCallable_2, _i = 0; _i < _length; ++_i)
            _list[_i] = A._setArrayType([], t3);
          _this._async_environment0$_nestedForwardedModules = _list;
          t3 = _list;
        } else
          t3 = t4;
        B.JSArray_methods.addAll$1(B.JSArray_methods.get$last(t3), new A.LinkedHashMapKeyIterable(forwarded, t1));
      }
      for (t1 = A._LinkedHashSetIterator$(forwardedVariableNames, forwardedVariableNames._collection$_modifications), t3 = _this._async_environment0$_variableIndices, t4 = _this._async_environment0$_variableNodes, t5 = A._instanceType(t1)._precomputed1; t1.moveNext$0();) {
        t6 = t1._collection$_current;
        if (t6 == null)
          t6 = t5._as(t6);
        t3.remove$1(0, t6);
        J.remove$1$z(B.JSArray_methods.get$last(t2), t6);
        J.remove$1$z(B.JSArray_methods.get$last(t4), t6);
      }
      for (t1 = A._LinkedHashSetIterator$(forwardedFunctionNames, forwardedFunctionNames._collection$_modifications), t2 = _this._async_environment0$_functionIndices, t3 = _this._async_environment0$_functions, t4 = A._instanceType(t1)._precomputed1; t1.moveNext$0();) {
        t5 = t1._collection$_current;
        if (t5 == null)
          t5 = t4._as(t5);
        t2.remove$1(0, t5);
        J.remove$1$z(B.JSArray_methods.get$last(t3), t5);
      }
      for (t1 = A._LinkedHashSetIterator$(forwardedMixinNames, forwardedMixinNames._collection$_modifications), t2 = _this._async_environment0$_mixinIndices, t3 = _this._async_environment0$_mixins, t4 = A._instanceType(t1)._precomputed1; t1.moveNext$0();) {
        t5 = t1._collection$_current;
        if (t5 == null)
          t5 = t4._as(t5);
        t2.remove$1(0, t5);
        J.remove$1$z(B.JSArray_methods.get$last(t3), t5);
      }
    },
    getVariable$2$namespace($name, namespace) {
      var t1, index, _this = this;
      if (namespace != null)
        return _this._async_environment0$_getModule$1(namespace).get$variables().$index(0, $name);
      if (_this._async_environment0$_lastVariableName === $name) {
        t1 = _this._async_environment0$_lastVariableIndex;
        t1.toString;
        t1 = J.$index$asx(_this._async_environment0$_variables[t1], $name);
        return t1 == null ? _this._async_environment0$_getVariableFromGlobalModule$1($name) : t1;
      }
      t1 = _this._async_environment0$_variableIndices;
      index = t1.$index(0, $name);
      if (index != null) {
        _this._async_environment0$_lastVariableName = $name;
        _this._async_environment0$_lastVariableIndex = index;
        t1 = J.$index$asx(_this._async_environment0$_variables[index], $name);
        return t1 == null ? _this._async_environment0$_getVariableFromGlobalModule$1($name) : t1;
      }
      index = _this._async_environment0$_variableIndex$1($name);
      if (index == null)
        return _this._async_environment0$_getVariableFromGlobalModule$1($name);
      _this._async_environment0$_lastVariableName = $name;
      _this._async_environment0$_lastVariableIndex = index;
      t1.$indexSet(0, $name, index);
      t1 = J.$index$asx(_this._async_environment0$_variables[index], $name);
      return t1 == null ? _this._async_environment0$_getVariableFromGlobalModule$1($name) : t1;
    },
    getVariable$1($name) {
      return this.getVariable$2$namespace($name, null);
    },
    _async_environment0$_getVariableFromGlobalModule$1($name) {
      return this._async_environment0$_fromOneModule$1$3($name, "variable", new A.AsyncEnvironment__getVariableFromGlobalModule_closure0($name), type$.Value_2);
    },
    getVariableNode$2$namespace($name, namespace) {
      var t1, index, _this = this;
      if (namespace != null)
        return _this._async_environment0$_getModule$1(namespace).get$variableNodes().$index(0, $name);
      if (_this._async_environment0$_lastVariableName === $name) {
        t1 = _this._async_environment0$_lastVariableIndex;
        t1.toString;
        t1 = J.$index$asx(_this._async_environment0$_variableNodes[t1], $name);
        return t1 == null ? _this._async_environment0$_getVariableNodeFromGlobalModule$1($name) : t1;
      }
      t1 = _this._async_environment0$_variableIndices;
      index = t1.$index(0, $name);
      if (index != null) {
        _this._async_environment0$_lastVariableName = $name;
        _this._async_environment0$_lastVariableIndex = index;
        t1 = J.$index$asx(_this._async_environment0$_variableNodes[index], $name);
        return t1 == null ? _this._async_environment0$_getVariableNodeFromGlobalModule$1($name) : t1;
      }
      index = _this._async_environment0$_variableIndex$1($name);
      if (index == null)
        return _this._async_environment0$_getVariableNodeFromGlobalModule$1($name);
      _this._async_environment0$_lastVariableName = $name;
      _this._async_environment0$_lastVariableIndex = index;
      t1.$indexSet(0, $name, index);
      t1 = J.$index$asx(_this._async_environment0$_variableNodes[index], $name);
      return t1 == null ? _this._async_environment0$_getVariableNodeFromGlobalModule$1($name) : t1;
    },
    _async_environment0$_getVariableNodeFromGlobalModule$1($name) {
      var t1, t2, value;
      for (t1 = this._async_environment0$_importedModules, t2 = this._async_environment0$_globalModules, t2 = new A.LinkedHashMapKeyIterable(t1, A._instanceType(t1)._eval$1("LinkedHashMapKeyIterable<1>")).followedBy$1(0, new A.LinkedHashMapKeyIterable(t2, A._instanceType(t2)._eval$1("LinkedHashMapKeyIterable<1>"))), t2 = new A.FollowedByIterator(J.get$iterator$ax(t2.__internal$_first), t2._second); t2.moveNext$0();) {
        t1 = t2._currentIterator;
        value = t1.get$current(t1).get$variableNodes().$index(0, $name);
        if (value != null)
          return value;
      }
      return null;
    },
    globalVariableExists$2$namespace($name, namespace) {
      if (namespace != null)
        return this._async_environment0$_getModule$1(namespace).get$variables().containsKey$1($name);
      if (B.JSArray_methods.get$first(this._async_environment0$_variables).containsKey$1($name))
        return true;
      return this._async_environment0$_getVariableFromGlobalModule$1($name) != null;
    },
    globalVariableExists$1($name) {
      return this.globalVariableExists$2$namespace($name, null);
    },
    _async_environment0$_variableIndex$1($name) {
      var t1, i;
      for (t1 = this._async_environment0$_variables, i = t1.length - 1; i >= 0; --i)
        if (t1[i].containsKey$1($name))
          return i;
      return null;
    },
    setVariable$5$global$namespace($name, value, nodeWithSpan, global, namespace) {
      var t1, moduleWithName, nestedForwardedModules, t2, t3, t4, t5, index, _this = this;
      if (namespace != null) {
        _this._async_environment0$_getModule$1(namespace).setVariable$3($name, value, nodeWithSpan);
        return;
      }
      if (global || _this._async_environment0$_variables.length === 1) {
        _this._async_environment0$_variableIndices.putIfAbsent$2($name, new A.AsyncEnvironment_setVariable_closure2(_this, $name));
        t1 = _this._async_environment0$_variables;
        if (!B.JSArray_methods.get$first(t1).containsKey$1($name)) {
          moduleWithName = _this._async_environment0$_fromOneModule$1$3($name, "variable", new A.AsyncEnvironment_setVariable_closure3($name), type$.Module_AsyncCallable_2);
          if (moduleWithName != null) {
            moduleWithName.setVariable$3($name, value, nodeWithSpan);
            return;
          }
        }
        J.$indexSet$ax(B.JSArray_methods.get$first(t1), $name, value);
        J.$indexSet$ax(B.JSArray_methods.get$first(_this._async_environment0$_variableNodes), $name, nodeWithSpan);
        return;
      }
      nestedForwardedModules = _this._async_environment0$_nestedForwardedModules;
      if (nestedForwardedModules != null && !_this._async_environment0$_variableIndices.containsKey$1($name) && _this._async_environment0$_variableIndex$1($name) == null)
        for (t1 = new A.ReversedListIterable(nestedForwardedModules, A.instanceType(nestedForwardedModules)._eval$1("ReversedListIterable<1>")), t1 = new A.ListIterator(t1, t1.get$length(t1)), t2 = A._instanceType(t1)._precomputed1; t1.moveNext$0();) {
          t3 = t1.__internal$_current;
          for (t3 = J.get$reversed$ax(t3 == null ? t2._as(t3) : t3), t3 = new A.ListIterator(t3, t3.get$length(t3)), t4 = A._instanceType(t3)._precomputed1; t3.moveNext$0();) {
            t5 = t3.__internal$_current;
            if (t5 == null)
              t5 = t4._as(t5);
            if (t5.get$variables().containsKey$1($name)) {
              t5.setVariable$3($name, value, nodeWithSpan);
              return;
            }
          }
        }
      if (_this._async_environment0$_lastVariableName === $name) {
        t1 = _this._async_environment0$_lastVariableIndex;
        t1.toString;
        index = t1;
      } else
        index = _this._async_environment0$_variableIndices.putIfAbsent$2($name, new A.AsyncEnvironment_setVariable_closure4(_this, $name));
      if (!_this._async_environment0$_inSemiGlobalScope && index === 0) {
        index = _this._async_environment0$_variables.length - 1;
        _this._async_environment0$_variableIndices.$indexSet(0, $name, index);
      }
      _this._async_environment0$_lastVariableName = $name;
      _this._async_environment0$_lastVariableIndex = index;
      J.$indexSet$ax(_this._async_environment0$_variables[index], $name, value);
      J.$indexSet$ax(_this._async_environment0$_variableNodes[index], $name, nodeWithSpan);
    },
    setVariable$4$global($name, value, nodeWithSpan, global) {
      return this.setVariable$5$global$namespace($name, value, nodeWithSpan, global, null);
    },
    setLocalVariable$3($name, value, nodeWithSpan) {
      var index, _this = this,
        t1 = _this._async_environment0$_variables,
        t2 = t1.length;
      _this._async_environment0$_lastVariableName = $name;
      index = _this._async_environment0$_lastVariableIndex = t2 - 1;
      _this._async_environment0$_variableIndices.$indexSet(0, $name, index);
      J.$indexSet$ax(t1[index], $name, value);
      J.$indexSet$ax(_this._async_environment0$_variableNodes[index], $name, nodeWithSpan);
    },
    getFunction$2$namespace($name, namespace) {
      var t1, index, _this = this;
      if (namespace != null) {
        t1 = _this._async_environment0$_getModule$1(namespace);
        return t1.get$functions(t1).$index(0, $name);
      }
      t1 = _this._async_environment0$_functionIndices;
      index = t1.$index(0, $name);
      if (index != null) {
        t1 = J.$index$asx(_this._async_environment0$_functions[index], $name);
        return t1 == null ? _this._async_environment0$_getFunctionFromGlobalModule$1($name) : t1;
      }
      index = _this._async_environment0$_functionIndex$1($name);
      if (index == null)
        return _this._async_environment0$_getFunctionFromGlobalModule$1($name);
      t1.$indexSet(0, $name, index);
      t1 = J.$index$asx(_this._async_environment0$_functions[index], $name);
      return t1 == null ? _this._async_environment0$_getFunctionFromGlobalModule$1($name) : t1;
    },
    _async_environment0$_getFunctionFromGlobalModule$1($name) {
      return this._async_environment0$_fromOneModule$1$3($name, "function", new A.AsyncEnvironment__getFunctionFromGlobalModule_closure0($name), type$.AsyncCallable_2);
    },
    _async_environment0$_functionIndex$1($name) {
      var t1, i;
      for (t1 = this._async_environment0$_functions, i = t1.length - 1; i >= 0; --i)
        if (t1[i].containsKey$1($name))
          return i;
      return null;
    },
    getMixin$2$namespace($name, namespace) {
      var t1, index, _this = this;
      if (namespace != null)
        return _this._async_environment0$_getModule$1(namespace).get$mixins().$index(0, $name);
      t1 = _this._async_environment0$_mixinIndices;
      index = t1.$index(0, $name);
      if (index != null) {
        t1 = J.$index$asx(_this._async_environment0$_mixins[index], $name);
        return t1 == null ? _this._async_environment0$_getMixinFromGlobalModule$1($name) : t1;
      }
      index = _this._async_environment0$_mixinIndex$1($name);
      if (index == null)
        return _this._async_environment0$_getMixinFromGlobalModule$1($name);
      t1.$indexSet(0, $name, index);
      t1 = J.$index$asx(_this._async_environment0$_mixins[index], $name);
      return t1 == null ? _this._async_environment0$_getMixinFromGlobalModule$1($name) : t1;
    },
    _async_environment0$_getMixinFromGlobalModule$1($name) {
      return this._async_environment0$_fromOneModule$1$3($name, "mixin", new A.AsyncEnvironment__getMixinFromGlobalModule_closure0($name), type$.AsyncCallable_2);
    },
    _async_environment0$_mixinIndex$1($name) {
      var t1, i;
      for (t1 = this._async_environment0$_mixins, i = t1.length - 1; i >= 0; --i)
        if (t1[i].containsKey$1($name))
          return i;
      return null;
    },
    withContent$2($content, callback) {
      return this.withContent$body$AsyncEnvironment0($content, callback);
    },
    withContent$body$AsyncEnvironment0($content, callback) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, oldContent;
      var $async$withContent$2 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              oldContent = $async$self._async_environment0$_content;
              $async$self._async_environment0$_content = $content;
              $async$goto = 2;
              return A._asyncAwait(callback.call$0(), $async$withContent$2);
            case 2:
              // returning from await.
              $async$self._async_environment0$_content = oldContent;
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$withContent$2, $async$completer);
    },
    asMixin$1(callback) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, oldInMixin;
      var $async$asMixin$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              oldInMixin = $async$self._async_environment0$_inMixin;
              $async$self._async_environment0$_inMixin = true;
              $async$goto = 2;
              return A._asyncAwait(callback.call$0(), $async$asMixin$1);
            case 2:
              // returning from await.
              $async$self._async_environment0$_inMixin = oldInMixin;
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$asMixin$1, $async$completer);
    },
    scope$1$3$semiGlobal$when(callback, semiGlobal, when, $T) {
      return this.scope$body$AsyncEnvironment0(callback, semiGlobal, when, $T, $T);
    },
    scope$1$1(callback, $T) {
      return this.scope$1$3$semiGlobal$when(callback, false, true, $T);
    },
    scope$1$2$when(callback, when, $T) {
      return this.scope$1$3$semiGlobal$when(callback, false, when, $T);
    },
    scope$1$2$semiGlobal(callback, semiGlobal, $T) {
      return this.scope$1$3$semiGlobal$when(callback, semiGlobal, true, $T);
    },
    scope$body$AsyncEnvironment0(callback, semiGlobal, when, $T, $async$type) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, wasInSemiGlobalScope, $name, name0, name1, t1, t2, t3, t4, t5, t6;
      var $async$scope$1$3$semiGlobal$when = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              semiGlobal = semiGlobal && $async$self._async_environment0$_inSemiGlobalScope;
              wasInSemiGlobalScope = $async$self._async_environment0$_inSemiGlobalScope;
              $async$self._async_environment0$_inSemiGlobalScope = semiGlobal;
              $async$goto = !when ? 3 : 4;
              break;
            case 3:
              // then
              $async$handler = 5;
              $async$goto = 8;
              return A._asyncAwait(callback.call$0(), $async$scope$1$3$semiGlobal$when);
            case 8:
              // returning from await.
              t1 = $async$result;
              $async$returnValue = t1;
              $async$next = [1];
              // goto finally
              $async$goto = 6;
              break;
              $async$next.push(7);
              // goto finally
              $async$goto = 6;
              break;
            case 5:
              // uncaught
              $async$next = [2];
            case 6:
              // finally
              $async$handler = 2;
              $async$self._async_environment0$_inSemiGlobalScope = wasInSemiGlobalScope;
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 7:
              // after finally
            case 4:
              // join
              t1 = $async$self._async_environment0$_variables;
              t2 = type$.String;
              B.JSArray_methods.add$1(t1, A.LinkedHashMap_LinkedHashMap$_empty(t2, type$.Value_2));
              t3 = $async$self._async_environment0$_variableNodes;
              B.JSArray_methods.add$1(t3, A.LinkedHashMap_LinkedHashMap$_empty(t2, type$.AstNode_2));
              t4 = $async$self._async_environment0$_functions;
              t5 = type$.AsyncCallable_2;
              B.JSArray_methods.add$1(t4, A.LinkedHashMap_LinkedHashMap$_empty(t2, t5));
              t6 = $async$self._async_environment0$_mixins;
              B.JSArray_methods.add$1(t6, A.LinkedHashMap_LinkedHashMap$_empty(t2, t5));
              t5 = $async$self._async_environment0$_nestedForwardedModules;
              if (t5 != null)
                t5.push(A._setArrayType([], type$.JSArray_Module_AsyncCallable_2));
              $async$handler = 9;
              $async$goto = 12;
              return A._asyncAwait(callback.call$0(), $async$scope$1$3$semiGlobal$when);
            case 12:
              // returning from await.
              t2 = $async$result;
              $async$returnValue = t2;
              $async$next = [1];
              // goto finally
              $async$goto = 10;
              break;
              $async$next.push(11);
              // goto finally
              $async$goto = 10;
              break;
            case 9:
              // uncaught
              $async$next = [2];
            case 10:
              // finally
              $async$handler = 2;
              $async$self._async_environment0$_inSemiGlobalScope = wasInSemiGlobalScope;
              $async$self._async_environment0$_lastVariableIndex = $async$self._async_environment0$_lastVariableName = null;
              for (t1 = J.get$iterator$ax(J.get$keys$z(B.JSArray_methods.removeLast$0(t1))), t2 = $async$self._async_environment0$_variableIndices; t1.moveNext$0();) {
                $name = t1.get$current(t1);
                t2.remove$1(0, $name);
              }
              B.JSArray_methods.removeLast$0(t3);
              for (t1 = J.get$iterator$ax(J.get$keys$z(B.JSArray_methods.removeLast$0(t4))), t2 = $async$self._async_environment0$_functionIndices; t1.moveNext$0();) {
                name0 = t1.get$current(t1);
                t2.remove$1(0, name0);
              }
              for (t1 = J.get$iterator$ax(J.get$keys$z(B.JSArray_methods.removeLast$0(t6))), t2 = $async$self._async_environment0$_mixinIndices; t1.moveNext$0();) {
                name1 = t1.get$current(t1);
                t2.remove$1(0, name1);
              }
              t1 = $async$self._async_environment0$_nestedForwardedModules;
              if (t1 != null)
                t1.pop();
              // goto the next finally handler
              $async$goto = $async$next.pop();
              break;
            case 11:
              // after finally
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$scope$1$3$semiGlobal$when, $async$completer);
    },
    toImplicitConfiguration$0() {
      var t1, t2, i, values, nodes, t3, t4, t5, t6,
        configuration = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.ConfiguredValue_2);
      for (t1 = this._async_environment0$_variables, t2 = this._async_environment0$_variableNodes, i = 0; i < t1.length; ++i) {
        values = t1[i];
        nodes = t2[i];
        for (t3 = values.get$entries(values), t3 = t3.get$iterator(t3); t3.moveNext$0();) {
          t4 = t3.get$current(t3);
          t5 = t4.key;
          t4 = t4.value;
          t6 = nodes.$index(0, t5);
          t6.toString;
          configuration.$indexSet(0, t5, new A.ConfiguredValue0(t4, null, t6));
        }
      }
      return new A.Configuration0(configuration);
    },
    toModule$2(css, extensionStore) {
      return A._EnvironmentModule__EnvironmentModule2(this, css, extensionStore, A.NullableExtension_andThen0(this._async_environment0$_forwardedModules, new A.AsyncEnvironment_toModule_closure0()));
    },
    toDummyModule$0() {
      return A._EnvironmentModule__EnvironmentModule2(this, new A.CssStylesheet0(new A.UnmodifiableListView(B.List_empty11, type$.UnmodifiableListView_CssNode_2), A.SourceFile$decoded(B.List_empty1, "<dummy module>").span$1(0, 0)), B.C_EmptyExtensionStore0, A.NullableExtension_andThen0(this._async_environment0$_forwardedModules, new A.AsyncEnvironment_toDummyModule_closure0()));
    },
    _async_environment0$_getModule$1(namespace) {
      var module = this._async_environment0$_modules.$index(0, namespace);
      if (module != null)
        return module;
      throw A.wrapException(A.SassScriptException$0('There is no module with the namespace "' + namespace + '".'));
    },
    _async_environment0$_fromOneModule$1$3($name, type, callback, $T) {
      var t1, t2, t3, t4, t5, value, identity, valueInModule, identityFromModule, spans,
        nestedForwardedModules = this._async_environment0$_nestedForwardedModules;
      if (nestedForwardedModules != null)
        for (t1 = new A.ReversedListIterable(nestedForwardedModules, A._arrayInstanceType(nestedForwardedModules)._eval$1("ReversedListIterable<1>")), t1 = new A.ListIterator(t1, t1.get$length(t1)), t2 = A._instanceType(t1)._precomputed1; t1.moveNext$0();) {
          t3 = t1.__internal$_current;
          for (t3 = J.get$reversed$ax(t3 == null ? t2._as(t3) : t3), t3 = new A.ListIterator(t3, t3.get$length(t3)), t4 = A._instanceType(t3)._precomputed1; t3.moveNext$0();) {
            t5 = t3.__internal$_current;
            value = callback.call$1(t5 == null ? t4._as(t5) : t5);
            if (value != null)
              return value;
          }
        }
      for (t1 = this._async_environment0$_importedModules, t1 = A.LinkedHashMapKeyIterator$(t1, t1._modifications); t1.moveNext$0();) {
        value = callback.call$1(t1.__js_helper$_current);
        if (value != null)
          return value;
      }
      for (t1 = this._async_environment0$_globalModules, t2 = A.LinkedHashMapKeyIterator$(t1, t1._modifications), t3 = type$.AsyncCallable_2, value = null, identity = null; t2.moveNext$0();) {
        t4 = t2.__js_helper$_current;
        valueInModule = callback.call$1(t4);
        if (valueInModule == null)
          continue;
        identityFromModule = t3._is(valueInModule) ? valueInModule : t4.variableIdentity$1($name);
        if (identityFromModule.$eq(0, identity))
          continue;
        if (value != null) {
          spans = t1.get$entries(t1).map$1$1(0, new A.AsyncEnvironment__fromOneModule_closure0(callback, $T), type$.nullable_FileSpan);
          t2 = A.LinkedHashMap_LinkedHashMap$_empty(type$.FileSpan, type$.String);
          for (t1 = spans.get$iterator(spans), t3 = "includes " + type; t1.moveNext$0();) {
            t4 = t1.get$current(t1);
            if (t4 != null)
              t2.$indexSet(0, t4, t3);
          }
          throw A.wrapException(A.MultiSpanSassScriptException$0("This " + type + string$.x20is_av, type + " use", t2));
        }
        identity = identityFromModule;
        value = valueInModule;
      }
      return value;
    }
  };
  A.AsyncEnvironment_importForwards_closure2.prototype = {
    call$1(module) {
      var t1 = module.get$variables();
      return t1.get$keys(t1);
    },
    $signature: 125
  };
  A.AsyncEnvironment_importForwards_closure3.prototype = {
    call$1(module) {
      var t1 = module.get$functions(module);
      return t1.get$keys(t1);
    },
    $signature: 125
  };
  A.AsyncEnvironment_importForwards_closure4.prototype = {
    call$1(module) {
      var t1 = module.get$mixins();
      return t1.get$keys(t1);
    },
    $signature: 125
  };
  A.AsyncEnvironment__getVariableFromGlobalModule_closure0.prototype = {
    call$1(module) {
      return module.get$variables().$index(0, this.name);
    },
    $signature: 300
  };
  A.AsyncEnvironment_setVariable_closure2.prototype = {
    call$0() {
      var t1 = this.$this;
      t1._async_environment0$_lastVariableName = this.name;
      return t1._async_environment0$_lastVariableIndex = 0;
    },
    $signature: 12
  };
  A.AsyncEnvironment_setVariable_closure3.prototype = {
    call$1(module) {
      return module.get$variables().containsKey$1(this.name) ? module : null;
    },
    $signature: 301
  };
  A.AsyncEnvironment_setVariable_closure4.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._async_environment0$_variableIndex$1(this.name);
      return t2 == null ? t1._async_environment0$_variables.length - 1 : t2;
    },
    $signature: 12
  };
  A.AsyncEnvironment__getFunctionFromGlobalModule_closure0.prototype = {
    call$1(module) {
      return module.get$functions(module).$index(0, this.name);
    },
    $signature: 155
  };
  A.AsyncEnvironment__getMixinFromGlobalModule_closure0.prototype = {
    call$1(module) {
      return module.get$mixins().$index(0, this.name);
    },
    $signature: 155
  };
  A.AsyncEnvironment_toModule_closure0.prototype = {
    call$1(modules) {
      return new A.MapKeySet(modules, type$.MapKeySet_Module_AsyncCallable_2);
    },
    $signature: 156
  };
  A.AsyncEnvironment_toDummyModule_closure0.prototype = {
    call$1(modules) {
      return new A.MapKeySet(modules, type$.MapKeySet_Module_AsyncCallable_2);
    },
    $signature: 156
  };
  A.AsyncEnvironment__fromOneModule_closure0.prototype = {
    call$1(entry) {
      return A.NullableExtension_andThen0(this.callback.call$1(entry.key), new A.AsyncEnvironment__fromOneModule__closure0(entry, this.T));
    },
    $signature: 304
  };
  A.AsyncEnvironment__fromOneModule__closure0.prototype = {
    call$1(_) {
      return J.get$span$z(this.entry.value);
    },
    $signature() {
      return this.T._eval$1("FileSpan(0)");
    }
  };
  A._EnvironmentModule2.prototype = {
    get$url(_) {
      var t1 = this.css;
      return t1.get$span(t1).file.url;
    },
    setVariable$3($name, value, nodeWithSpan) {
      var t1, t2,
        module = this._async_environment0$_modulesByVariable.$index(0, $name);
      if (module != null) {
        module.setVariable$3($name, value, nodeWithSpan);
        return;
      }
      t1 = this._async_environment0$_environment;
      t2 = t1._async_environment0$_variables;
      if (!B.JSArray_methods.get$first(t2).containsKey$1($name))
        throw A.wrapException(A.SassScriptException$0("Undefined variable."));
      J.$indexSet$ax(B.JSArray_methods.get$first(t2), $name, value);
      J.$indexSet$ax(B.JSArray_methods.get$first(t1._async_environment0$_variableNodes), $name, nodeWithSpan);
      return;
    },
    variableIdentity$1($name) {
      var module = this._async_environment0$_modulesByVariable.$index(0, $name);
      return module == null ? this : module.variableIdentity$1($name);
    },
    cloneCss$0() {
      var newCssAndExtensionStore, _this = this,
        t1 = _this.css;
      if (J.get$isEmpty$asx(t1.get$children(t1)))
        return _this;
      newCssAndExtensionStore = A.cloneCssStylesheet0(t1, _this.extensionStore);
      return A._EnvironmentModule$_2(_this._async_environment0$_environment, newCssAndExtensionStore.item1, newCssAndExtensionStore.item2, _this._async_environment0$_modulesByVariable, _this.variables, _this.variableNodes, _this.functions, _this.mixins, _this.transitivelyContainsCss, _this.transitivelyContainsExtensions);
    },
    toString$0(_) {
      var t1 = this.css;
      if (t1.get$span(t1).file.url == null)
        t1 = "<unknown url>";
      else {
        t1 = t1.get$span(t1);
        t1 = $.$get$context().prettyUri$1(t1.file.url);
      }
      return t1;
    },
    $isModule0: 1,
    get$upstream() {
      return this.upstream;
    },
    get$variables() {
      return this.variables;
    },
    get$variableNodes() {
      return this.variableNodes;
    },
    get$functions(receiver) {
      return this.functions;
    },
    get$mixins() {
      return this.mixins;
    },
    get$extensionStore() {
      return this.extensionStore;
    },
    get$css(receiver) {
      return this.css;
    },
    get$transitivelyContainsCss() {
      return this.transitivelyContainsCss;
    },
    get$transitivelyContainsExtensions() {
      return this.transitivelyContainsExtensions;
    }
  };
  A._EnvironmentModule__EnvironmentModule_closure17.prototype = {
    call$1(module) {
      return module.get$variables();
    },
    $signature: 305
  };
  A._EnvironmentModule__EnvironmentModule_closure18.prototype = {
    call$1(module) {
      return module.get$variableNodes();
    },
    $signature: 306
  };
  A._EnvironmentModule__EnvironmentModule_closure19.prototype = {
    call$1(module) {
      return module.get$functions(module);
    },
    $signature: 157
  };
  A._EnvironmentModule__EnvironmentModule_closure20.prototype = {
    call$1(module) {
      return module.get$mixins();
    },
    $signature: 157
  };
  A._EnvironmentModule__EnvironmentModule_closure21.prototype = {
    call$1(module) {
      return module.get$transitivelyContainsCss();
    },
    $signature: 123
  };
  A._EnvironmentModule__EnvironmentModule_closure22.prototype = {
    call$1(module) {
      return module.get$transitivelyContainsExtensions();
    },
    $signature: 123
  };
  A._EvaluateVisitor2.prototype = {
    _EvaluateVisitor$6$functions$importCache$logger$nodeImporter$quietDeps$sourceMap2(functions, importCache, logger, nodeImporter, quietDeps, sourceMap) {
      var t2, metaModule, t3, _i, module, $function, t4, _this = this,
        _s20_ = "$name, $module: null",
        _s9_ = "sass:meta",
        t1 = type$.JSArray_AsyncBuiltInCallable_2,
        metaFunctions = A._setArrayType([A.BuiltInCallable$function0("global-variable-exists", _s20_, new A._EvaluateVisitor_closure29(_this), _s9_), A.BuiltInCallable$function0("variable-exists", "$name", new A._EvaluateVisitor_closure30(_this), _s9_), A.BuiltInCallable$function0("function-exists", _s20_, new A._EvaluateVisitor_closure31(_this), _s9_), A.BuiltInCallable$function0("mixin-exists", _s20_, new A._EvaluateVisitor_closure32(_this), _s9_), A.BuiltInCallable$function0("content-exists", "", new A._EvaluateVisitor_closure33(_this), _s9_), A.BuiltInCallable$function0("module-variables", "$module", new A._EvaluateVisitor_closure34(_this), _s9_), A.BuiltInCallable$function0("module-functions", "$module", new A._EvaluateVisitor_closure35(_this), _s9_), A.BuiltInCallable$function0("get-function", "$name, $css: false, $module: null", new A._EvaluateVisitor_closure36(_this), _s9_), new A.AsyncBuiltInCallable0("call", A.ScssParser$0("@function call($function, $args...) {", null, _s9_).parseArgumentDeclaration$0(), new A._EvaluateVisitor_closure37(_this))], t1),
        metaMixins = A._setArrayType([A.AsyncBuiltInCallable$mixin0("load-css", "$url, $with: null", new A._EvaluateVisitor_closure38(_this), _s9_)], t1);
      t1 = type$.AsyncBuiltInCallable_2;
      t2 = A.List_List$of($.$get$global6(), true, t1);
      B.JSArray_methods.addAll$1(t2, $.$get$local0());
      B.JSArray_methods.addAll$1(t2, metaFunctions);
      metaModule = A.BuiltInModule$0("meta", t2, metaMixins, null, t1);
      for (t1 = A.List_List$of($.$get$coreModules0(), true, type$.BuiltInModule_AsyncBuiltInCallable_2), t1.push(metaModule), t2 = t1.length, t3 = _this._async_evaluate0$_builtInModules, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        module = t1[_i];
        t3.$indexSet(0, module.url, module);
      }
      t1 = A._setArrayType([], type$.JSArray_AsyncCallable_2);
      B.JSArray_methods.addAll$1(t1, functions);
      B.JSArray_methods.addAll$1(t1, $.$get$globalFunctions0());
      B.JSArray_methods.addAll$1(t1, metaFunctions);
      for (t2 = t1.length, t3 = _this._async_evaluate0$_builtInFunctions, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        $function = t1[_i];
        t4 = J.get$name$x($function);
        t3.$indexSet(0, A.stringReplaceAllUnchecked(t4, "_", "-"), $function);
      }
    },
    run$2(_, importer, node) {
      return this.run$body$_EvaluateVisitor0(0, importer, node);
    },
    run$body$_EvaluateVisitor0(_, importer, node) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.EvaluateResult_2),
        $async$returnValue, $async$self = this, t1;
      var $async$run$2 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = type$.nullable_Object;
              $async$returnValue = A.runZoned(new A._EvaluateVisitor_run_closure2($async$self, node, importer), A.LinkedHashMap_LinkedHashMap$_literal([B.Symbol__evaluationContext, new A._EvaluationContext2($async$self, node)], t1, t1), type$.FutureOr_EvaluateResult_2);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$run$2, $async$completer);
    },
    _async_evaluate0$_assertInModule$1$2(value, $name) {
      if (value != null)
        return value;
      throw A.wrapException(A.StateError$("Can't access " + $name + " outside of a module."));
    },
    _async_evaluate0$_assertInModule$2(value, $name) {
      return this._async_evaluate0$_assertInModule$1$2(value, $name, type$.dynamic);
    },
    _async_evaluate0$_loadModule$7$baseUrl$configuration$namesInErrors(url, stackFrame, nodeWithSpan, callback, baseUrl, configuration, namesInErrors) {
      return this._loadModule$body$_EvaluateVisitor0(url, stackFrame, nodeWithSpan, callback, baseUrl, configuration, namesInErrors);
    },
    _async_evaluate0$_loadModule$5$configuration(url, stackFrame, nodeWithSpan, callback, configuration) {
      return this._async_evaluate0$_loadModule$7$baseUrl$configuration$namesInErrors(url, stackFrame, nodeWithSpan, callback, null, configuration, false);
    },
    _async_evaluate0$_loadModule$4(url, stackFrame, nodeWithSpan, callback) {
      return this._async_evaluate0$_loadModule$7$baseUrl$configuration$namesInErrors(url, stackFrame, nodeWithSpan, callback, null, null, false);
    },
    _loadModule$body$_EvaluateVisitor0(url, stackFrame, nodeWithSpan, callback, baseUrl, configuration, namesInErrors) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1, t2, builtInModule;
      var $async$_async_evaluate0$_loadModule$7$baseUrl$configuration$namesInErrors = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              builtInModule = $async$self._async_evaluate0$_builtInModules.$index(0, url);
              $async$goto = builtInModule != null ? 3 : 4;
              break;
            case 3:
              // then
              if (configuration instanceof A.ExplicitConfiguration0) {
                t1 = namesInErrors ? "Built-in module " + url.toString$0(0) + " can't be configured." : "Built-in modules can't be configured.";
                t2 = configuration.nodeWithSpan;
                throw A.wrapException($async$self._async_evaluate0$_exception$2(t1, t2.get$span(t2)));
              }
              $async$goto = 5;
              return A._asyncAwait($async$self._async_evaluate0$_addExceptionSpanAsync$1$2(nodeWithSpan, new A._EvaluateVisitor__loadModule_closure5(callback, builtInModule), type$.void), $async$_async_evaluate0$_loadModule$7$baseUrl$configuration$namesInErrors);
            case 5:
              // returning from await.
              // goto return
              $async$goto = 1;
              break;
            case 4:
              // join
              $async$goto = 6;
              return A._asyncAwait($async$self._async_evaluate0$_withStackFrame$1$3(stackFrame, nodeWithSpan, new A._EvaluateVisitor__loadModule_closure6($async$self, url, nodeWithSpan, baseUrl, namesInErrors, configuration, callback), type$.Null), $async$_async_evaluate0$_loadModule$7$baseUrl$configuration$namesInErrors);
            case 6:
              // returning from await.
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_async_evaluate0$_loadModule$7$baseUrl$configuration$namesInErrors, $async$completer);
    },
    _async_evaluate0$_execute$5$configuration$namesInErrors$nodeWithSpan(importer, stylesheet, configuration, namesInErrors, nodeWithSpan) {
      return this._execute$body$_EvaluateVisitor0(importer, stylesheet, configuration, namesInErrors, nodeWithSpan);
    },
    _async_evaluate0$_execute$2(importer, stylesheet) {
      return this._async_evaluate0$_execute$5$configuration$namesInErrors$nodeWithSpan(importer, stylesheet, null, false, null);
    },
    _execute$body$_EvaluateVisitor0(importer, stylesheet, configuration, namesInErrors, nodeWithSpan) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Module_AsyncCallable_2),
        $async$returnValue, $async$self = this, currentConfiguration, message, t2, existingSpan, configurationSpan, environment, css, extensionStore, module, url, t1, alreadyLoaded;
      var $async$_async_evaluate0$_execute$5$configuration$namesInErrors$nodeWithSpan = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              url = stylesheet.span.file.url;
              t1 = $async$self._async_evaluate0$_modules;
              alreadyLoaded = t1.$index(0, url);
              if (alreadyLoaded != null) {
                t1 = configuration == null;
                currentConfiguration = t1 ? $async$self._async_evaluate0$_configuration : configuration;
                if (currentConfiguration instanceof A.ExplicitConfiguration0) {
                  message = namesInErrors ? $.$get$context().prettyUri$1(url) + string$.x20was_a : string$.This_mw;
                  t2 = $async$self._async_evaluate0$_moduleNodes.$index(0, url);
                  existingSpan = t2 == null ? null : J.get$span$z(t2);
                  if (t1) {
                    t1 = currentConfiguration.nodeWithSpan;
                    configurationSpan = t1.get$span(t1);
                  } else
                    configurationSpan = null;
                  t1 = A.LinkedHashMap_LinkedHashMap$_empty(type$.FileSpan, type$.String);
                  if (existingSpan != null)
                    t1.$indexSet(0, existingSpan, "original load");
                  if (configurationSpan != null)
                    t1.$indexSet(0, configurationSpan, "configuration");
                  throw A.wrapException(t1.get$isEmpty(t1) ? $async$self._async_evaluate0$_exception$1(message) : $async$self._async_evaluate0$_multiSpanException$3(message, "new load", t1));
                }
                $async$returnValue = alreadyLoaded;
                // goto return
                $async$goto = 1;
                break;
              }
              environment = A.AsyncEnvironment$0();
              css = A._Cell$();
              extensionStore = A.ExtensionStore$0();
              $async$goto = 3;
              return A._asyncAwait($async$self._async_evaluate0$_withEnvironment$1$2(environment, new A._EvaluateVisitor__execute_closure2($async$self, importer, stylesheet, extensionStore, configuration, css), type$.Null), $async$_async_evaluate0$_execute$5$configuration$namesInErrors$nodeWithSpan);
            case 3:
              // returning from await.
              module = environment.toModule$2(css._readLocal$0(), extensionStore);
              if (url != null) {
                t1.$indexSet(0, url, module);
                if (nodeWithSpan != null)
                  $async$self._async_evaluate0$_moduleNodes.$indexSet(0, url, nodeWithSpan);
              }
              $async$returnValue = module;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_async_evaluate0$_execute$5$configuration$namesInErrors$nodeWithSpan, $async$completer);
    },
    _async_evaluate0$_addOutOfOrderImports$0() {
      var t1, t2, _this = this, _s5_ = "_root",
        _s13_ = "_endOfImports",
        outOfOrderImports = _this._async_evaluate0$_outOfOrderImports;
      if (outOfOrderImports == null)
        return _this._async_evaluate0$_assertInModule$2(_this._async_evaluate0$__root, _s5_).children;
      t1 = _this._async_evaluate0$_assertInModule$2(_this._async_evaluate0$__root, _s5_).children;
      t1 = A.List_List$of(A.SubListIterable$(t1, 0, A.checkNotNullable(_this._async_evaluate0$_assertInModule$2(_this._async_evaluate0$__endOfImports, _s13_), "count", type$.int), t1.$ti._eval$1("ListMixin.E")), true, type$.ModifiableCssNode_2);
      B.JSArray_methods.addAll$1(t1, outOfOrderImports);
      t2 = _this._async_evaluate0$_assertInModule$2(_this._async_evaluate0$__root, _s5_).children;
      B.JSArray_methods.addAll$1(t1, A.SubListIterable$(t2, _this._async_evaluate0$_assertInModule$2(_this._async_evaluate0$__endOfImports, _s13_), null, t2.$ti._eval$1("ListMixin.E")));
      return t1;
    },
    _async_evaluate0$_combineCss$2$clone(root, clone) {
      var selectors, unsatisfiedExtension, sortedModules, t1, imports, css, t2, t3, statements, index, _this = this;
      if (!B.JSArray_methods.any$1(root.get$upstream(), new A._EvaluateVisitor__combineCss_closure8())) {
        selectors = root.get$extensionStore().get$simpleSelectors();
        unsatisfiedExtension = A.firstOrNull0(root.get$extensionStore().extensionsWhereTarget$1(new A._EvaluateVisitor__combineCss_closure9(selectors)));
        if (unsatisfiedExtension != null)
          _this._async_evaluate0$_throwForUnsatisfiedExtension$1(unsatisfiedExtension);
        return root.get$css(root);
      }
      sortedModules = _this._async_evaluate0$_topologicalModules$1(root);
      if (clone) {
        t1 = sortedModules.$ti._eval$1("MappedListIterable<ListMixin.E,Module0<AsyncCallable0>>");
        sortedModules = A.List_List$of(new A.MappedListIterable(sortedModules, new A._EvaluateVisitor__combineCss_closure10(), t1), true, t1._eval$1("ListIterable.E"));
      }
      _this._async_evaluate0$_extendModules$1(sortedModules);
      t1 = type$.JSArray_CssNode_2;
      imports = A._setArrayType([], t1);
      css = A._setArrayType([], t1);
      for (t1 = J.get$reversed$ax(sortedModules), t1 = new A.ListIterator(t1, t1.get$length(t1)), t2 = A._instanceType(t1)._precomputed1; t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        t3 = t3.get$css(t3);
        statements = t3.get$children(t3);
        index = _this._async_evaluate0$_indexAfterImports$1(statements);
        t3 = J.getInterceptor$ax(statements);
        B.JSArray_methods.addAll$1(imports, t3.getRange$2(statements, 0, index));
        B.JSArray_methods.addAll$1(css, t3.getRange$2(statements, index, t3.get$length(statements)));
      }
      t1 = B.JSArray_methods.$add(imports, css);
      t2 = root.get$css(root);
      return new A.CssStylesheet0(new A.UnmodifiableListView(t1, type$.UnmodifiableListView_CssNode_2), t2.get$span(t2));
    },
    _async_evaluate0$_combineCss$1(root) {
      return this._async_evaluate0$_combineCss$2$clone(root, false);
    },
    _async_evaluate0$_extendModules$1(sortedModules) {
      var t1, t2, originalSelectors, $self, t3, t4, _i, upstream, url,
        downstreamExtensionStores = A.LinkedHashMap_LinkedHashMap$_empty(type$.Uri, type$.List_ExtensionStore_2),
        unsatisfiedExtensions = new A._LinkedIdentityHashSet(type$._LinkedIdentityHashSet_Extension_2);
      for (t1 = J.get$iterator$ax(sortedModules); t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        originalSelectors = t2.get$extensionStore().get$simpleSelectors().toSet$0(0);
        unsatisfiedExtensions.addAll$1(0, t2.get$extensionStore().extensionsWhereTarget$1(new A._EvaluateVisitor__extendModules_closure5(originalSelectors)));
        $self = downstreamExtensionStores.$index(0, t2.get$url(t2));
        t3 = t2.get$extensionStore().get$addExtensions();
        if ($self != null)
          t3.call$1($self);
        t3 = t2.get$extensionStore();
        if (t3.get$isEmpty(t3))
          continue;
        for (t3 = t2.get$upstream(), t4 = t3.length, _i = 0; _i < t3.length; t3.length === t4 || (0, A.throwConcurrentModificationError)(t3), ++_i) {
          upstream = t3[_i];
          url = upstream.get$url(upstream);
          if (url == null)
            continue;
          J.add$1$ax(downstreamExtensionStores.putIfAbsent$2(url, new A._EvaluateVisitor__extendModules_closure6()), t2.get$extensionStore());
        }
        unsatisfiedExtensions.removeAll$1(t2.get$extensionStore().extensionsWhereTarget$1(originalSelectors.get$contains(originalSelectors)));
      }
      if (unsatisfiedExtensions._collection$_length !== 0)
        this._async_evaluate0$_throwForUnsatisfiedExtension$1(unsatisfiedExtensions.get$first(unsatisfiedExtensions));
    },
    _async_evaluate0$_throwForUnsatisfiedExtension$1(extension) {
      throw A.wrapException(A.SassException$0(string$.The_ta + extension.target.toString$0(0) + ' !optional" to avoid this error.', extension.span));
    },
    _async_evaluate0$_topologicalModules$1(root) {
      var t1 = type$.Module_AsyncCallable_2,
        sorted = A.QueueList$(null, t1);
      new A._EvaluateVisitor__topologicalModules_visitModule2(A.LinkedHashSet_LinkedHashSet$_empty(t1), sorted).call$1(root);
      return sorted;
    },
    _async_evaluate0$_indexAfterImports$1(statements) {
      var t1, t2, t3, lastImport, i, statement;
      for (t1 = J.getInterceptor$asx(statements), t2 = type$.CssComment_2, t3 = type$.CssImport_2, lastImport = -1, i = 0; i < t1.get$length(statements); ++i) {
        statement = t1.$index(statements, i);
        if (t3._is(statement))
          lastImport = i;
        else if (!t2._is(statement))
          break;
      }
      return lastImport + 1;
    },
    visitStylesheet$1(node) {
      return this.visitStylesheet$body$_EvaluateVisitor0(node);
    },
    visitStylesheet$body$_EvaluateVisitor0(node) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_Value_2),
        $async$returnValue, $async$self = this, t1, t2, _i;
      var $async$visitStylesheet$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = node.children, t2 = t1.length, _i = 0;
            case 3:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $async$goto = 6;
              return A._asyncAwait(t1[_i].accept$1($async$self), $async$visitStylesheet$1);
            case 6:
              // returning from await.
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$visitStylesheet$1, $async$completer);
    },
    visitAtRootRule$1(node) {
      return this.visitAtRootRule$body$_EvaluateVisitor0(node);
    },
    visitAtRootRule$body$_EvaluateVisitor0(node) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_Value_2),
        $async$returnValue, $async$self = this, t1, grandparent, root, innerCopy, t2, outerCopy, t3, copy, unparsedQuery, query, $parent, included, $async$temp1, $async$temp2;
      var $async$visitAtRootRule$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              unparsedQuery = node.query;
              $async$goto = unparsedQuery != null ? 3 : 5;
              break;
            case 3:
              // then
              $async$temp1 = unparsedQuery;
              $async$temp2 = A;
              $async$goto = 6;
              return A._asyncAwait($async$self._async_evaluate0$_performInterpolation$2$warnForColor(unparsedQuery, true), $async$visitAtRootRule$1);
            case 6:
              // returning from await.
              $async$result = $async$self._async_evaluate0$_adjustParseError$2($async$temp1, new $async$temp2._EvaluateVisitor_visitAtRootRule_closure8($async$self, $async$result));
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              $async$result = B.AtRootQuery_UsS0;
            case 4:
              // join
              query = $async$result;
              $parent = $async$self._async_evaluate0$_assertInModule$2($async$self._async_evaluate0$__parent, "__parent");
              included = A._setArrayType([], type$.JSArray_ModifiableCssParentNode_2);
              for (t1 = type$.CssStylesheet_2; !t1._is($parent); $parent = grandparent) {
                if (!query.excludes$1($parent))
                  included.push($parent);
                grandparent = $parent._node1$_parent;
                if (grandparent == null)
                  throw A.wrapException(A.StateError$(string$.CssNod));
              }
              root = $async$self._async_evaluate0$_trimIncluded$1(included);
              $async$goto = root === $async$self._async_evaluate0$_assertInModule$2($async$self._async_evaluate0$__parent, "__parent") ? 7 : 8;
              break;
            case 7:
              // then
              $async$goto = 9;
              return A._asyncAwait($async$self._async_evaluate0$_environment.scope$1$2$when(new A._EvaluateVisitor_visitAtRootRule_closure9($async$self, node), node.hasDeclarations, type$.Null), $async$visitAtRootRule$1);
            case 9:
              // returning from await.
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 8:
              // join
              if (included.length !== 0) {
                innerCopy = B.JSArray_methods.get$first(included).copyWithoutChildren$0();
                for (t1 = A.SubListIterable$(included, 1, null, type$.ModifiableCssParentNode_2), t1 = new A.ListIterator(t1, t1.get$length(t1)), t2 = A._instanceType(t1)._precomputed1, outerCopy = innerCopy; t1.moveNext$0(); outerCopy = copy) {
                  t3 = t1.__internal$_current;
                  copy = (t3 == null ? t2._as(t3) : t3).copyWithoutChildren$0();
                  copy.addChild$1(outerCopy);
                }
                root.addChild$1(outerCopy);
              } else
                innerCopy = root;
              $async$goto = 10;
              return A._asyncAwait($async$self._async_evaluate0$_scopeForAtRoot$4(node, innerCopy, query, included).call$1(new A._EvaluateVisitor_visitAtRootRule_closure10($async$self, node)), $async$visitAtRootRule$1);
            case 10:
              // returning from await.
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$visitAtRootRule$1, $async$completer);
    },
    _async_evaluate0$_trimIncluded$1(nodes) {
      var $parent, t1, innermostContiguous, i, t2, grandparent, root, _this = this, _null = null, _s5_ = "_root",
        _s22_ = " to be an ancestor of ";
      if (nodes.length === 0)
        return _this._async_evaluate0$_assertInModule$2(_this._async_evaluate0$__root, _s5_);
      $parent = _this._async_evaluate0$_assertInModule$2(_this._async_evaluate0$__parent, "__parent");
      for (t1 = nodes.length, innermostContiguous = _null, i = 0; i < t1; ++i, $parent = grandparent) {
        for (; t2 = nodes[i], $parent !== t2; innermostContiguous = _null, $parent = grandparent) {
          grandparent = $parent._node1$_parent;
          if (grandparent == null)
            throw A.wrapException(A.ArgumentError$("Expected " + t2.toString$0(0) + _s22_ + _this.toString$0(0) + ".", _null));
        }
        if (innermostContiguous == null)
          innermostContiguous = i;
        grandparent = $parent._node1$_parent;
        if (grandparent == null)
          throw A.wrapException(A.ArgumentError$("Expected " + t2.toString$0(0) + _s22_ + _this.toString$0(0) + ".", _null));
      }
      if ($parent !== _this._async_evaluate0$_assertInModule$2(_this._async_evaluate0$__root, _s5_))
        return _this._async_evaluate0$_assertInModule$2(_this._async_evaluate0$__root, _s5_);
      innermostContiguous.toString;
      root = nodes[innermostContiguous];
      B.JSArray_methods.removeRange$2(nodes, innermostContiguous, nodes.length);
      return root;
    },
    _async_evaluate0$_scopeForAtRoot$4(node, newParent, query, included) {
      var _this = this,
        scope = new A._EvaluateVisitor__scopeForAtRoot_closure17(_this, newParent, node),
        t1 = query._at_root_query0$_all || query._at_root_query0$_rule;
      if (t1 !== query.include)
        scope = new A._EvaluateVisitor__scopeForAtRoot_closure18(_this, scope);
      if (_this._async_evaluate0$_mediaQueries != null && query.excludesName$1("media"))
        scope = new A._EvaluateVisitor__scopeForAtRoot_closure19(_this, scope);
      if (_this._async_evaluate0$_inKeyframes && query.excludesName$1("keyframes"))
        scope = new A._EvaluateVisitor__scopeForAtRoot_closure20(_this, scope);
      return _this._async_evaluate0$_inUnknownAtRule && !B.JSArray_methods.any$1(included, new A._EvaluateVisitor__scopeForAtRoot_closure21()) ? new A._EvaluateVisitor__scopeForAtRoot_closure22(_this, scope) : scope;
    },
    visitContentBlock$1(node) {
      return A.throwExpression(A.UnsupportedError$(string$.Evalua));
    },
    visitContentRule$1(node) {
      return this.visitContentRule$body$_EvaluateVisitor0(node);
    },
    visitContentRule$body$_EvaluateVisitor0(node) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_Value_2),
        $async$returnValue, $async$self = this, $content;
      var $async$visitContentRule$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $content = $async$self._async_evaluate0$_environment._async_environment0$_content;
              if ($content == null) {
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = 3;
              return A._asyncAwait($async$self._async_evaluate0$_runUserDefinedCallable$1$4(node.$arguments, $content, node, new A._EvaluateVisitor_visitContentRule_closure2($async$self, $content), type$.Null), $async$visitContentRule$1);
            case 3:
              // returning from await.
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$visitContentRule$1, $async$completer);
    },
    visitDebugRule$1(node) {
      return this.visitDebugRule$body$_EvaluateVisitor0(node);
    },
    visitDebugRule$body$_EvaluateVisitor0(node) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_Value_2),
        $async$returnValue, $async$self = this, value, t1;
      var $async$visitDebugRule$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait(node.expression.accept$1($async$self), $async$visitDebugRule$1);
            case 3:
              // returning from await.
              value = $async$result;
              t1 = value instanceof A.SassString0 ? value._string0$_text : A.serializeValue0(value, true, true);
              $async$self._async_evaluate0$_logger.debug$2(0, t1, node.span);
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$visitDebugRule$1, $async$completer);
    },
    visitDeclaration$1(node) {
      return this.visitDeclaration$body$_EvaluateVisitor0(node);
    },
    visitDeclaration$body$_EvaluateVisitor0(node) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_Value_2),
        $async$returnValue, $async$self = this, t1, $name, t2, cssValue, t3, t4, children, oldDeclarationName;
      var $async$visitDeclaration$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (($async$self._async_evaluate0$_atRootExcludingStyleRule ? null : $async$self._async_evaluate0$_styleRuleIgnoringAtRoot) == null && !$async$self._async_evaluate0$_inUnknownAtRule && !$async$self._async_evaluate0$_inKeyframes)
                throw A.wrapException($async$self._async_evaluate0$_exception$2(string$.Declarm, node.span));
              t1 = node.name;
              $async$goto = 3;
              return A._asyncAwait($async$self._async_evaluate0$_interpolationToValue$2$warnForColor(t1, true), $async$visitDeclaration$1);
            case 3:
              // returning from await.
              $name = $async$result;
              t2 = $async$self._async_evaluate0$_declarationName;
              if (t2 != null)
                $name = new A.CssValue0(t2 + "-" + A.S($name.get$value($name)), $name.get$span($name), type$.CssValue_String_2);
              t2 = node.value;
              $async$goto = 4;
              return A._asyncAwait(A.NullableExtension_andThen0(t2, new A._EvaluateVisitor_visitDeclaration_closure5($async$self)), $async$visitDeclaration$1);
            case 4:
              // returning from await.
              cssValue = $async$result;
              t3 = cssValue != null;
              if (t3)
                t4 = !cssValue.get$value(cssValue).get$isBlank() || cssValue.get$value(cssValue).get$asList().length === 0;
              else
                t4 = false;
              if (t4) {
                t3 = $async$self._async_evaluate0$_assertInModule$2($async$self._async_evaluate0$__parent, "__parent");
                t1 = B.JSString_methods.startsWith$1(t1.get$initialPlain(), "--");
                if ($async$self._async_evaluate0$_sourceMap) {
                  t2 = A.NullableExtension_andThen0(t2, $async$self.get$_async_evaluate0$_expressionNode());
                  t2 = t2 == null ? null : J.get$span$z(t2);
                } else
                  t2 = null;
                t3.addChild$1(A.ModifiableCssDeclaration$0($name, cssValue, node.span, t1, t2));
              } else if (J.startsWith$1$s($name.get$value($name), "--") && t3)
                throw A.wrapException($async$self._async_evaluate0$_exception$2("Custom property values may not be empty.", cssValue.get$span(cssValue)));
              children = node.children;
              $async$goto = children != null ? 5 : 6;
              break;
            case 5:
              // then
              oldDeclarationName = $async$self._async_evaluate0$_declarationName;
              $async$self._async_evaluate0$_declarationName = $name.get$value($name);
              $async$goto = 7;
              return A._asyncAwait($async$self._async_evaluate0$_environment.scope$1$2$when(new A._EvaluateVisitor_visitDeclaration_closure6($async$self, children), node.hasDeclarations, type$.Null), $async$visitDeclaration$1);
            case 7:
              // returning from await.
              $async$self._async_evaluate0$_declarationName = oldDeclarationName;
            case 6:
              // join
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$visitDeclaration$1, $async$completer);
    },
    visitEachRule$1(node) {
      return this.visitEachRule$body$_EvaluateVisitor0(node);
    },
    visitEachRule$body$_EvaluateVisitor0(node) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_Value_2),
        $async$returnValue, $async$self = this, t1, list, nodeWithSpan, setVariables;
      var $async$visitEachRule$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = node.list;
              $async$goto = 3;
              return A._asyncAwait(t1.accept$1($async$self), $async$visitEachRule$1);
            case 3:
              // returning from await.
              list = $async$result;
              nodeWithSpan = $async$self._async_evaluate0$_expressionNode$1(t1);
              setVariables = node.variables.length === 1 ? new A._EvaluateVisitor_visitEachRule_closure8($async$self, node, nodeWithSpan) : new A._EvaluateVisitor_visitEachRule_closure9($async$self, node, nodeWithSpan);
              $async$returnValue = $async$self._async_evaluate0$_environment.scope$1$2$semiGlobal(new A._EvaluateVisitor_visitEachRule_closure10($async$self, list, setVariables, node), true, type$.nullable_Value_2);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$visitEachRule$1, $async$completer);
    },
    _async_evaluate0$_setMultipleVariables$3(variables, value, nodeWithSpan) {
      var i,
        list = value.get$asList(),
        t1 = variables.length,
        minLength = Math.min(t1, list.length);
      for (i = 0; i < minLength; ++i)
        this._async_evaluate0$_environment.setLocalVariable$3(variables[i], this._async_evaluate0$_withoutSlash$2(list[i], nodeWithSpan), nodeWithSpan);
      for (i = minLength; i < t1; ++i)
        this._async_evaluate0$_environment.setLocalVariable$3(variables[i], B.C__SassNull0, nodeWithSpan);
    },
    visitErrorRule$1(node) {
      return this.visitErrorRule$body$_EvaluateVisitor0(node);
    },
    visitErrorRule$body$_EvaluateVisitor0(node) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Value_2),
        $async$self = this, $async$temp1, $async$temp2;
      var $async$visitErrorRule$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$temp1 = A;
              $async$temp2 = J;
              $async$goto = 2;
              return A._asyncAwait(node.expression.accept$1($async$self), $async$visitErrorRule$1);
            case 2:
              // returning from await.
              throw $async$temp1.wrapException($async$self._async_evaluate0$_exception$2($async$temp2.toString$0$($async$result), node.span));
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$visitErrorRule$1, $async$completer);
    },
    visitExtendRule$1(node) {
      return this.visitExtendRule$body$_EvaluateVisitor0(node);
    },
    visitExtendRule$body$_EvaluateVisitor0(node) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_Value_2),
        $async$returnValue, $async$self = this, targetText, t1, t2, t3, _i, t4, styleRule;
      var $async$visitExtendRule$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              styleRule = $async$self._async_evaluate0$_atRootExcludingStyleRule ? null : $async$self._async_evaluate0$_styleRuleIgnoringAtRoot;
              if (styleRule == null || $async$self._async_evaluate0$_declarationName != null)
                throw A.wrapException($async$self._async_evaluate0$_exception$2(string$.x40exten, node.span));
              $async$goto = 3;
              return A._asyncAwait($async$self._async_evaluate0$_interpolationToValue$2$warnForColor(node.selector, true), $async$visitExtendRule$1);
            case 3:
              // returning from await.
              targetText = $async$result;
              for (t1 = $async$self._async_evaluate0$_adjustParseError$2(targetText, new A._EvaluateVisitor_visitExtendRule_closure2($async$self, targetText)).components, t2 = t1.length, t3 = type$.CompoundSelector_2, _i = 0; _i < t2; ++_i) {
                t4 = t1[_i].components;
                if (t4.length !== 1 || !(B.JSArray_methods.get$first(t4) instanceof A.CompoundSelector0))
                  throw A.wrapException(A.SassFormatException$0("complex selectors may not be extended.", targetText.get$span(targetText)));
                t4 = t3._as(B.JSArray_methods.get$first(t4)).components;
                if (t4.length !== 1)
                  throw A.wrapException(A.SassFormatException$0(string$.compou + B.JSArray_methods.join$1(t4, ", ") + string$.x60_inst, targetText.get$span(targetText)));
                $async$self._async_evaluate0$_assertInModule$2($async$self._async_evaluate0$__extensionStore, "_extensionStore").addExtension$4(styleRule.selector, B.JSArray_methods.get$first(t4), node, $async$self._async_evaluate0$_mediaQueries);
              }
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$visitExtendRule$1, $async$completer);
    },
    visitAtRule$1(node) {
      return this.visitAtRule$body$_EvaluateVisitor0(node);
    },
    visitAtRule$body$_EvaluateVisitor0(node) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_Value_2),
        $async$returnValue, $async$self = this, $name, value, children, wasInKeyframes, wasInUnknownAtRule;
      var $async$visitAtRule$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self._async_evaluate0$_declarationName != null)
                throw A.wrapException($async$self._async_evaluate0$_exception$2(string$.At_rul, node.span));
              $async$goto = 3;
              return A._asyncAwait($async$self._async_evaluate0$_interpolationToValue$1(node.name), $async$visitAtRule$1);
            case 3:
              // returning from await.
              $name = $async$result;
              $async$goto = 4;
              return A._asyncAwait(A.NullableExtension_andThen0(node.value, new A._EvaluateVisitor_visitAtRule_closure8($async$self)), $async$visitAtRule$1);
            case 4:
              // returning from await.
              value = $async$result;
              children = node.children;
              if (children == null) {
                $async$self._async_evaluate0$_assertInModule$2($async$self._async_evaluate0$__parent, "__parent").addChild$1(A.ModifiableCssAtRule$0($name, node.span, true, value));
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              wasInKeyframes = $async$self._async_evaluate0$_inKeyframes;
              wasInUnknownAtRule = $async$self._async_evaluate0$_inUnknownAtRule;
              if (A.unvendor0($name.get$value($name)) === "keyframes")
                $async$self._async_evaluate0$_inKeyframes = true;
              else
                $async$self._async_evaluate0$_inUnknownAtRule = true;
              $async$goto = 5;
              return A._asyncAwait($async$self._async_evaluate0$_withParent$2$4$scopeWhen$through(A.ModifiableCssAtRule$0($name, node.span, false, value), new A._EvaluateVisitor_visitAtRule_closure9($async$self, children), node.hasDeclarations, new A._EvaluateVisitor_visitAtRule_closure10(), type$.ModifiableCssAtRule_2, type$.Null), $async$visitAtRule$1);
            case 5:
              // returning from await.
              $async$self._async_evaluate0$_inUnknownAtRule = wasInUnknownAtRule;
              $async$self._async_evaluate0$_inKeyframes = wasInKeyframes;
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$visitAtRule$1, $async$completer);
    },
    visitForRule$1(node) {
      return this.visitForRule$body$_EvaluateVisitor0(node);
    },
    visitForRule$body$_EvaluateVisitor0(node) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_Value_2),
        $async$returnValue, $async$self = this, t1, t2, t3, fromNumber, t4, toNumber, from, to, direction;
      var $async$visitForRule$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = {};
              t2 = node.from;
              t3 = type$.SassNumber_2;
              $async$goto = 3;
              return A._asyncAwait($async$self._async_evaluate0$_addExceptionSpanAsync$1$2(t2, new A._EvaluateVisitor_visitForRule_closure14($async$self, node), t3), $async$visitForRule$1);
            case 3:
              // returning from await.
              fromNumber = $async$result;
              t4 = node.to;
              $async$goto = 4;
              return A._asyncAwait($async$self._async_evaluate0$_addExceptionSpanAsync$1$2(t4, new A._EvaluateVisitor_visitForRule_closure15($async$self, node), t3), $async$visitForRule$1);
            case 4:
              // returning from await.
              toNumber = $async$result;
              from = $async$self._async_evaluate0$_addExceptionSpan$2(t2, new A._EvaluateVisitor_visitForRule_closure16(fromNumber));
              to = t1.to = $async$self._async_evaluate0$_addExceptionSpan$2(t4, new A._EvaluateVisitor_visitForRule_closure17(toNumber, fromNumber));
              direction = from > to ? -1 : 1;
              if (from === (!node.isExclusive ? t1.to = to + direction : to)) {
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$returnValue = $async$self._async_evaluate0$_environment.scope$1$2$semiGlobal(new A._EvaluateVisitor_visitForRule_closure18(t1, $async$self, node, from, direction, fromNumber), true, type$.nullable_Value_2);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$visitForRule$1, $async$completer);
    },
    visitForwardRule$1(node) {
      return this.visitForwardRule$body$_EvaluateVisitor0(node);
    },
    visitForwardRule$body$_EvaluateVisitor0(node) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_Value_2),
        $async$returnValue, $async$self = this, newConfiguration, t4, _i, variable, $name, oldConfiguration, adjustedConfiguration, t1, t2, t3;
      var $async$visitForwardRule$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              oldConfiguration = $async$self._async_evaluate0$_configuration;
              adjustedConfiguration = oldConfiguration.throughForward$1(node);
              t1 = node.configuration;
              t2 = t1.length;
              t3 = node.url;
              $async$goto = t2 !== 0 ? 3 : 5;
              break;
            case 3:
              // then
              $async$goto = 6;
              return A._asyncAwait($async$self._async_evaluate0$_addForwardConfiguration$2(adjustedConfiguration, node), $async$visitForwardRule$1);
            case 6:
              // returning from await.
              newConfiguration = $async$result;
              $async$goto = 7;
              return A._asyncAwait($async$self._async_evaluate0$_loadModule$5$configuration(t3, "@forward", node, new A._EvaluateVisitor_visitForwardRule_closure5($async$self, node), newConfiguration), $async$visitForwardRule$1);
            case 7:
              // returning from await.
              t3 = type$.String;
              t4 = A.LinkedHashSet_LinkedHashSet$_empty(t3);
              for (_i = 0; _i < t2; ++_i) {
                variable = t1[_i];
                if (!variable.isGuarded)
                  t4.add$1(0, variable.name);
              }
              $async$self._async_evaluate0$_removeUsedConfiguration$3$except(adjustedConfiguration, newConfiguration, t4);
              t3 = A.LinkedHashSet_LinkedHashSet$_empty(t3);
              for (_i = 0; _i < t2; ++_i)
                t3.add$1(0, t1[_i].name);
              for (t1 = newConfiguration._configuration$_values, t2 = J.toList$0$ax(t1.get$keys(t1)), t4 = t2.length, _i = 0; _i < t2.length; t2.length === t4 || (0, A.throwConcurrentModificationError)(t2), ++_i) {
                $name = t2[_i];
                if (!t3.contains$1(0, $name))
                  if (!t1.get$isEmpty(t1))
                    t1.remove$1(0, $name);
              }
              $async$self._async_evaluate0$_assertConfigurationIsEmpty$1(newConfiguration);
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              $async$self._async_evaluate0$_configuration = adjustedConfiguration;
              $async$goto = 8;
              return A._asyncAwait($async$self._async_evaluate0$_loadModule$4(t3, "@forward", node, new A._EvaluateVisitor_visitForwardRule_closure6($async$self, node)), $async$visitForwardRule$1);
            case 8:
              // returning from await.
              $async$self._async_evaluate0$_configuration = oldConfiguration;
            case 4:
              // join
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$visitForwardRule$1, $async$completer);
    },
    _async_evaluate0$_addForwardConfiguration$2(configuration, node) {
      return this._addForwardConfiguration$body$_EvaluateVisitor0(configuration, node);
    },
    _addForwardConfiguration$body$_EvaluateVisitor0(configuration, node) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Configuration_2),
        $async$returnValue, $async$self = this, t2, t3, _i, variable, t4, t5, variableNodeWithSpan, t1, newValues, $async$temp1, $async$temp2, $async$temp3;
      var $async$_async_evaluate0$_addForwardConfiguration$2 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = configuration._configuration$_values;
              newValues = A.LinkedHashMap_LinkedHashMap$of(new A.UnmodifiableMapView(t1, type$.UnmodifiableMapView_String_ConfiguredValue_2), type$.String, type$.ConfiguredValue_2);
              t2 = node.configuration, t3 = t2.length, _i = 0;
            case 3:
              // for condition
              if (!(_i < t3)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              variable = t2[_i];
              if (variable.isGuarded) {
                t4 = variable.name;
                t5 = t1.get$isEmpty(t1) ? null : t1.remove$1(0, t4);
                if (t5 != null && !t5.value.$eq(0, B.C__SassNull0)) {
                  newValues.$indexSet(0, t4, t5);
                  // goto for update
                  $async$goto = 4;
                  break;
                }
              }
              t4 = variable.expression;
              variableNodeWithSpan = $async$self._async_evaluate0$_expressionNode$1(t4);
              $async$temp1 = newValues;
              $async$temp2 = variable.name;
              $async$temp3 = A;
              $async$goto = 6;
              return A._asyncAwait(t4.accept$1($async$self), $async$_async_evaluate0$_addForwardConfiguration$2);
            case 6:
              // returning from await.
              $async$temp1.$indexSet(0, $async$temp2, new $async$temp3.ConfiguredValue0($async$self._async_evaluate0$_withoutSlash$2($async$result, variableNodeWithSpan), variable.span, variableNodeWithSpan));
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              if (configuration instanceof A.ExplicitConfiguration0 || t1.get$isEmpty(t1)) {
                $async$returnValue = new A.ExplicitConfiguration0(node, newValues);
                // goto return
                $async$goto = 1;
                break;
              } else {
                $async$returnValue = new A.Configuration0(newValues);
                // goto return
                $async$goto = 1;
                break;
              }
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_async_evaluate0$_addForwardConfiguration$2, $async$completer);
    },
    _async_evaluate0$_removeUsedConfiguration$3$except(upstream, downstream, except) {
      var t1, t2, t3, t4, _i, $name;
      for (t1 = upstream._configuration$_values, t2 = J.toList$0$ax(t1.get$keys(t1)), t3 = t2.length, t4 = downstream._configuration$_values, _i = 0; _i < t2.length; t2.length === t3 || (0, A.throwConcurrentModificationError)(t2), ++_i) {
        $name = t2[_i];
        if (except.contains$1(0, $name))
          continue;
        if (!t4.containsKey$1($name))
          if (!t1.get$isEmpty(t1))
            t1.remove$1(0, $name);
      }
    },
    _async_evaluate0$_assertConfigurationIsEmpty$2$nameInError(configuration, nameInError) {
      var t1, entry;
      if (!(configuration instanceof A.ExplicitConfiguration0))
        return;
      t1 = configuration._configuration$_values;
      if (t1.get$isEmpty(t1))
        return;
      t1 = t1.get$entries(t1);
      entry = t1.get$first(t1);
      t1 = nameInError ? "$" + A.S(entry.key) + string$.x20was_n : string$.This_v;
      throw A.wrapException(this._async_evaluate0$_exception$2(t1, entry.value.configurationSpan));
    },
    _async_evaluate0$_assertConfigurationIsEmpty$1(configuration) {
      return this._async_evaluate0$_assertConfigurationIsEmpty$2$nameInError(configuration, false);
    },
    visitFunctionRule$1(node) {
      return this.visitFunctionRule$body$_EvaluateVisitor0(node);
    },
    visitFunctionRule$body$_EvaluateVisitor0(node) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_Value_2),
        $async$returnValue, $async$self = this, t1, t2, t3, t4, index, t5;
      var $async$visitFunctionRule$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._async_evaluate0$_environment;
              t2 = t1.closure$0();
              t3 = $async$self._async_evaluate0$_inDependency;
              t4 = t1._async_environment0$_functions;
              index = t4.length - 1;
              t5 = node.name;
              t1._async_environment0$_functionIndices.$indexSet(0, t5, index);
              J.$indexSet$ax(t4[index], t5, new A.UserDefinedCallable0(node, t2, t3, type$.UserDefinedCallable_AsyncEnvironment_2));
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$visitFunctionRule$1, $async$completer);
    },
    visitIfRule$1(node) {
      return this.visitIfRule$body$_EvaluateVisitor0(node);
    },
    visitIfRule$body$_EvaluateVisitor0(node) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_Value_2),
        $async$returnValue, $async$self = this, t1, t2, _i, clauseToCheck, _box_0;
      var $async$visitIfRule$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              _box_0 = {};
              _box_0.clause = node.lastClause;
              t1 = node.clauses, t2 = t1.length, _i = 0;
            case 3:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              clauseToCheck = t1[_i];
              $async$goto = 6;
              return A._asyncAwait(clauseToCheck.expression.accept$1($async$self), $async$visitIfRule$1);
            case 6:
              // returning from await.
              if ($async$result.get$isTruthy()) {
                _box_0.clause = clauseToCheck;
                // goto after for
                $async$goto = 5;
                break;
              }
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              t1 = _box_0.clause;
              if (t1 == null) {
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = 7;
              return A._asyncAwait($async$self._async_evaluate0$_environment.scope$1$3$semiGlobal$when(new A._EvaluateVisitor_visitIfRule_closure2(_box_0, $async$self), true, t1.hasDeclarations, type$.nullable_Value_2), $async$visitIfRule$1);
            case 7:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$visitIfRule$1, $async$completer);
    },
    visitImportRule$1(node) {
      return this.visitImportRule$body$_EvaluateVisitor0(node);
    },
    visitImportRule$body$_EvaluateVisitor0(node) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_Value_2),
        $async$returnValue, $async$self = this, t1, t2, t3, _i, $import;
      var $async$visitImportRule$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = node.imports, t2 = t1.length, t3 = type$.StaticImport_2, _i = 0;
            case 3:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $import = t1[_i];
              $async$goto = $import instanceof A.DynamicImport0 ? 6 : 8;
              break;
            case 6:
              // then
              $async$goto = 9;
              return A._asyncAwait($async$self._async_evaluate0$_visitDynamicImport$1($import), $async$visitImportRule$1);
            case 9:
              // returning from await.
              // goto join
              $async$goto = 7;
              break;
            case 8:
              // else
              $async$goto = 10;
              return A._asyncAwait($async$self._async_evaluate0$_visitStaticImport$1(t3._as($import)), $async$visitImportRule$1);
            case 10:
              // returning from await.
            case 7:
              // join
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$visitImportRule$1, $async$completer);
    },
    _async_evaluate0$_visitDynamicImport$1($import) {
      return this._async_evaluate0$_withStackFrame$1$3("@import", $import, new A._EvaluateVisitor__visitDynamicImport_closure2(this, $import), type$.void);
    },
    _async_evaluate0$_loadStylesheet$4$baseUrl$forImport(url, span, baseUrl, forImport) {
      return this._loadStylesheet$body$_EvaluateVisitor0(url, span, baseUrl, forImport);
    },
    _async_evaluate0$_loadStylesheet$3$baseUrl(url, span, baseUrl) {
      return this._async_evaluate0$_loadStylesheet$4$baseUrl$forImport(url, span, baseUrl, false);
    },
    _async_evaluate0$_loadStylesheet$3$forImport(url, span, forImport) {
      return this._async_evaluate0$_loadStylesheet$4$baseUrl$forImport(url, span, null, forImport);
    },
    _loadStylesheet$body$_EvaluateVisitor0(url, span, baseUrl, forImport) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$._LoadedStylesheet_2),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, importCache, tuple, isDependency, stylesheet, result, error, stackTrace, error0, stackTrace0, message, t1, t2, t3, t4, exception, message0, $async$exception;
      var $async$_async_evaluate0$_loadStylesheet$4$baseUrl$forImport = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              baseUrl = baseUrl;
              $async$handler = 4;
              $async$self._async_evaluate0$_importSpan = span;
              importCache = $async$self._async_evaluate0$_importCache;
              $async$goto = importCache != null ? 7 : 9;
              break;
            case 7:
              // then
              if (baseUrl == null)
                baseUrl = $async$self._async_evaluate0$_assertInModule$2($async$self._async_evaluate0$__stylesheet, "_stylesheet").span.file.url;
              $async$goto = 10;
              return A._asyncAwait(J.canonicalize$4$baseImporter$baseUrl$forImport$x(importCache, A.Uri_parse(url), $async$self._async_evaluate0$_importer, baseUrl, forImport), $async$_async_evaluate0$_loadStylesheet$4$baseUrl$forImport);
            case 10:
              // returning from await.
              tuple = $async$result;
              $async$goto = tuple != null ? 11 : 12;
              break;
            case 11:
              // then
              isDependency = $async$self._async_evaluate0$_inDependency || tuple.item1 !== $async$self._async_evaluate0$_importer;
              t1 = tuple.item1;
              t2 = tuple.item2;
              t3 = tuple.item3;
              t4 = $async$self._async_evaluate0$_quietDeps && isDependency;
              $async$goto = 13;
              return A._asyncAwait(importCache.importCanonical$4$originalUrl$quiet(t1, t2, t3, t4), $async$_async_evaluate0$_loadStylesheet$4$baseUrl$forImport);
            case 13:
              // returning from await.
              stylesheet = $async$result;
              if (stylesheet != null) {
                $async$self._async_evaluate0$_loadedUrls.add$1(0, tuple.item2);
                t1 = tuple.item1;
                $async$returnValue = new A._LoadedStylesheet2(stylesheet, t1, isDependency);
                $async$next = [1];
                // goto finally
                $async$goto = 5;
                break;
              }
            case 12:
              // join
              // goto join
              $async$goto = 8;
              break;
            case 9:
              // else
              t1 = baseUrl;
              $async$goto = 14;
              return A._asyncAwait($async$self._async_evaluate0$_importLikeNode$3(url, t1 == null ? $async$self._async_evaluate0$_assertInModule$2($async$self._async_evaluate0$__stylesheet, "_stylesheet").span.file.url : t1, forImport), $async$_async_evaluate0$_loadStylesheet$4$baseUrl$forImport);
            case 14:
              // returning from await.
              result = $async$result;
              if (result != null) {
                t1 = $async$self._async_evaluate0$_loadedUrls;
                A.NullableExtension_andThen0(result.stylesheet.span.file.url, t1.get$add(t1));
                $async$returnValue = result;
                $async$next = [1];
                // goto finally
                $async$goto = 5;
                break;
              }
            case 8:
              // join
              if (B.JSString_methods.startsWith$1(url, "package:") && true)
                throw A.wrapException(string$.x22packa);
              else
                throw A.wrapException("Can't find stylesheet to import.");
              $async$next.push(6);
              // goto finally
              $async$goto = 5;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              t1 = A.unwrapException($async$exception);
              if (t1 instanceof A.SassException0) {
                error = t1;
                stackTrace = A.getTraceFromException($async$exception);
                t1 = error;
                t2 = J.getInterceptor$z(t1);
                A.throwWithTrace0($async$self._async_evaluate0$_exception$2(error._span_exception$_message, A.SourceSpanException.prototype.get$span.call(t2, t1)), stackTrace);
              } else {
                error0 = t1;
                stackTrace0 = A.getTraceFromException($async$exception);
                message = null;
                try {
                  message = A._asString(J.get$message$x(error0));
                } catch (exception) {
                  message0 = J.toString$0$(error0);
                  message = message0;
                }
                A.throwWithTrace0($async$self._async_evaluate0$_exception$1(message), stackTrace0);
              }
            