contents += A.Primitives_stringFromCharCode(32);
            t3._contents = t5 + A.Primitives_stringFromCharCode(next);
            if (t1.scanChar$1(61))
              t3._contents += A.Primitives_stringFromCharCode(61);
            t3._contents += A.Primitives_stringFromCharCode(32);
            _this.whitespace$0();
            t5 = _this._expressionUntilComparison$0();
            buffer._flushText$0();
            t4.push(t5);
          }
        }
      }
      t1.expectChar$1(41);
      _this.whitespace$0();
      t3._contents += A.Primitives_stringFromCharCode(41);
      return buffer.interpolation$1(t1.spanFrom$1(new A._SpanScannerState(t1, t2)));
    },
    _expressionUntilComparison$0() {
      return this._expression$1$until(new A.StylesheetParser__expressionUntilComparison_closure(this));
    },
    _supportsCondition$0() {
      var condition, operator, right, endPosition, t3, t4, lowerOperator, _this = this,
        t1 = _this.scanner,
        t2 = t1._string_scanner$_position;
      if (_this.scanIdentifier$1("not")) {
        _this.whitespace$0();
        return new A.SupportsNegation(_this._supportsConditionInParens$0(), t1.spanFrom$1(new A._SpanScannerState(t1, t2)));
      }
      condition = _this._supportsConditionInParens$0();
      _this.whitespace$0();
      for (operator = null; _this.lookingAtIdentifier$0();) {
        if (operator != null)
          _this.expectIdentifier$1(operator);
        else if (_this.scanIdentifier$1("or"))
          operator = "or";
        else {
          _this.expectIdentifier$1("and");
          operator = "and";
        }
        _this.whitespace$0();
        right = _this._supportsConditionInParens$0();
        endPosition = t1._string_scanner$_position;
        t3 = t1._sourceFile;
        t4 = new A._FileSpan(t3, t2, endPosition);
        t4._FileSpan$3(t3, t2, endPosition);
        condition = new A.SupportsOperation(condition, right, operator, t4);
        lowerOperator = operator.toLowerCase();
        if (lowerOperator !== "and" && lowerOperator !== "or")
          A.throwExpression(A.ArgumentError$value(operator, "operator", 'may only be "and" or "or".'));
        _this.whitespace$0();
      }
      return condition;
    },
    _supportsConditionInParens$0() {
      var $name, nameStart, wasInParentheses, identifier, operation, contents, identifier0, t2, $arguments, condition, exception, declaration, _this = this,
        t1 = _this.scanner,
        start = new A._SpanScannerState(t1, t1._string_scanner$_position);
      if (_this._lookingAtInterpolatedIdentifier$0()) {
        identifier0 = _this.interpolatedIdentifier$0();
        t2 = identifier0.get$asPlain();
        if ((t2 == null ? null : t2.toLowerCase()) === "not")
          _this.error$2(0, '"not" is not a valid identifier here.', identifier0.span);
        if (t1.scanChar$1(40)) {
          $arguments = _this._interpolatedDeclarationValue$2$allowEmpty$allowSemicolon(true, true);
          t1.expectChar$1(41);
          return new A.SupportsFunction(identifier0, $arguments, t1.spanFrom$1(start));
        } else {
          t2 = identifier0.contents;
          if (t2.length !== 1 || !type$.Expression._is(B.JSArray_methods.get$first(t2)))
            _this.error$2(0, "Expected @supports condition.", identifier0.span);
          else
            return new A.SupportsInterpolation(type$.Expression._as(B.JSArray_methods.get$first(t2)), t1.spanFrom$1(start));
        }
      }
      t1.expectChar$1(40);
      _this.whitespace$0();
      if (_this.scanIdentifier$1("not")) {
        _this.whitespace$0();
        condition = _this._supportsConditionInParens$0();
        t1.expectChar$1(41);
        return new A.SupportsNegation(condition, t1.spanFrom$1(start));
      } else if (t1.peekChar$0() === 40) {
        condition = _this._supportsCondition$0();
        t1.expectChar$1(41);
        return condition;
      }
      $name = null;
      nameStart = new A._SpanScannerState(t1, t1._string_scanner$_position);
      wasInParentheses = _this._inParentheses;
      try {
        $name = _this._expression$0();
        t1.expectChar$1(58);
      } catch (exception) {
        if (type$.FormatException._is(A.unwrapException(exception))) {
          t1.set$state(nameStart);
          _this._inParentheses = wasInParentheses;
          identifier = _this.interpolatedIdentifier$0();
          operation = _this._trySupportsOperation$2(identifier, nameStart);
          if (operation != null) {
            t1.expectChar$1(41);
            return operation;
          }
          t2 = new A.InterpolationBuffer(new A.StringBuffer(""), A._setArrayType([], type$.JSArray_Object));
          t2.addInterpolation$1(identifier);
          t2.addInterpolation$1(_this._interpolatedDeclarationValue$3$allowColon$allowEmpty$allowSemicolon(false, true, true));
          contents = t2.interpolation$1(t1.spanFrom$1(nameStart));
          if (t1.peekChar$0() === 58)
            throw exception;
          t1.expectChar$1(41);
          return new A.SupportsAnything(contents, t1.spanFrom$1(start));
        } else
          throw exception;
      }
      declaration = _this._supportsDeclarationValue$2($name, start);
      t1.expectChar$1(41);
      return declaration;
    },
    _supportsDeclarationValue$2($name, start) {
      var value, _this = this;
      if ($name instanceof A.StringExpression && !$name.hasQuotes && B.JSString_methods.startsWith$1($name.text.get$initialPlain(), "--"))
        value = new A.StringExpression(_this._interpolatedDeclarationValue$0(), false);
      else {
        _this.whitespace$0();
        value = _this._expression$0();
      }
      return new A.SupportsDeclaration($name, value, _this.scanner.spanFrom$1(start));
    },
    _trySupportsOperation$2(interpolation, start) {
      var expression, beforeWhitespace, t2, t3, operator, operation, right, t4, endPosition, t5, t6, lowerOperator, _this = this, _null = null,
        t1 = interpolation.contents;
      if (t1.length !== 1)
        return _null;
      expression = B.JSArray_methods.get$first(t1);
      if (!type$.Expression._is(expression))
        return _null;
      t1 = _this.scanner;
      beforeWhitespace = new A._SpanScannerState(t1, t1._string_scanner$_position);
      _this.whitespace$0();
      for (t2 = start.position, t3 = interpolation.span, operator = _null, operation = operator; _this.lookingAtIdentifier$0();) {
        if (operator != null)
          _this.expectIdentifier$1(operator);
        else if (_this.scanIdentifier$1("and"))
          operator = "and";
        else {
          if (!_this.scanIdentifier$1("or")) {
            if (beforeWhitespace._scanner !== t1)
              A.throwExpression(A.ArgumentError$(string$.The_gi, _null));
            t2 = beforeWhitespace.position;
            if ((t2 === 0 ? 1 / t2 < 0 : t2 < 0) || t2 > t1.string.length)
              A.throwExpression(A.ArgumentError$("Invalid position " + t2, _null));
            t1._string_scanner$_position = t2;
            return t1._lastMatch = null;
          }
          operator = "or";
        }
        _this.whitespace$0();
        right = _this._supportsConditionInParens$0();
        t4 = operation == null ? new A.SupportsInterpolation(expression, t3) : operation;
        endPosition = t1._string_scanner$_position;
        t5 = t1._sourceFile;
        t6 = new A._FileSpan(t5, t2, endPosition);
        t6._FileSpan$3(t5, t2, endPosition);
        operation = new A.SupportsOperation(t4, right, operator, t6);
        lowerOperator = operator.toLowerCase();
        if (lowerOperator !== "and" && lowerOperator !== "or")
          A.throwExpression(A.ArgumentError$value(operator, "operator", 'may only be "and" or "or".'));
        _this.whitespace$0();
      }
      return operation;
    },
    _lookingAtInterpolatedIdentifier$0() {
      var second,
        t1 = this.scanner,
        first = t1.peekChar$0();
      if (first == null)
        return false;
      if (first === 95 || A.isAlphabetic0(first) || first >= 128 || first === 92)
        return true;
      if (first === 35)
        return t1.peekChar$1(1) === 123;
      if (first !== 45)
        return false;
      second = t1.peekChar$1(1);
      if (second == null)
        return false;
      if (second === 35)
        return t1.peekChar$1(2) === 123;
      return second === 95 || A.isAlphabetic0(second) || second >= 128 || second === 92 || second === 45;
    },
    _lookingAtInterpolatedIdentifierBody$0() {
      var t1 = this.scanner,
        first = t1.peekChar$0();
      if (first == null)
        return false;
      if (first === 95 || A.isAlphabetic0(first) || first >= 128 || A.isDigit(first) || first === 45 || first === 92)
        return true;
      return first === 35 && t1.peekChar$1(1) === 123;
    },
    _lookingAtExpression$0() {
      var next,
        t1 = this.scanner,
        character = t1.peekChar$0();
      if (character == null)
        return false;
      if (character === 46)
        return t1.peekChar$1(1) !== 46;
      if (character === 33) {
        next = t1.peekChar$1(1);
        if (next != null)
          if ((next | 32) >>> 0 !== 105)
            t1 = next === 32 || next === 9 || next === 10 || next === 13 || next === 12;
          else
            t1 = true;
        else
          t1 = true;
        return t1;
      }
      if (character !== 40)
        if (character !== 47)
          if (character !== 91)
            if (character !== 39)
              if (character !== 34)
                if (character !== 35)
                  if (character !== 43)
                    if (character !== 45)
                      if (character !== 92)
                        if (character !== 36)
                          if (character !== 38)
                            t1 = character === 95 || A.isAlphabetic0(character) || character >= 128 || A.isDigit(character);
                          else
                            t1 = true;
                        else
                          t1 = true;
                      else
                        t1 = true;
                    else
                      t1 = true;
                  else
                    t1 = true;
                else
                  t1 = true;
              else
                t1 = true;
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    _withChildren$1$3(child, start, create) {
      var result = create.call$2(this.children$1(0, child), this.scanner.spanFrom$1(start));
      this.whitespaceWithoutComments$0();
      return result;
    },
    _withChildren$3(child, start, create) {
      return this._withChildren$1$3(child, start, create, type$.dynamic);
    },
    _urlString$0() {
      var innerError, stackTrace, t2, exception,
        t1 = this.scanner,
        start = new A._SpanScannerState(t1, t1._string_scanner$_position),
        url = this.string$0();
      try {
        t2 = A.Uri_parse(url);
        return t2;
      } catch (exception) {
        t2 = A.unwrapException(exception);
        if (type$.FormatException._is(t2)) {
          innerError = t2;
          stackTrace = A.getTraceFromException(exception);
          this.error$3(0, "Invalid URL: " + J.get$message$x(innerError), t1.spanFrom$1(start), stackTrace);
        } else
          throw exception;
      }
    },
    _publicIdentifier$0() {
      var _this = this,
        t1 = _this.scanner,
        t2 = t1._string_scanner$_position,
        result = _this.identifier$1$normalize(true);
      _this._assertPublic$2(result, new A.StylesheetParser__publicIdentifier_closure(_this, new A._SpanScannerState(t1, t2)));
      return result;
    },
    _assertPublic$2(identifier, span) {
      var first = B.JSString_methods._codeUnitAt$1(identifier, 0);
      if (!(first === 45 || first === 95))
        return;
      this.error$2(0, string$.Privat, span.call$0());
    },
    get$plainCss() {
      return false;
    }
  };
  A.StylesheetParser_parse_closure.prototype = {
    call$0() {
      var statements, t4,
        t1 = this.$this,
        t2 = t1.scanner,
        t3 = t2._string_scanner$_position;
      t2.scanChar$1(65279);
      statements = t1.statements$1(new A.StylesheetParser_parse__closure(t1));
      t2.expectDone$0();
      t4 = t1._globalVariables;
      t4 = t4.get$values(t4);
      B.JSArray_methods.addAll$1(statements, A.MappedIterable_MappedIterable(t4, new A.StylesheetParser_parse__closure0(), A._instanceType(t4)._eval$1("Iterable.E"), type$.Statement));
      return A.Stylesheet$internal(statements, t2.spanFrom$1(new A._SpanScannerState(t2, t3)), t1.get$plainCss());
    },
    $signature: 345
  };
  A.StylesheetParser_parse__closure.prototype = {
    call$0() {
      var t1 = this.$this;
      if (t1.scanner.scan$1("@charset")) {
        t1.whitespace$0();
        t1.string$0();
        return null;
      }
      return t1._statement$1$root(true);
    },
    $signature: 346
  };
  A.StylesheetParser_parse__closure0.prototype = {
    call$1(declaration) {
      var t1 = declaration.name,
        t2 = declaration.expression;
      return A.VariableDeclaration$(t1, new A.NullExpression(t2.get$span(t2)), declaration.span, null, false, true, null);
    },
    $signature: 347
  };
  A.StylesheetParser_parseArgumentDeclaration_closure.prototype = {
    call$0() {
      var $arguments,
        t1 = this.$this,
        t2 = t1.scanner;
      t2.expectChar$2$name(64, "@-rule");
      t1.identifier$0();
      t1.whitespace$0();
      t1.identifier$0();
      $arguments = t1._argumentDeclaration$0();
      t1.whitespace$0();
      t2.expectChar$1(123);
      return $arguments;
    },
    $signature: 348
  };
  A.StylesheetParser_parseVariableDeclaration_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      return t1.lookingAtIdentifier$0() ? t1._variableDeclarationWithNamespace$0() : t1.variableDeclarationWithoutNamespace$0();
    },
    $signature: 174
  };
  A.StylesheetParser_parseUseRule_closure.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1.scanner,
        t3 = t2._string_scanner$_position;
      t2.expectChar$2$name(64, "@-rule");
      t1.expectIdentifier$1("use");
      t1.whitespace$0();
      return t1._useRule$1(new A._SpanScannerState(t2, t3));
    },
    $signature: 350
  };
  A.StylesheetParser__parseSingleProduction_closure.prototype = {
    call$0() {
      var result = this.production.call$0();
      this.$this.scanner.expectDone$0();
      return result;
    },
    $signature() {
      return this.T._eval$1("0()");
    }
  };
  A.StylesheetParser__statement_closure.prototype = {
    call$0() {
      return this.$this._statement$0();
    },
    $signature: 100
  };
  A.StylesheetParser_variableDeclarationWithoutNamespace_closure.prototype = {
    call$0() {
      return this.$this.scanner.spanFrom$1(this.start);
    },
    $signature: 30
  };
  A.StylesheetParser_variableDeclarationWithoutNamespace_closure0.prototype = {
    call$0() {
      return this.declaration;
    },
    $signature: 174
  };
  A.StylesheetParser__declarationOrBuffer_closure.prototype = {
    call$2(children, span) {
      return A.Declaration$nested(this.name, children, span, null);
    },
    $signature: 98
  };
  A.StylesheetParser__declarationOrBuffer_closure0.prototype = {
    call$2(children, span) {
      return A.Declaration$nested(this.name, children, span, this._box_0.value);
    },
    $signature: 98
  };
  A.StylesheetParser__styleRule_closure.prototype = {
    call$2(children, span) {
      var _this = this,
        t1 = _this.$this;
      if (t1.get$indented() && children.length === 0)
        t1.logger.warn$2$span(0, string$.This_s, _this._box_0.interpolation.span);
      t1._inStyleRule = _this.wasInStyleRule;
      return A.StyleRule$(_this._box_0.interpolation, children, t1.scanner.spanFrom$1(_this.start));
    },
    $signature: 357
  };
  A.StylesheetParser__propertyOrVariableDeclaration_closure.prototype = {
    call$2(children, span) {
      return A.Declaration$nested(this._box_0.name, children, span, null);
    },
    $signature: 98
  };
  A.StylesheetParser__propertyOrVariableDeclaration_closure0.prototype = {
    call$2(children, span) {
      return A.Declaration$nested(this._box_0.name, children, span, this.value);
    },
    $signature: 98
  };
  A.StylesheetParser__atRootRule_closure.prototype = {
    call$2(children, span) {
      return A.AtRootRule$(children, span, this.query);
    },
    $signature: 173
  };
  A.StylesheetParser__atRootRule_closure0.prototype = {
    call$2(children, span) {
      return A.AtRootRule$(children, span, null);
    },
    $signature: 173
  };
  A.StylesheetParser__eachRule_closure.prototype = {
    call$2(children, span) {
      var _this = this;
      _this.$this._inControlDirective = _this.wasInControlDirective;
      return A.EachRule$(_this.variables, _this.list, children, span);
    },
    $signature: 360
  };
  A.StylesheetParser__functionRule_closure.prototype = {
    call$2(children, span) {
      return A.FunctionRule$(this.name, this.$arguments, children, span, this.precedingComment);
    },
    $signature: 361
  };
  A.StylesheetParser__forRule_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      if (!t1.lookingAtIdentifier$0())
        return false;
      if (t1.scanIdentifier$1("to"))
        return this._box_0.exclusive = true;
      else if (t1.scanIdentifier$1("through")) {
        this._box_0.exclusive = false;
        return true;
      } else
        return false;
    },
    $signature: 26
  };
  A.StylesheetParser__forRule_closure0.prototype = {
    call$2(children, span) {
      var t1, _this = this;
      _this.$this._inControlDirective = _this.wasInControlDirective;
      t1 = _this._box_0.exclusive;
      t1.toString;
      return A.ForRule$(_this.variable, _this.from, _this.to, children, span, t1);
    },
    $signature: 362
  };
  A.StylesheetParser__memberList_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      if (t1.scanner.peekChar$0() === 36)
        this.variables.add$1(0, t1.variableName$0());
      else
        this.identifiers.add$1(0, t1.identifier$1$normalize(true));
    },
    $signature: 1
  };
  A.StylesheetParser__includeRule_closure.prototype = {
    call$2(children, span) {
      return A.ContentBlock$(this.contentArguments_, children, span);
    },
    $signature: 363
  };
  A.StylesheetParser_mediaRule_closure.prototype = {
    call$2(children, span) {
      return A.MediaRule$(this.query, children, span);
    },
    $signature: 259
  };
  A.StylesheetParser__mixinRule_closure.prototype = {
    call$2(children, span) {
      var _this = this;
      _this.$this._stylesheet$_inMixin = false;
      return A.MixinRule$(_this.name, _this.$arguments, children, span, _this.precedingComment);
    },
    $signature: 367
  };
  A.StylesheetParser_mozDocumentRule_closure.prototype = {
    call$2(children, span) {
      var _this = this;
      if (_this._box_0.needsDeprecationWarning)
        _this.$this.logger.warn$3$deprecation$span(0, string$.x40_moz_, true, span);
      return A.AtRule$(_this.name, span, children, _this.value);
    },
    $signature: 171
  };
  A.StylesheetParser_supportsRule_closure.prototype = {
    call$2(children, span) {
      return A.SupportsRule$(this.condition, children, span);
    },
    $signature: 372
  };
  A.StylesheetParser__whileRule_closure.prototype = {
    call$2(children, span) {
      this.$this._inControlDirective = this.wasInControlDirective;
      return A.WhileRule$(this.condition, children, span);
    },
    $signature: 373
  };
  A.StylesheetParser_unknownAtRule_closure.prototype = {
    call$2(children, span) {
      return A.AtRule$(this.name, span, children, this._box_0.value);
    },
    $signature: 171
  };
  A.StylesheetParser__expression_resetState.prototype = {
    call$0() {
      var t2,
        t1 = this._box_0;
      t1.operands_ = t1.operators_ = t1.spaceExpressions_ = t1.commaExpressions_ = null;
      t2 = this.$this;
      t2.scanner.set$state(this.start);
      t1.allowSlash = true;
      t1.singleExpression_ = t2._singleExpression$0();
    },
    $signature: 0
  };
  A.StylesheetParser__expression_resolveOneOperation.prototype = {
    call$0() {
      var t2, t3,
        t1 = this._box_0,
        operator = t1.operators_.pop(),
        left = t1.operands_.pop(),
        right = t1.singleExpression_;
      if (right == null) {
        t2 = this.$this.scanner;
        t3 = operator.operator.length;
        t2.error$3$length$position(0, "Expected expression.", t3, t2._string_scanner$_position - t3);
      }
      if (t1.allowSlash) {
        t2 = this.$this;
        t2 = !t2._inParentheses && operator === B.BinaryOperator_RTB && t2._isSlashOperand$1(left) && t2._isSlashOperand$1(right);
      } else
        t2 = false;
      if (t2)
        t1.singleExpression_ = new A.BinaryOperationExpression(B.BinaryOperator_RTB, left, right, true);
      else {
        t1.singleExpression_ = new A.BinaryOperationExpression(operator, left, right, false);
        t1.allowSlash = false;
      }
    },
    $signature: 0
  };
  A.StylesheetParser__expression_resolveOperations.prototype = {
    call$0() {
      var t1,
        operators = this._box_0.operators_;
      if (operators == null)
        return;
      for (t1 = this.resolveOneOperation; operators.length !== 0;)
        t1.call$0();
    },
    $signature: 0
  };
  A.StylesheetParser__expression_addSingleExpression.prototype = {
    call$1(expression) {
      var t2, spaceExpressions, _this = this,
        t1 = _this._box_0;
      if (t1.singleExpression_ != null) {
        t2 = _this.$this;
        if (t2._inParentheses) {
          t2._inParentheses = false;
          if (t1.allowSlash) {
            _this.resetState.call$0();
            return;
          }
        }
        spaceExpressions = t1.spaceExpressions_;
        if (spaceExpressions == null)
          spaceExpressions = t1.spaceExpressions_ = A._setArrayType([], type$.JSArray_Expression);
        _this.resolveOperations.call$0();
        t2 = t1.singleExpression_;
        t2.toString;
        spaceExpressions.push(t2);
        t1.allowSlash = true;
      }
      t1.singleExpression_ = expression;
    },
    $signature: 374
  };
  A.StylesheetParser__expression_addOperator.prototype = {
    call$1(operator) {
      var t2, t3, operators, operands, t4, singleExpression,
        t1 = this.$this;
      if (t1.get$plainCss() && operator !== B.BinaryOperator_RTB && operator !== B.BinaryOperator_kjl) {
        t2 = t1.scanner;
        t3 = operator.operator.length;
        t2.error$3$length$position(0, "Operators aren't allowed in plain CSS.", t3, t2._string_scanner$_position - t3);
      }
      t2 = this._box_0;
      t2.allowSlash = t2.allowSlash && operator === B.BinaryOperator_RTB;
      operators = t2.operators_;
      if (operators == null)
        operators = t2.operators_ = A._setArrayType([], type$.JSArray_BinaryOperator);
      operands = t2.operands_;
      if (operands == null)
        operands = t2.operands_ = A._setArrayType([], type$.JSArray_Expression);
      t3 = this.resolveOneOperation;
      t4 = operator.precedence;
      while (true) {
        if (!(operators.length !== 0 && B.JSArray_methods.get$last(operators).precedence >= t4))
          break;
        t3.call$0();
      }
      operators.push(operator);
      singleExpression = t2.singleExpression_;
      if (singleExpression == null) {
        t3 = t1.scanner;
        t4 = operator.operator.length;
        t3.error$3$length$position(0, "Expected expression.", t4, t3._string_scanner$_position - t4);
      }
      operands.push(singleExpression);
      t1.whitespace$0();
      t2.singleExpression_ = t1._singleExpression$0();
    },
    $signature: 375
  };
  A.StylesheetParser__expression_resolveSpaceExpressions.prototype = {
    call$0() {
      var t1, spaceExpressions, singleExpression, t2;
      this.resolveOperations.call$0();
      t1 = this._box_0;
      spaceExpressions = t1.spaceExpressions_;
      if (spaceExpressions != null) {
        singleExpression = t1.singleExpression_;
        if (singleExpression == null)
          this.$this.scanner.error$1(0, "Expected expression.");
        spaceExpressions.push(singleExpression);
        t2 = B.JSArray_methods.get$first(spaceExpressions);
        t2 = t2.get$span(t2).expand$1(0, singleExpression.get$span(singleExpression));
        t1.singleExpression_ = new A.ListExpression(A.List_List$unmodifiable(spaceExpressions, type$.Expression), B.ListSeparator_woc, false, t2);
        t1.spaceExpressions_ = null;
      }
    },
    $signature: 0
  };
  A.StylesheetParser_expressionUntilComma_closure.prototype = {
    call$0() {
      return this.$this.scanner.peekChar$0() === 44;
    },
    $signature: 26
  };
  A.StylesheetParser__unicodeRange_closure.prototype = {
    call$1(char) {
      return char != null && A.isHex(char);
    },
    $signature: 31
  };
  A.StylesheetParser__unicodeRange_closure0.prototype = {
    call$1(char) {
      return char != null && A.isHex(char);
    },
    $signature: 31
  };
  A.StylesheetParser_namespacedExpression_closure.prototype = {
    call$0() {
      return this.$this.scanner.spanFrom$1(this.start);
    },
    $signature: 30
  };
  A.StylesheetParser_trySpecialFunction_closure.prototype = {
    call$1(contents) {
      return new A.StringExpression(contents, false);
    },
    $signature: 379
  };
  A.StylesheetParser__expressionUntilComparison_closure.prototype = {
    call$0() {
      var t1 = this.$this.scanner,
        next = t1.peekChar$0();
      if (next === 61)
        return t1.peekChar$1(1) !== 61;
      return next === 60 || next === 62;
    },
    $signature: 26
  };
  A.StylesheetParser__publicIdentifier_closure.prototype = {
    call$0() {
      return this.$this.scanner.spanFrom$1(this.start);
    },
    $signature: 30
  };
  A.StylesheetGraph.prototype = {
    modifiedSince$3(url, since, baseImporter) {
      var node = this._stylesheet_graph$_add$3(url, baseImporter, null);
      if (node == null)
        return true;
      return new A.StylesheetGraph_modifiedSince_transitiveModificationTime(this).call$1(node)._core$_value > since._core$_value;
    },
    _stylesheet_graph$_add$3(url, baseImporter, baseUrl) {
      var t1, t2, _this = this,
        tuple = _this._ignoreErrors$1(new A.StylesheetGraph__add_closure(_this, url, baseImporter, baseUrl));
      if (tuple == null)
        return null;
      t1 = tuple.item1;
      t2 = tuple.item2;
      _this.addCanonical$3(t1, t2, tuple.item3);
      return _this._nodes.$index(0, t2);
    },
    addCanonical$4$recanonicalize(importer, canonicalUrl, originalUrl, recanonicalize) {
      var stylesheet, _this = this,
        t1 = _this._nodes;
      if (t1.$index(0, canonicalUrl) != null)
        return B.Set_empty1;
      stylesheet = _this._ignoreErrors$1(new A.StylesheetGraph_addCanonical_closure(_this, importer, canonicalUrl, originalUrl));
      if (stylesheet == null)
        return B.Set_empty1;
      t1.$indexSet(0, canonicalUrl, A.StylesheetNode$_(stylesheet, importer, canonicalUrl, _this._upstreamNodes$3(stylesheet, importer, canonicalUrl)));
      return recanonicalize ? _this._recanonicalizeImports$2(importer, canonicalUrl) : B.Set_empty1;
    },
    addCanonical$3(importer, canonicalUrl, originalUrl) {
      return this.addCanonical$4$recanonicalize(importer, canonicalUrl, originalUrl, true);
    },
    _upstreamNodes$3(stylesheet, baseImporter, baseUrl) {
      var t4, t5, t6, t7,
        t1 = type$.Uri,
        active = A.LinkedHashSet_LinkedHashSet$_literal([baseUrl], t1),
        t2 = type$.JSArray_Uri,
        t3 = A._setArrayType([], t2);
      t2 = A._setArrayType([], t2);
      new A._FindDependenciesVisitor(t3, t2).visitChildren$1(stylesheet.children);
      t4 = type$.nullable_StylesheetNode;
      t5 = A.LinkedHashMap_LinkedHashMap$_empty(t1, t4);
      for (t6 = B.JSArray_methods.get$iterator(t3); t6.moveNext$0();) {
        t7 = t6.get$current(t6);
        t5.$indexSet(0, t7, this._nodeFor$4(t7, baseImporter, baseUrl, active));
      }
      t1 = A.LinkedHashMap_LinkedHashMap$_empty(t1, t4);
      for (t2 = J.get$iterator$ax(new A.Tuple2(t3, t2, type$.Tuple2_of_List_Uri_and_List_Uri).item2); t2.moveNext$0();) {
        t3 = t2.get$current(t2);
        t1.$indexSet(0, t3, this._nodeFor$5$forImport(t3, baseImporter, baseUrl, active, true));
      }
      return new A.Tuple2(t5, t1, type$.Tuple2_of_Map_of_Uri_and_nullable_StylesheetNode_and_Map_of_Uri_and_nullable_StylesheetNode);
    },
    reload$1(canonicalUrl) {
      var stylesheet, upstream, _this = this,
        node = _this._nodes.$index(0, canonicalUrl);
      if (node == null)
        throw A.wrapException(A.StateError$(canonicalUrl.toString$0(0) + " is not in the dependency graph."));
      _this._transitiveModificationTimes.clear$0(0);
      _this.importCache.clearImport$1(canonicalUrl);
      stylesheet = _this._ignoreErrors$1(new A.StylesheetGraph_reload_closure(_this, node, canonicalUrl));
      if (stylesheet == null)
        return false;
      node._stylesheet = stylesheet;
      upstream = _this._upstreamNodes$3(stylesheet, node.importer, canonicalUrl);
      node._replaceUpstream$2(upstream.item1, upstream.item2);
      return true;
    },
    _recanonicalizeImports$2(importer, canonicalUrl) {
      var t1, t2, t3, t4, t5, newUpstream, newUpstreamImports, _this = this,
        changed = A.LinkedHashSet_LinkedHashSet$_empty(type$.StylesheetNode);
      for (t1 = _this._nodes, t1 = t1.get$values(t1), t1 = t1.get$iterator(t1), t2 = type$.UnmodifiableMapView_of_Uri_and_nullable_StylesheetNode, t3 = type$.Uri, t4 = type$.nullable_StylesheetNode; t1.moveNext$0();) {
        t5 = t1.get$current(t1);
        newUpstream = _this._recanonicalizeImportsForNode$4$forImport(t5, importer, canonicalUrl, false);
        newUpstreamImports = _this._recanonicalizeImportsForNode$4$forImport(t5, importer, canonicalUrl, true);
        if (newUpstream.__js_helper$_length !== 0 || newUpstreamImports.__js_helper$_length !== 0) {
          changed.add$1(0, t5);
          t5._replaceUpstream$2(A.mergeMaps(new A.UnmodifiableMapView(t5._upstream, t2), newUpstream, t3, t4), A.mergeMaps(new A.UnmodifiableMapView(t5._upstreamImports, t2), newUpstreamImports, t3, t4));
        }
      }
      if (changed._collection$_length !== 0)
        _this._transitiveModificationTimes.clear$0(0);
      return changed;
    },
    _recanonicalizeImportsForNode$4$forImport(node, importer, canonicalUrl, forImport) {
      var t1 = type$.UnmodifiableMapView_of_Uri_and_nullable_StylesheetNode,
        map = forImport ? new A.UnmodifiableMapView(node._upstreamImports, t1) : new A.UnmodifiableMapView(node._upstream, t1),
        newMap = A.LinkedHashMap_LinkedHashMap$_empty(type$.Uri, type$.nullable_StylesheetNode);
      map._map.forEach$1(0, new A.StylesheetGraph__recanonicalizeImportsForNode_closure(this, importer, canonicalUrl, node, forImport, newMap));
      return newMap;
    },
    _nodeFor$5$forImport(url, baseImporter, baseUrl, active, forImport) {
      var importer, canonicalUrl, resolvedUrl, t1, stylesheet, node, _this = this,
        tuple = _this._ignoreErrors$1(new A.StylesheetGraph__nodeFor_closure(_this, url, baseImporter, baseUrl, forImport));
      if (tuple == null)
        return null;
      importer = tuple.item1;
      canonicalUrl = tuple.item2;
      resolvedUrl = tuple.item3;
      t1 = _this._nodes;
      if (t1.containsKey$1(canonicalUrl))
        return t1.$index(0, canonicalUrl);
      if (active.contains$1(0, canonicalUrl))
        return null;
      stylesheet = _this._ignoreErrors$1(new A.StylesheetGraph__nodeFor_closure0(_this, importer, canonicalUrl, resolvedUrl));
      if (stylesheet == null)
        return null;
      active.add$1(0, canonicalUrl);
      node = A.StylesheetNode$_(stylesheet, importer, canonicalUrl, _this._upstreamNodes$3(stylesheet, importer, canonicalUrl));
      active.remove$1(0, canonicalUrl);
      t1.$indexSet(0, canonicalUrl, node);
      return node;
    },
    _nodeFor$4(url, baseImporter, baseUrl, active) {
      return this._nodeFor$5$forImport(url, baseImporter, baseUrl, active, false);
    },
    _ignoreErrors$1$1(callback) {
      var t1, exception;
      try {
        t1 = callback.call$0();
        return t1;
      } catch (exception) {
        return null;
      }
    },
    _ignoreErrors$1(callback) {
      return this._ignoreErrors$1$1(callback, type$.dynamic);
    }
  };
  A.StylesheetGraph_modifiedSince_transitiveModificationTime.prototype = {
    call$1(node) {
      return this.$this._transitiveModificationTimes.putIfAbsent$2(node.canonicalUrl, new A.StylesheetGraph_modifiedSince_transitiveModificationTime_closure(node, this));
    },
    $signature: 382
  };
  A.StylesheetGraph_modifiedSince_transitiveModificationTime_closure.prototype = {
    call$0() {
      var t2, t3, upstreamTime,
        t1 = this.node,
        latest = t1.importer.modificationTime$1(t1.canonicalUrl);
      for (t2 = t1._upstream, t2 = t2.get$values(t2), t1 = t1._upstreamImports, t1 = t2.followedBy$1(0, t1.get$values(t1)), t1 = new A.FollowedByIterator(J.get$iterator$ax(t1.__internal$_first), t1._second), t2 = this.transitiveModificationTime; t1.moveNext$0();) {
        t3 = t1._currentIterator;
        t3 = t3.get$current(t3);
        upstreamTime = t3 == null ? new A.DateTime(Date.now(), false) : t2.call$1(t3);
        if (upstreamTime._core$_value > latest._core$_value)
          latest = upstreamTime;
      }
      return latest;
    },
    $signature: 180
  };
  A.StylesheetGraph__add_closure.prototype = {
    call$0() {
      var _this = this;
      return _this.$this.importCache.canonicalize$3$baseImporter$baseUrl(0, _this.url, _this.baseImporter, _this.baseUrl);
    },
    $signature: 76
  };
  A.StylesheetGraph_addCanonical_closure.prototype = {
    call$0() {
      var _this = this;
      return _this.$this.importCache.importCanonical$3$originalUrl(_this.importer, _this.canonicalUrl, _this.originalUrl);
    },
    $signature: 77
  };
  A.StylesheetGraph_reload_closure.prototype = {
    call$0() {
      return this.$this.importCache.importCanonical$2(this.node.importer, this.canonicalUrl);
    },
    $signature: 77
  };
  A.StylesheetGraph__recanonicalizeImportsForNode_closure.prototype = {
    call$2(url, upstream) {
      var result, t1, t2, t3, exception, newCanonicalUrl, _this = this;
      if (!_this.importer.couldCanonicalize$2(url, _this.canonicalUrl))
        return;
      t1 = _this.$this;
      t2 = t1.importCache;
      t2.clearCanonicalize$1(url);
      result = null;
      try {
        t3 = _this.node;
        result = t2.canonicalize$4$baseImporter$baseUrl$forImport(0, url, t3.importer, t3.canonicalUrl, _this.forImport);
      } catch (exception) {
      }
      t2 = result;
      newCanonicalUrl = t2 == null ? null : t2.item2;
      if (J.$eq$(newCanonicalUrl, upstream == null ? null : upstream.canonicalUrl))
        return;
      t1 = result == null ? null : t1._nodes.$index(0, result.item2);
      _this.newMap.$indexSet(0, url, t1);
    },
    $signature: 383
  };
  A.StylesheetGraph__nodeFor_closure.prototype = {
    call$0() {
      var _this = this;
      return _this.$this.importCache.canonicalize$4$baseImporter$baseUrl$forImport(0, _this.url, _this.baseImporter, _this.baseUrl, _this.forImport);
    },
    $signature: 76
  };
  A.StylesheetGraph__nodeFor_closure0.prototype = {
    call$0() {
      var _this = this;
      return _this.$this.importCache.importCanonical$3$originalUrl(_this.importer, _this.canonicalUrl, _this.resolvedUrl);
    },
    $signature: 77
  };
  A.StylesheetNode.prototype = {
    StylesheetNode$_$4(_stylesheet, importer, canonicalUrl, allUpstream) {
      var t1, t2;
      for (t1 = this._upstream, t1 = t1.get$values(t1), t2 = this._upstreamImports, t2 = t1.followedBy$1(0, t2.get$values(t2)), t2 = new A.FollowedByIterator(J.get$iterator$ax(t2.__internal$_first), t2._second); t2.moveNext$0();) {
        t1 = t2._currentIterator;
        t1 = t1.get$current(t1);
        if (t1 != null)
          t1._downstream.add$1(0, this);
      }
    },
    _replaceUpstream$2(newUpstream, newUpstreamImports) {
      var t3, oldUpstream, newUpstreamSet, _this = this,
        t1 = type$.nullable_StylesheetNode,
        t2 = A.LinkedHashSet_LinkedHashSet$_empty(t1);
      for (t3 = _this._upstream, t3 = t3.get$values(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();)
        t2.add$1(0, t3.get$current(t3));
      for (t3 = _this._upstreamImports, t3 = t3.get$values(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();)
        t2.add$1(0, t3.get$current(t3));
      t3 = type$.StylesheetNode;
      oldUpstream = A.SetExtension_removeNull(t2, t3);
      t1 = A.LinkedHashSet_LinkedHashSet$_empty(t1);
      for (t2 = newUpstream.get$values(newUpstream), t2 = t2.get$iterator(t2); t2.moveNext$0();)
        t1.add$1(0, t2.get$current(t2));
      for (t2 = newUpstreamImports.get$values(newUpstreamImports), t2 = t2.get$iterator(t2); t2.moveNext$0();)
        t1.add$1(0, t2.get$current(t2));
      newUpstreamSet = A.SetExtension_removeNull(t1, t3);
      for (t1 = oldUpstream.difference$1(newUpstreamSet), t1 = t1.get$iterator(t1); t1.moveNext$0();)
        t1.get$current(t1)._downstream.remove$1(0, _this);
      for (t1 = newUpstreamSet.difference$1(oldUpstream), t1 = t1.get$iterator(t1); t1.moveNext$0();)
        t1.get$current(t1)._downstream.add$1(0, _this);
      _this._upstream = newUpstream;
      _this._upstreamImports = newUpstreamImports;
    },
    _stylesheet_graph$_remove$0() {
      var t2, t3, t4, _i, url, _this = this,
        t1 = A.LinkedHashSet_LinkedHashSet$_empty(type$.nullable_StylesheetNode);
      for (t2 = _this._upstream, t2 = t2.get$values(t2), t2 = t2.get$iterator(t2); t2.moveNext$0();)
        t1.add$1(0, t2.get$current(t2));
      for (t2 = _this._upstreamImports, t2 = t2.get$values(t2), t2 = t2.get$iterator(t2); t2.moveNext$0();)
        t1.add$1(0, t2.get$current(t2));
      t1 = A._LinkedHashSetIterator$(t1, t1._collection$_modifications);
      t2 = A._instanceType(t1)._precomputed1;
      for (; t1.moveNext$0();) {
        t3 = t1._collection$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        if (t3 == null)
          continue;
        t3._downstream.remove$1(0, _this);
      }
      for (t1 = _this._downstream, t1 = t1.get$iterator(t1); t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        for (t3 = t2._upstream, t3 = J.toList$0$ax(t3.get$keys(t3)), t4 = t3.length, _i = 0; _i < t3.length; t3.length === t4 || (0, A.throwConcurrentModificationError)(t3), ++_i) {
          url = t3[_i];
          if (J.$eq$(t2._upstream.$index(0, url), _this)) {
            t2._upstream.$indexSet(0, url, null);
            break;
          }
        }
        for (t3 = t2._upstreamImports, t3 = J.toList$0$ax(t3.get$keys(t3)), t4 = t3.length, _i = 0; _i < t3.length; t3.length === t4 || (0, A.throwConcurrentModificationError)(t3), ++_i) {
          url = t3[_i];
          if (J.$eq$(t2._upstreamImports.$index(0, url), _this)) {
            t2._upstreamImports.$indexSet(0, url, null);
            break;
          }
        }
      }
    },
    toString$0(_) {
      var t1 = A.NullableExtension_andThen(this._stylesheet.span.file.url, A.path__prettyUri$closure());
      return t1 == null ? "<unknown>" : t1;
    }
  };
  A.Syntax.prototype = {
    toString$0(_) {
      return this._syntax$_name;
    }
  };
  A.LimitedMapView.prototype = {
    get$keys(_) {
      return this._limited_map_view$_keys;
    },
    get$length(_) {
      return this._limited_map_view$_keys._collection$_length;
    },
    get$isEmpty(_) {
      return this._limited_map_view$_keys._collection$_length === 0;
    },
    get$isNotEmpty(_) {
      return this._limited_map_view$_keys._collection$_length !== 0;
    },
    $index(_, key) {
      return this._limited_map_view$_keys.contains$1(0, key) ? this._limited_map_view$_map.$index(0, key) : null;
    },
    containsKey$1(key) {
      return this._limited_map_view$_keys.contains$1(0, key);
    },
    remove$1(_, key) {
      return this._limited_map_view$_keys.contains$1(0, key) ? this._limited_map_view$_map.remove$1(0, key) : null;
    }
  };
  A.MergedMapView.prototype = {
    get$keys(_) {
      var t1 = this._mapsByKey;
      return new A.LinkedHashMapKeyIterable(t1, A._instanceType(t1)._eval$1("LinkedHashMapKeyIterable<1>"));
    },
    get$length(_) {
      return this._mapsByKey.__js_helper$_length;
    },
    get$isEmpty(_) {
      return this._mapsByKey.__js_helper$_length === 0;
    },
    get$isNotEmpty(_) {
      return this._mapsByKey.__js_helper$_length !== 0;
    },
    MergedMapView$1(maps, $K, $V) {
      var t1, t2, t3, _i, map, t4, t5, t6;
      for (t1 = maps.length, t2 = this._mapsByKey, t3 = $K._eval$1("@<0>")._bind$1($V)._eval$1("MergedMapView<1,2>"), _i = 0; _i < maps.length; maps.length === t1 || (0, A.throwConcurrentModificationError)(maps), ++_i) {
        map = maps[_i];
        if (t3._is(map))
          for (t4 = map._mapsByKey, t4 = t4.get$values(t4), t4 = new A.MappedIterator(J.get$iterator$ax(t4.__internal$_iterable), t4._f), t5 = A._instanceType(t4)._rest[1]; t4.moveNext$0();) {
            t6 = t4.__internal$_current;
            if (t6 == null)
              t6 = t5._as(t6);
            A.setAll(t2, t6.get$keys(t6), t6);
          }
        else
          A.setAll(t2, map.get$keys(map), map);
      }
    },
    $index(_, key) {
      var t1 = this._mapsByKey.$index(0, this.$ti._precomputed1._as(key));
      return t1 == null ? null : t1.$index(0, key);
    },
    $indexSet(_, key, value) {
      var child = this._mapsByKey.$index(0, key);
      if (child == null)
        throw A.wrapException(A.UnsupportedError$(string$.New_en));
      child.$indexSet(0, key, value);
    },
    remove$1(_, key) {
      throw A.wrapException(A.UnsupportedError$(string$.Entrie));
    },
    containsKey$1(key) {
      return this._mapsByKey.containsKey$1(key);
    }
  };
  A.MultiDirWatcher.prototype = {
    watch$1(_, directory) {
      var t1, t2, t3, t4, isParentOfExistingDir, _i, entry, t5, existingWatcher, t6, future, completer;
      for (t1 = this._watchers._map, t2 = t1.get$entries(t1).toList$0(0), t3 = t2.length, t4 = this._group, isParentOfExistingDir = false, _i = 0; _i < t2.length; t2.length === t3 || (0, A.throwConcurrentModificationError)(t2), ++_i) {
        entry = t2[_i];
        t5 = entry.key;
        t5.toString;
        existingWatcher = entry.value;
        if (!isParentOfExistingDir) {
          t6 = $.$get$context();
          t6 = t6._isWithinOrEquals$2(t5, directory) === B._PathRelation_equal || t6._isWithinOrEquals$2(t5, directory) === B._PathRelation_within;
        } else
          t6 = false;
        if (t6) {
          t1 = new A._Future($.Zone__current, type$._Future_void);
          t1._asyncComplete$1(null);
          return t1;
        }
        if ($.$get$context()._isWithinOrEquals$2(directory, t5) === B._PathRelation_within) {
          t1.remove$1(0, t5);
          t4.remove$1(0, existingWatcher);
          isParentOfExistingDir = true;
        }
      }
      future = A.watchDir(directory, this._poll);
      t2 = new A._CompleterStream(type$._CompleterStream_WatchEvent);
      completer = new A.StreamCompleter(t2, type$.StreamCompleter_WatchEvent);
      future.then$1$2$onError(0, completer.get$setSourceStream(), completer.get$setError(), type$.void);
      t1.$indexSet(0, directory, t2);
      t4.add$1(0, t2);
      return future;
    }
  };
  A.NoSourceMapBuffer.prototype = {
    get$length(_) {
      return this._no_source_map_buffer$_buffer._contents.length;
    },
    forSpan$1$2(span, callback) {
      return callback.call$0();
    },
    forSpan$2(span, callback) {
      return this.forSpan$1$2(span, callback, type$.dynamic);
    },
    write$1(_, object) {
      this._no_source_map_buffer$_buffer._contents += A.S(object);
      return null;
    },
    writeCharCode$1(charCode) {
      this._no_source_map_buffer$_buffer._contents += A.Primitives_stringFromCharCode(charCode);
      return null;
    },
    toString$0(_) {
      var t1 = this._no_source_map_buffer$_buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    buildSourceMap$1$prefix(prefix) {
      return A.throwExpression(A.UnsupportedError$(string$.NoSour));
    }
  };
  A.PrefixedMapView.prototype = {
    get$keys(_) {
      return new A._PrefixedKeys(this);
    },
    get$length(_) {
      var t1 = this._prefixed_map_view$_map;
      return t1.get$length(t1);
    },
    get$isEmpty(_) {
      var t1 = this._prefixed_map_view$_map;
      return t1.get$isEmpty(t1);
    },
    get$isNotEmpty(_) {
      var t1 = this._prefixed_map_view$_map;
      return t1.get$isNotEmpty(t1);
    },
    $index(_, key) {
      return typeof key == "string" && B.JSString_methods.startsWith$1(key, this._prefix) ? this._prefixed_map_view$_map.$index(0, J.substring$1$s(key, this._prefix.length)) : null;
    },
    containsKey$1(key) {
      return typeof key == "string" && B.JSString_methods.startsWith$1(key, this._prefix) && this._prefixed_map_view$_map.containsKey$1(J.substring$1$s(key, this._prefix.length));
    }
  };
  A._PrefixedKeys.prototype = {
    get$length(_) {
      var t1 = this._view._prefixed_map_view$_map;
      return t1.get$length(t1);
    },
    get$iterator(_) {
      var t1 = this._view._prefixed_map_view$_map;
      t1 = J.map$1$1$ax(t1.get$keys(t1), new A._PrefixedKeys_iterator_closure(this), type$.String);
      return t1.get$iterator(t1);
    },
    contains$1(_, key) {
      return this._view.containsKey$1(key);
    }
  };
  A._PrefixedKeys_iterator_closure.prototype = {
    call$1(key) {
      return this.$this._view._prefix + key;
    },
    $signature: 5
  };
  A.PublicMemberMapView.prototype = {
    get$keys(_) {
      var t1 = this._public_member_map_view$_inner;
      return J.where$1$ax(t1.get$keys(t1), A.utils__isPublic$closure());
    },
    containsKey$1(key) {
      return typeof key == "string" && A.isPublic(key) && this._public_member_map_view$_inner.containsKey$1(key);
    },
    $index(_, key) {
      if (typeof key == "string" && A.isPublic(key))
        return this._public_member_map_view$_inner.$index(0, key);
      return null;
    }
  };
  A.SourceMapBuffer.prototype = {
    get$_targetLocation() {
      var t1 = this._source_map_buffer$_buffer._contents,
        t2 = this._line;
      return A.SourceLocation$(t1.length, this._column, t2, null);
    },
    get$length(_) {
      return this._source_map_buffer$_buffer._contents.length;
    },
    forSpan$1$2(span, callback) {
      var t1, _this = this,
        wasInSpan = _this._inSpan;
      _this._inSpan = true;
      _this._addEntry$2(A.FileLocation$_(span.file, span._file$_start), _this.get$_targetLocation());
      try {
        t1 = callback.call$0();
        return t1;
      } finally {
        _this._inSpan = wasInSpan;
      }
    },
    forSpan$2(span, callback) {
      return this.forSpan$1$2(span, callback, type$.dynamic);
    },
    _addEntry$2(source, target) {
      var entry, t2,
        t1 = this._entries;
      if (t1.length !== 0) {
        entry = B.JSArray_methods.get$last(t1);
        t2 = entry.source;
        if (t2.file.getLine$1(t2.offset) === source.file.getLine$1(source.offset) && entry.target.line === target.line)
          return;
        if (entry.target.offset === target.offset)
          return;
      }
      t1.push(new A.Entry(source, target, null));
    },
    write$1(_, object) {
      var t1, i,
        string = J.toString$0$(object);
      this._source_map_buffer$_buffer._contents += string;
      for (t1 = string.length, i = 0; i < t1; ++i)
        if (B.JSString_methods._codeUnitAt$1(string, i) === 10)
          this._source_map_buffer$_writeLine$0();
        else
          ++this._column;
    },
    writeCharCode$1(charCode) {
      this._source_map_buffer$_buffer._contents += A.Primitives_stringFromCharCode(charCode);
      if (charCode === 10)
        this._source_map_buffer$_writeLine$0();
      else
        ++this._column;
    },
    _source_map_buffer$_writeLine$0() {
      var _this = this,
        t1 = _this._entries;
      if (B.JSArray_methods.get$last(t1).target.line === _this._line && B.JSArray_methods.get$last(t1).target.column === _this._column)
        t1.pop();
      ++_this._line;
      _this._column = 0;
      if (_this._inSpan)
        t1.push(new A.Entry(B.JSArray_methods.get$last(t1).source, _this.get$_targetLocation(), null));
    },
    toString$0(_) {
      var t1 = this._source_map_buffer$_buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    buildSourceMap$1$prefix(prefix) {
      var i, t2, prefixColumn, _box_0 = {},
        t1 = prefix.length;
      if (t1 === 0)
        return A.SingleMapping_SingleMapping$fromEntries(this._entries);
      _box_0.prefixColumn = _box_0.prefixLines = 0;
      for (i = 0, t2 = 0; i < t1; ++i)
        if (B.JSString_methods._codeUnitAt$1(prefix, i) === 10) {
          ++_box_0.prefixLines;
          _box_0.prefixColumn = 0;
          t2 = 0;
        } else {
          prefixColumn = t2 + 1;
          _box_0.prefixColumn = prefixColumn;
          t2 = prefixColumn;
        }
      t2 = this._entries;
      return A.SingleMapping_SingleMapping$fromEntries(new A.MappedListIterable(t2, new A.SourceMapBuffer_buildSourceMap_closure(_box_0, t1), A._arrayInstanceType(t2)._eval$1("MappedListIterable<1,Entry>")));
    }
  };
  A.SourceMapBuffer_buildSourceMap_closure.prototype = {
    call$1(entry) {
      var t1 = entry.source,
        t2 = entry.target,
        t3 = t2.line,
        t4 = this._box_0,
        t5 = t4.prefixLines;
      t4 = t3 === 0 ? t4.prefixColumn : 0;
      return new A.Entry(t1, A.SourceLocation$(t2.offset + this.prefixLength, t2.column + t4, t3 + t5, null), entry.identifierName);
    },
    $signature: 169
  };
  A.UnprefixedMapView.prototype = {
    get$keys(_) {
      return new A._UnprefixedKeys(this);
    },
    $index(_, key) {
      return typeof key == "string" ? this._unprefixed_map_view$_map.$index(0, this._unprefixed_map_view$_prefix + key) : null;
    },
    containsKey$1(key) {
      return typeof key == "string" && this._unprefixed_map_view$_map.containsKey$1(this._unprefixed_map_view$_prefix + key);
    },
    remove$1(_, key) {
      return typeof key == "string" ? this._unprefixed_map_view$_map.remove$1(0, this._unprefixed_map_view$_prefix + key) : null;
    }
  };
  A._UnprefixedKeys.prototype = {
    get$iterator(_) {
      var t1 = this._unprefixed_map_view$_view._unprefixed_map_view$_map;
      t1 = J.where$1$ax(t1.get$keys(t1), new A._UnprefixedKeys_iterator_closure(this)).map$1$1(0, new A._UnprefixedKeys_iterator_closure0(this), type$.String);
      return t1.get$iterator(t1);
    },
    contains$1(_, key) {
      return this._unprefixed_map_view$_view.containsKey$1(key);
    }
  };
  A._UnprefixedKeys_iterator_closure.prototype = {
    call$1(key) {
      return B.JSString_methods.startsWith$1(key, this.$this._unprefixed_map_view$_view._unprefixed_map_view$_prefix);
    },
    $signature: 6
  };
  A._UnprefixedKeys_iterator_closure0.prototype = {
    call$1(key) {
      return B.JSString_methods.substring$1(key, this.$this._unprefixed_map_view$_view._unprefixed_map_view$_prefix.length);
    },
    $signature: 5
  };
  A.indent_closure.prototype = {
    call$1(line) {
      return B.JSString_methods.$mul(" ", this.indentation) + line;
    },
    $signature: 5
  };
  A.flattenVertically_closure.prototype = {
    call$1(inner) {
      return A.QueueList_QueueList$from(inner, this.T);
    },
    $signature() {
      return this.T._eval$1("QueueList<0>(Iterable<0>)");
    }
  };
  A.flattenVertically_closure0.prototype = {
    call$1(queue) {
      this.result.push(queue.removeFirst$0());
      return queue.get$length(queue) === 0;
    },
    $signature() {
      return this.T._eval$1("bool(QueueList<0>)");
    }
  };
  A.longestCommonSubsequence_closure.prototype = {
    call$2(element1, element2) {
      return J.$eq$(element1, element2) ? element1 : null;
    },
    $signature() {
      return this.T._eval$1("0?(0,0)");
    }
  };
  A.longestCommonSubsequence_backtrack.prototype = {
    call$2(i, j) {
      var selection, t1, _this = this;
      if (i === -1 || j === -1)
        return A._setArrayType([], _this.T._eval$1("JSArray<0>"));
      selection = _this.selections[i][j];
      if (selection != null) {
        t1 = _this.call$2(i - 1, j - 1);
        J.add$1$ax(t1, selection);
        return t1;
      }
      t1 = _this.lengths;
      return t1[i + 1][j] > t1[i][j + 1] ? _this.call$2(i, j - 1) : _this.call$2(i - 1, j);
    },
    $signature() {
      return this.T._eval$1("List<0>(int,int)");
    }
  };
  A.mapAddAll2_closure.prototype = {
    call$2(key, inner) {
      var t1 = this.destination,
        innerDestination = t1.$index(0, key);
      if (innerDestination != null)
        innerDestination.addAll$1(0, inner);
      else
        t1.$indexSet(0, key, inner);
    },
    $signature() {
      return this.K1._eval$1("@<0>")._bind$1(this.K2)._bind$1(this.V)._eval$1("~(1,Map<2,3>)");
    }
  };
  A.Value.prototype = {
    get$isTruthy() {
      return true;
    },
    get$separator(_) {
      return B.ListSeparator_undecided_null;
    },
    get$hasBrackets() {
      return false;
    },
    get$asList() {
      return A._setArrayType([this], type$.JSArray_Value);
    },
    get$lengthAsList() {
      return 1;
    },
    get$isBlank() {
      return false;
    },
    get$isSpecialNumber() {
      return false;
    },
    get$isVar() {
      return false;
    },
    get$realNull() {
      return this;
    },
    sassIndexToListIndex$2(sassIndex, $name) {
      var _this = this,
        index = sassIndex.assertNumber$1($name).assertInt$1($name);
      if (index === 0)
        throw A.wrapException(_this._value$_exception$2("List index may not be 0.", $name));
      if (Math.abs(index) > _this.get$lengthAsList())
        throw A.wrapException(_this._value$_exception$2("Invalid index " + sassIndex.toString$0(0) + " for a list with " + _this.get$lengthAsList() + " elements.", $name));
      return index < 0 ? _this.get$lengthAsList() + index : index - 1;
    },
    assertCalculation$1($name) {
      return A.throwExpression(this._value$_exception$2(this.toString$0(0) + " is not a calculation.", $name));
    },
    assertColor$1($name) {
      return A.throwExpression(this._value$_exception$2(this.toString$0(0) + " is not a color.", $name));
    },
    assertFunction$1($name) {
      return A.throwExpression(this._value$_exception$2(this.toString$0(0) + " is not a function reference.", $name));
    },
    assertMap$1($name) {
      return A.throwExpression(this._value$_exception$2(this.toString$0(0) + " is not a map.", $name));
    },
    tryMap$0() {
      return null;
    },
    assertNumber$1($name) {
      return A.throwExpression(this._value$_exception$2(this.toString$0(0) + " is not a number.", $name));
    },
    assertNumber$0() {
      return this.assertNumber$1(null);
    },
    assertString$1($name) {
      return A.throwExpression(this._value$_exception$2(this.toString$0(0) + " is not a string.", $name));
    },
    assertSelector$2$allowParent$name(allowParent, $name) {
      var error, stackTrace, t1, exception,
        string = this._selectorString$1($name);
      try {
        t1 = A.SelectorList_SelectorList$parse(string, allowParent, true, null);
        return t1;
      } catch (exception) {
        t1 = A.unwrapException(exception);
        if (t1 instanceof A.SassFormatException) {
          error = t1;
          stackTrace = A.getTraceFromException(exception);
          t1 = B.JSString_methods.replaceFirst$2(J.toString$0$(error), "Error: ", "");
          A.throwWithTrace(new A.SassScriptException($name == null ? t1 : "$" + $name + ": " + t1), stackTrace);
        } else
          throw exception;
      }
    },
    assertSelector$1$name($name) {
      return this.assertSelector$2$allowParent$name(false, $name);
    },
    assertSelector$0() {
      return this.assertSelector$2$allowParent$name(false, null);
    },
    assertSelector$1$allowParent(allowParent) {
      return this.assertSelector$2$allowParent$name(allowParent, null);
    },
    assertCompoundSelector$1$name($name) {
      var error, stackTrace, t1, exception,
        allowParent = false,
        string = this._selectorString$1($name);
      try {
        t1 = A.SelectorParser$(string, allowParent, true, null, null).parseCompoundSelector$0();
        return t1;
      } catch (exception) {
        t1 = A.unwrapException(exception);
        if (t1 instanceof A.SassFormatException) {
          error = t1;
          stackTrace = A.getTraceFromException(exception);
          t1 = B.JSString_methods.replaceFirst$2(J.toString$0$(error), "Error: ", "");
          A.throwWithTrace(new A.SassScriptException("$" + $name + ": " + t1), stackTrace);
        } else
          throw exception;
      }
    },
    _selectorString$1($name) {
      var string = this._selectorStringOrNull$0();
      if (string != null)
        return string;
      throw A.wrapException(this._value$_exception$2(this.toString$0(0) + string$.x20is_no, $name));
    },
    _selectorStringOrNull$0() {
      var t1, t2, result, t3, _i, complex, string, compound, _this = this, _null = null;
      if (_this instanceof A.SassString)
        return _this._string$_text;
      if (!(_this instanceof A.SassList))
        return _null;
      t1 = _this._list$_contents;
      t2 = t1.length;
      if (t2 === 0)
        return _null;
      result = A._setArrayType([], type$.JSArray_String);
      t3 = _this._separator;
      switch (t3) {
        case B.ListSeparator_kWM:
          for (_i = 0; _i < t2; ++_i) {
            complex = t1[_i];
            if (complex instanceof A.SassString)
              result.push(complex._string$_text);
            else if (complex instanceof A.SassList && complex._separator === B.ListSeparator_woc) {
              string = complex._selectorStringOrNull$0();
              if (string == null)
                return _null;
              result.push(string);
            } else
              return _null;
          }
          break;
        case B.ListSeparator_1gm:
          return _null;
        default:
          for (_i = 0; _i < t2; ++_i) {
            compound = t1[_i];
            if (compound instanceof A.SassString)
              result.push(compound._string$_text);
            else
              return _null;
          }
          break;
      }
      return B.JSArray_methods.join$1(result, t3 === B.ListSeparator_kWM ? ", " : " ");
    },
    withListContents$2$separator(contents, separator) {
      var t1 = separator == null ? this.get$separator(this) : separator,
        t2 = this.get$hasBrackets();
      return A.SassList$(contents, t1, t2);
    },
    withListContents$1(contents) {
      return this.withListContents$2$separator(contents, null);
    },
    greaterThan$1(other) {
      return A.throwExpression(A.SassScriptException$('Undefined operation "' + this.toString$0(0) + " > " + other.toString$0(0) + '".'));
    },
    greaterThanOrEquals$1(other) {
      return A.throwExpression(A.SassScriptException$('Undefined operation "' + this.toString$0(0) + " >= " + other.toString$0(0) + '".'));
    },
    lessThan$1(other) {
      return A.throwExpression(A.SassScriptException$('Undefined operation "' + this.toString$0(0) + " < " + other.toString$0(0) + '".'));
    },
    lessThanOrEquals$1(other) {
      return A.throwExpression(A.SassScriptException$('Undefined operation "' + this.toString$0(0) + " <= " + other.toString$0(0) + '".'));
    },
    times$1(other) {
      return A.throwExpression(A.SassScriptException$('Undefined operation "' + this.toString$0(0) + " * " + other.toString$0(0) + '".'));
    },
    modulo$1(other) {
      return A.throwExpression(A.SassScriptException$('Undefined operation "' + this.toString$0(0) + " % " + other.toString$0(0) + '".'));
    },
    plus$1(other) {
      if (other instanceof A.SassString)
        return new A.SassString(A.serializeValue(this, false, true) + other._string$_text, other._hasQuotes);
      else if (other instanceof A.SassCalculation)
        throw A.wrapException(A.SassScriptException$('Undefined operation "' + this.toString$0(0) + " + " + other.toString$0(0) + '".'));
      else
        return new A.SassString(A.serializeValue(this, false, true) + A.serializeValue(other, false, true), false);
    },
    minus$1(other) {
      if (other instanceof A.SassCalculation)
        throw A.wrapException(A.SassScriptException$('Undefined operation "' + this.toString$0(0) + " - " + other.toString$0(0) + '".'));
      else
        return new A.SassString(A.serializeValue(this, false, true) + "-" + A.serializeValue(other, false, true), false);
    },
    dividedBy$1(other) {
      return new A.SassString(A.serializeValue(this, false, true) + "/" + A.serializeValue(other, false, true), false);
    },
    unaryPlus$0() {
      return new A.SassString("+" + A.serializeValue(this, false, true), false);
    },
    unaryMinus$0() {
      return new A.SassString("-" + A.serializeValue(this, false, true), false);
    },
    unaryNot$0() {
      return B.SassBoolean_false;
    },
    withoutSlash$0() {
      return this;
    },
    toString$0(_) {
      return A.serializeValue(this, true, true);
    },
    _value$_exception$2(message, $name) {
      return new A.SassScriptException($name == null ? message : "$" + $name + ": " + message);
    }
  };
  A.SassArgumentList.prototype = {};
  A.SassBoolean.prototype = {
    get$isTruthy() {
      return this.value;
    },
    accept$1$1(visitor) {
      return visitor._serialize$_buffer.write$1(0, String(this.value));
    },
    accept$1(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    unaryNot$0() {
      return this.value ? B.SassBoolean_false : B.SassBoolean_true;
    }
  };
  A.SassCalculation.prototype = {
    get$isSpecialNumber() {
      return true;
    },
    accept$1$1(visitor) {
      var t2,
        t1 = visitor._serialize$_buffer;
      t1.write$1(0, this.name);
      t1.writeCharCode$1(40);
      t2 = visitor._style === B.OutputStyle_compressed ? "," : ", ";
      visitor._writeBetween$3(this.$arguments, t2, visitor.get$_writeCalculationValue());
      t1.writeCharCode$1(41);
      return null;
    },
    accept$1(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    assertCalculation$1($name) {
      return this;
    },
    plus$1(other) {
      if (other instanceof A.SassString)
        return this.super$Value$plus(other);
      throw A.wrapException(A.SassScriptException$('Undefined operation "' + this.toString$0(0) + " + " + other.toString$0(0) + '".'));
    },
    minus$1(other) {
      return A.throwExpression(A.SassScriptException$('Undefined operation "' + this.toString$0(0) + " - " + other.toString$0(0) + '".'));
    },
    unaryPlus$0() {
      return A.throwExpression(A.SassScriptException$('Undefined operation "+' + this.toString$0(0) + '".'));
    },
    unaryMinus$0() {
      return A.throwExpression(A.SassScriptException$('Undefined operation "-' + this.toString$0(0) + '".'));
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.SassCalculation && this.name === other.name && B.C_ListEquality.equals$2(0, this.$arguments, other.$arguments);
    },
    get$hashCode(_) {
      return B.JSString_methods.get$hashCode(this.name) ^ B.C_ListEquality0.hash$1(this.$arguments);
    }
  };
  A.SassCalculation__verifyLength_closure.prototype = {
    call$1(arg) {
      return arg instanceof A.SassString || arg instanceof A.CalculationInterpolation;
    },
    $signature: 109
  };
  A.CalculationOperation.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.CalculationOperation && this.operator === other.operator && J.$eq$(this.left, other.left) && J.$eq$(this.right, other.right);
    },
    get$hashCode(_) {
      return (A.Primitives_objectHashCode(this.operator) ^ J.get$hashCode$(this.left) ^ J.get$hashCode$(this.right)) >>> 0;
    },
    toString$0(_) {
      var parenthesized = A.serializeValue(new A.SassCalculation("", A._setArrayType([this], type$.JSArray_Object)), true, true);
      return B.JSString_methods.substring$2(parenthesized, 1, parenthesized.length - 1);
    }
  };
  A.CalculationOperator.prototype = {
    toString$0(_) {
      return this.name;
    }
  };
  A.CalculationInterpolation.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.CalculationInterpolation && this.value === other.value;
    },
    get$hashCode(_) {
      return B.JSString_methods.get$hashCode(this.value);
    },
    toString$0(_) {
      return this.value;
    }
  };
  A.SassColor.prototype = {
    get$red(_) {
      var t1;
      if (this._red == null)
        this._hslToRgb$0();
      t1 = this._red;
      t1.toString;
      return t1;
    },
    get$green(_) {
      var t1;
      if (this._green == null)
        this._hslToRgb$0();
      t1 = this._green;
      t1.toString;
      return t1;
    },
    get$blue(_) {
      var t1;
      if (this._blue == null)
        this._hslToRgb$0();
      t1 = this._blue;
      t1.toString;
      return t1;
    },
    get$hue(_) {
      var t1;
      if (this._hue == null)
        this._rgbToHsl$0();
      t1 = this._hue;
      t1.toString;
      return t1;
    },
    get$saturation(_) {
      var t1;
      if (this._saturation == null)
        this._rgbToHsl$0();
      t1 = this._saturation;
      t1.toString;
      return t1;
    },
    get$lightness(_) {
      var t1;
      if (this._lightness == null)
        this._rgbToHsl$0();
      t1 = this._lightness;
      t1.toString;
      return t1;
    },
    get$whiteness(_) {
      var _this = this;
      return Math.min(Math.min(_this.get$red(_this), _this.get$green(_this)), _this.get$blue(_this)) / 255 * 100;
    },
    get$blackness(_) {
      var _this = this;
      return 100 - Math.max(Math.max(_this.get$red(_this), _this.get$green(_this)), _this.get$blue(_this)) / 255 * 100;
    },
    accept$1$1(visitor) {
      var $name, hexLength, t1, format, t2, opaque, _this = this;
      if (visitor._style === B.OutputStyle_compressed)
        if (!(Math.abs(_this._alpha - 1) < $.$get$epsilon()))
          visitor._writeRgb$1(_this);
        else {
          $name = $.$get$namesByColor().$index(0, _this);
          hexLength = visitor._canUseShortHex$1(_this) ? 4 : 7;
          if ($name != null && $name.length <= hexLength)
            visitor._serialize$_buffer.write$1(0, $name);
          else {
            t1 = visitor._serialize$_buffer;
            if (visitor._canUseShortHex$1(_this)) {
              t1.writeCharCode$1(35);
              t1.writeCharCode$1(A.hexCharFor(_this.get$red(_this) & 15));
              t1.writeCharCode$1(A.hexCharFor(_this.get$green(_this) & 15));
              t1.writeCharCode$1(A.hexCharFor(_this.get$blue(_this) & 15));
            } else {
              t1.writeCharCode$1(35);
              visitor._writeHexComponent$1(_this.get$red(_this));
              visitor._writeHexComponent$1(_this.get$green(_this));
              visitor._writeHexComponent$1(_this.get$blue(_this));
            }
          }
        }
      else {
        format = _this.format;
        if (format != null)
          if (format === B._ColorFormatEnum_rgbFunction)
            visitor._writeRgb$1(_this);
          else {
            t1 = visitor._serialize$_buffer;
            if (format === B._ColorFormatEnum_hslFunction) {
              t2 = _this._alpha;
              opaque = Math.abs(t2 - 1) < $.$get$epsilon();
              t1.write$1(0, opaque ? "hsl(" : "hsla(");
              visitor._writeNumber$1(_this.get$hue(_this));
              t1.write$1(0, "deg");
              t1.write$1(0, ", ");
              visitor._writeNumber$1(_this.get$saturation(_this));
              t1.writeCharCode$1(37);
              t1.write$1(0, ", ");
              visitor._writeNumber$1(_this.get$lightness(_this));
              t1.writeCharCode$1(37);
              if (!opaque) {
                t1.write$1(0, ", ");
                visitor._writeNumber$1(t2);
              }
              t1.writeCharCode$1(41);
            } else {
              t2 = type$.SpanColorFormat._as(format)._color$_span;
              t1.write$1(0, A.String_String$fromCharCodes(B.NativeUint32List_methods.sublist$2(t2.file._decodedChars, t2._file$_start, t2._end), 0, null));
            }
          }
        else {
          t1 = $.$get$namesByColor();
          if (t1.containsKey$1(_this) && !(Math.abs(_this._alpha - 0) < $.$get$epsilon()))
            visitor._serialize$_buffer.write$1(0, t1.$index(0, _this));
          else if (Math.abs(_this._alpha - 1) < $.$get$epsilon()) {
            visitor._serialize$_buffer.writeCharCode$1(35);
            visitor._writeHexComponent$1(_this.get$red(_this));
            visitor._writeHexComponent$1(_this.get$green(_this));
            visitor._writeHexComponent$1(_this.get$blue(_this));
          } else
            visitor._writeRgb$1(_this);
        }
      }
      return null;
    },
    accept$1(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    assertColor$1($name) {
      return this;
    },
    changeRgb$4$alpha$blue$green$red(alpha, blue, green, red) {
      return A.SassColor$rgb(red, green, blue, alpha == null ? this._alpha : alpha);
    },
    changeRgb$3$blue$green$red(blue, green, red) {
      return this.changeRgb$4$alpha$blue$green$red(null, blue, green, red);
    },
    changeHsl$4$alpha$hue$lightness$saturation(alpha, hue, lightness, saturation) {
      var _this = this, _null = null,
        t1 = hue == null ? _this.get$hue(_this) : hue,
        t2 = saturation == null ? _this.get$saturation(_this) : saturation,
        t3 = lightness == null ? _this.get$lightness(_this) : lightness,
        t4 = alpha == null ? _this._alpha : alpha;
      t1 = B.JSNumber_methods.$mod(t1, 360);
      t2 = A.fuzzyAssertRange(t2, 0, 100, "saturation");
      t3 = A.fuzzyAssertRange(t3, 0, 100, "lightness");
      t4 = A.fuzzyAssertRange(t4, 0, 1, "alpha");
      return new A.SassColor(_null, _null, _null, t1, t2, t3, t4, _null);
    },
    changeHsl$1$saturation(saturation) {
      return this.changeHsl$4$alpha$hue$lightness$saturation(null, null, null, saturation);
    },
    changeHsl$1$lightness(lightness) {
      return this.changeHsl$4$alpha$hue$lightness$saturation(null, null, lightness, null);
    },
    changeHsl$1$hue(hue) {
      return this.changeHsl$4$alpha$hue$lightness$saturation(null, hue, null, null);
    },
    changeAlpha$1(alpha) {
      var _this = this;
      return new A.SassColor(_this._red, _this._green, _this._blue, _this._hue, _this._saturation, _this._lightness, A.fuzzyAssertRange(alpha, 0, 1, "alpha"), null);
    },
    plus$1(other) {
      if (!(other instanceof A.SassNumber) && !(other instanceof A.SassColor))
        return this.super$Value$plus(other);
      throw A.wrapException(A.SassScriptException$('Undefined operation "' + this.toString$0(0) + " + " + other.toString$0(0) + '".'));
    },
    minus$1(other) {
      if (!(other instanceof A.SassNumber) && !(other instanceof A.SassColor))
        return this.super$Value$minus(other);
      throw A.wrapException(A.SassScriptException$('Undefined operation "' + this.toString$0(0) + " - " + other.toString$0(0) + '".'));
    },
    dividedBy$1(other) {
      if (!(other instanceof A.SassNumber) && !(other instanceof A.SassColor))
        return this.super$Value$dividedBy(other);
      throw A.wrapException(A.SassScriptException$('Undefined operation "' + this.toString$0(0) + " / " + other.toString$0(0) + '".'));
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof A.SassColor && other.get$red(other) === _this.get$red(_this) && other.get$green(other) === _this.get$green(_this) && other.get$blue(other) === _this.get$blue(_this) && other._alpha === _this._alpha;
    },
    get$hashCode(_) {
      var _this = this;
      return B.JSInt_methods.get$hashCode(_this.get$red(_this)) ^ B.JSInt_methods.get$hashCode(_this.get$green(_this)) ^ B.JSInt_methods.get$hashCode(_this.get$blue(_this)) ^ B.JSNumber_methods.get$hashCode(_this._alpha);
    },
    _rgbToHsl$0() {
      var t2, lightness, _this = this,
        scaledRed = _this.get$red(_this) / 255,
        scaledGreen = _this.get$green(_this) / 255,
        scaledBlue = _this.get$blue(_this) / 255,
        max = Math.max(Math.max(scaledRed, scaledGreen), scaledBlue),
        min = Math.min(Math.min(scaledRed, scaledGreen), scaledBlue),
        delta = max - min,
        t1 = max === min;
      if (t1)
        _this._hue = 0;
      else if (max === scaledRed)
        _this._hue = B.JSNumber_methods.$mod(60 * (scaledGreen - scaledBlue) / delta, 360);
      else if (max === scaledGreen)
        _this._hue = B.JSNumber_methods.$mod(120 + 60 * (scaledBlue - scaledRed) / delta, 360);
      else if (max === scaledBlue)
        _this._hue = B.JSNumber_methods.$mod(240 + 60 * (scaledRed - scaledGreen) / delta, 360);
      t2 = max + min;
      lightness = 50 * t2;
      _this._lightness = lightness;
      if (t1)
        _this._saturation = 0;
      else {
        t1 = 100 * delta;
        if (lightness < 50)
          _this._saturation = t1 / t2;
        else
          _this._saturation = t1 / (2 - max - min);
      }
    },
    _hslToRgb$0() {
      var _this = this,
        scaledHue = _this.get$hue(_this) / 360,
        scaledSaturation = _this.get$saturation(_this) / 100,
        scaledLightness = _this.get$lightness(_this) / 100,
        m2 = scaledLightness <= 0.5 ? scaledLightness * (scaledSaturation + 1) : scaledLightness + scaledSaturation - scaledLightness * scaledSaturation,
        m1 = scaledLightness * 2 - m2;
      _this._red = A.fuzzyRound(A.SassColor__hueToRgb(m1, m2, scaledHue + 0.3333333333333333) * 255);
      _this._green = A.fuzzyRound(A.SassColor__hueToRgb(m1, m2, scaledHue) * 255);
      _this._blue = A.fuzzyRound(A.SassColor__hueToRgb(m1, m2, scaledHue - 0.3333333333333333) * 255);
    }
  };
  A.SassColor_SassColor$hwb_toRgb.prototype = {
    call$1(hue) {
      return A.fuzzyRound((A.SassColor__hueToRgb(0, 1, hue) * this.factor + this._box_0.scaledWhiteness) * 255);
    },
    $signature: 42
  };
  A._ColorFormatEnum.prototype = {
    toString$0(_) {
      return this._color$_name;
    }
  };
  A.SpanColorFormat.prototype = {};
  A.SassFunction.prototype = {
    accept$1$1(visitor) {
      var t1, t2;
      if (!visitor._inspect)
        A.throwExpression(A.SassScriptException$(this.toString$0(0) + " isn't a valid CSS value."));
      t1 = visitor._serialize$_buffer;
      t1.write$1(0, "get-function(");
      t2 = this.callable;
      visitor._visitQuotedString$1(t2.get$name(t2));
      t1.writeCharCode$1(41);
      return null;
    },
    accept$1(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    assertFunction$1($name) {
      return this;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.SassFunction && this.callable.$eq(0, other.callable);
    },
    get$hashCode(_) {
      var t1 = this.callable;
      return t1.get$hashCode(t1);
    }
  };
  A.SassList.prototype = {
    get$separator(_) {
      return this._separator;
    },
    get$hasBrackets() {
      return this._hasBrackets;
    },
    get$isBlank() {
      return !this._hasBrackets && B.JSArray_methods.every$1(this._list$_contents, new A.SassList_isBlank_closure());
    },
    get$asList() {
      return this._list$_contents;
    },
    get$lengthAsList() {
      return this._list$_contents.length;
    },
    SassList$3$brackets(contents, _separator, brackets) {
      if (this._separator === B.ListSeparator_undecided_null && this._list$_contents.length > 1)
        throw A.wrapException(A.ArgumentError$(string$.A_list, null));
    },
    accept$1$1(visitor) {
      return visitor.visitList$1(this);
    },
    accept$1(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    assertMap$1($name) {
      return this._list$_contents.length === 0 ? B.SassMap_Map_empty : this.super$Value$assertMap($name);
    },
    tryMap$0() {
      return this._list$_contents.length === 0 ? B.SassMap_Map_empty : null;
    },
    $eq(_, other) {
      var t1, _this = this;
      if (other == null)
        return false;
      if (!(other instanceof A.SassList && other._separator === _this._separator && other._hasBrackets === _this._hasBrackets && B.C_ListEquality.equals$2(0, other._list$_contents, _this._list$_contents)))
        t1 = _this._list$_contents.length === 0 && other instanceof A.SassMap && other.get$asList().length === 0;
      else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      return B.C_ListEquality0.hash$1(this._list$_contents);
    }
  };
  A.SassList_isBlank_closure.prototype = {
    call$1(element) {
      return element.get$isBlank();
    },
    $signature: 62
  };
  A.ListSeparator.prototype = {
    toString$0(_) {
      return this._list$_name;
    }
  };
  A.SassMap.prototype = {
    get$separator(_) {
      var t1 = this._map$_contents;
      return t1.get$isEmpty(t1) ? B.ListSeparator_undecided_null : B.ListSeparator_kWM;
    },
    get$asList() {
      var result = A._setArrayType([], type$.JSArray_Value);
      this._map$_contents.forEach$1(0, new A.SassMap_asList_closure(result));
      return result;
    },
    get$lengthAsList() {
      var t1 = this._map$_contents;
      return t1.get$length(t1);
    },
    accept$1$1(visitor) {
      return visitor.visitMap$1(this);
    },
    accept$1(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    assertMap$1($name) {
      return this;
    },
    tryMap$0() {
      return this;
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (!(other instanceof A.SassMap && B.C_MapEquality.equals$2(0, other._map$_contents, this._map$_contents))) {
        t1 = this._map$_contents;
        t1 = t1.get$isEmpty(t1) && other instanceof A.SassList && other._list$_contents.length === 0;
      } else
        t1 = true;
      return t1;
    },
    get$hashCode(_) {
      var t1 = this._map$_contents;
      return t1.get$isEmpty(t1) ? B.C_ListEquality0.hash$1(B.List_empty5) : B.C_MapEquality.hash$1(t1);
    }
  };
  A.SassMap_asList_closure.prototype = {
    call$2(key, value) {
      this.result.push(A.SassList$(A._setArrayType([key, value], type$.JSArray_Value), B.ListSeparator_woc, false));
    },
    $signature: 52
  };
  A._SassNull.prototype = {
    get$isTruthy() {
      return false;
    },
    get$isBlank() {
      return true;
    },
    get$realNull() {
      return null;
    },
    accept$1$1(visitor) {
      if (visitor._inspect)
        visitor._serialize$_buffer.write$1(0, "null");
      return null;
    },
    accept$1(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    unaryNot$0() {
      return B.SassBoolean_true;
    }
  };
  A.SassNumber.prototype = {
    get$unitString() {
      var _this = this;
      return _this.get$hasUnits() ? _this._unitString$2(_this.get$numeratorUnits(_this), _this.get$denominatorUnits(_this)) : "";
    },
    accept$1$1(visitor) {
      return visitor.visitNumber$1(this);
    },
    accept$1(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    withoutSlash$0() {
      var _this = this;
      return _this.asSlash == null ? _this : _this.withValue$1(_this._number$_value);
    },
    assertNumber$1($name) {
      return this;
    },
    assertNumber$0() {
      return this.assertNumber$1(null);
    },
    assertInt$1($name) {
      var t1 = this._number$_value,
        integer = A.fuzzyIsInt(t1) ? B.JSNumber_methods.round$0(t1) : null;
      if (integer != null)
        return integer;
      throw A.wrapException(this._number$_exception$2(this.toString$0(0) + " is not an int.", $name));
    },
    assertInt$0() {
      return this.assertInt$1(null);
    },
    valueInRange$3(min, max, $name) {
      var _this = this,
        result = A.fuzzyCheckRange(_this._number$_value, min, max);
      if (result != null)
        return result;
      throw A.wrapException(_this._number$_exception$2("Expected " + _this.toString$0(0) + " to be within " + min + _this.get$unitString() + " and " + max + _this.get$unitString() + ".", $name));
    },
    hasCompatibleUnits$1(other) {
      var _this = this;
      if (_this.get$numeratorUnits(_this).length !== other.get$numeratorUnits(other).length)
        return false;
      if (_this.get$denominatorUnits(_this).length !== other.get$denominatorUnits(other).length)
        return false;
      return _this.isComparableTo$1(other);
    },
    assertUnit$2(unit, $name) {
      if (this.hasUnit$1(unit))
        return;
      throw A.wrapException(this._number$_exception$2("Expected " + this.toString$0(0) + ' to have unit "' + unit + '".', $name));
    },
    assertNoUnits$1($name) {
      if (!this.get$hasUnits())
        return;
      throw A.wrapException(this._number$_exception$2("Expected " + this.toString$0(0) + " to have no units.", $name));
    },
    convertValueToMatch$3(other, $name, otherName) {
      return this._coerceOrConvertValue$6$coerceUnitless$name$other$otherName(other.get$numeratorUnits(other), other.get$denominatorUnits(other), false, $name, other, otherName);
    },
    coerce$3(newNumerators, newDenominators, $name) {
      return A.SassNumber_SassNumber$withUnits(this.coerceValue$3(newNumerators, newDenominators, $name), newDenominators, newNumerators);
    },
    coerce$2(newNumerators, newDenominators) {
      return this.coerce$3(newNumerators, newDenominators, null);
    },
    coerceValue$3(newNumerators, newDenominators, $name) {
      return this._coerceOrConvertValue$4$coerceUnitless$name(newNumerators, newDenominators, true, $name);
    },
    coerceValueToUnit$2(unit, $name) {
      var t1 = type$.JSArray_String;
      return this.coerceValue$3(A._setArrayType([unit], t1), A._setArrayType([], t1), $name);
    },
    coerceValueToMatch$3(other, $name, otherName) {
      return this._coerceOrConvertValue$6$coerceUnitless$name$other$otherName(other.get$numeratorUnits(other), other.get$denominatorUnits(other), true, $name, other, otherName);
    },
    coerceValueToMatch$1(other) {
      return this.coerceValueToMatch$3(other, null, null);
    },
    _coerceOrConvertValue$6$coerceUnitless$name$other$otherName(newNumerators, newDenominators, coerceUnitless, $name, other, otherName) {
      var otherHasUnits, t1, _compatibilityException, oldNumerators, _i, oldDenominators, _this = this, _box_0 = {};
      if (B.C_ListEquality.equals$2(0, _this.get$numeratorUnits(_this), newNumerators) && B.C_ListEquality.equals$2(0, _this.get$denominatorUnits(_this), newDenominators))
        return _this._number$_value;
      otherHasUnits = newNumerators.length !== 0 || newDenominators.length !== 0;
      if (coerceUnitless)
        t1 = !_this.get$hasUnits() || !otherHasUnits;
      else
        t1 = false;
      if (t1)
        return _this._number$_value;
      _compatibilityException = new A.SassNumber__coerceOrConvertValue__compatibilityException(_this, other, otherName, otherHasUnits, $name, newNumerators, newDenominators);
      _box_0.value = _this._number$_value;
      t1 = _this.get$numeratorUnits(_this);
      oldNumerators = A._setArrayType(t1.slice(0), A._arrayInstanceType(t1));
      for (t1 = newNumerators.length, _i = 0; _i < newNumerators.length; newNumerators.length === t1 || (0, A.throwConcurrentModificationError)(newNumerators), ++_i)
        A.removeFirstWhere(oldNumerators, new A.SassNumber__coerceOrConvertValue_closure(_box_0, newNumerators[_i]), new A.SassNumber__coerceOrConvertValue_closure0(_compatibilityException));
      t1 = _this.get$denominatorUnits(_this);
      oldDenominators = A._setArrayType(t1.slice(0), A._arrayInstanceType(t1));
      for (t1 = newDenominators.length, _i = 0; _i < newDenominators.length; newDenominators.length === t1 || (0, A.throwConcurrentModificationError)(newDenominators), ++_i)
        A.removeFirstWhere(oldDenominators, new A.SassNumber__coerceOrConvertValue_closure1(_box_0, newDenominators[_i]), new A.SassNumber__coerceOrConvertValue_closure2(_compatibilityException));
      if (oldNumerators.length !== 0 || oldDenominators.length !== 0)
        throw A.wrapException(_compatibilityException.call$0());
      return _box_0.value;
    },
    _coerceOrConvertValue$4$coerceUnitless$name(newNumerators, newDenominators, coerceUnitless, $name) {
      return this._coerceOrConvertValue$6$coerceUnitless$name$other$otherName(newNumerators, newDenominators, coerceUnitless, $name, null, null);
    },
    isComparableTo$1(other) {
      var exception;
      if (!this.get$hasUnits() || !other.get$hasUnits())
        return true;
      try {
        this.greaterThan$1(other);
        return true;
      } catch (exception) {
        if (A.unwrapException(exception) instanceof A.SassScriptException)
          return false;
        else
          throw exception;
      }
    },
    greaterThan$1(other) {
      if (other instanceof A.SassNumber)
        return this._coerceUnits$2(other, A.number0__fuzzyGreaterThan$closure()) ? B.SassBoolean_true : B.SassBoolean_false;
      throw A.wrapException(A.SassScriptException$('Undefined operation "' + this.toString$0(0) + " > " + other.toString$0(0) + '".'));
    },
    greaterThanOrEquals$1(other) {
      if (other instanceof A.SassNumber)
        return this._coerceUnits$2(other, A.number0__fuzzyGreaterThanOrEquals$closure()) ? B.SassBoolean_true : B.SassBoolean_false;
      throw A.wrapException(A.SassScriptException$('Undefined operation "' + this.toString$0(0) + " >= " + other.toString$0(0) + '".'));
    },
    lessThan$1(other) {
      if (other instanceof A.SassNumber)
        return this._coerceUnits$2(other, A.number0__fuzzyLessThan$closure()) ? B.SassBoolean_true : B.SassBoolean_false;
      throw A.wrapException(A.SassScriptException$('Undefined operation "' + this.toString$0(0) + " < " + other.toString$0(0) + '".'));
    },
    lessThanOrEquals$1(other) {
      if (other instanceof A.SassNumber)
        return this._coerceUnits$2(other, A.number0__fuzzyLessThanOrEquals$closure()) ? B.SassBoolean_true : B.SassBoolean_false;
      throw A.wrapException(A.SassScriptException$('Undefined operation "' + this.toString$0(0) + " <= " + other.toString$0(0) + '".'));
    },
    modulo$1(other) {
      var _this = this;
      if (other instanceof A.SassNumber)
        return _this.withValue$1(_this._coerceUnits$2(other, _this.get$moduloLikeSass()));
      throw A.wrapException(A.SassScriptException$('Undefined operation "' + _this.toString$0(0) + " % " + other.toString$0(0) + '".'));
    },
    moduloLikeSass$2(num1, num2) {
      var result;
      if (num2 > 0)
        return B.JSNumber_methods.$mod(num1, num2);
      if (num2 === 0)
        return 0 / 0;
      result = B.JSNumber_methods.$mod(num1, num2);
      return result === 0 ? 0 : result + num2;
    },
    plus$1(other) {
      var _this = this;
      if (other instanceof A.SassNumber)
        return _this.withValue$1(_this._coerceUnits$2(other, new A.SassNumber_plus_closure()));
      if (!(other instanceof A.SassColor))
        return _this.super$Value$plus(other);
      throw A.wrapException(A.SassScriptException$('Undefined operation "' + _this.toString$0(0) + " + " + other.toString$0(0) + '".'));
    },
    minus$1(other) {
      var _this = this;
      if (other instanceof A.SassNumber)
        return _this.withValue$1(_this._coerceUnits$2(other, new A.SassNumber_minus_closure()));
      if (!(other instanceof A.SassColor))
        return _this.super$Value$minus(other);
      throw A.wrapException(A.SassScriptException$('Undefined operation "' + _this.toString$0(0) + " - " + other.toString$0(0) + '".'));
    },
    times$1(other) {
      var _this = this;
      if (other instanceof A.SassNumber) {
        if (!other.get$hasUnits())
          return _this.withValue$1(_this._number$_value * other._number$_value);
        return _this.multiplyUnits$3(_this._number$_value * other._number$_value, other.get$numeratorUnits(other), other.get$denominatorUnits(other));
      }
      throw A.wrapException(A.SassScriptException$('Undefined operation "' + _this.toString$0(0) + " * " + other.toString$0(0) + '".'));
    },
    dividedBy$1(other) {
      var _this = this;
      if (other instanceof A.SassNumber) {
        if (!other.get$hasUnits())
          return _this.withValue$1(_this._number$_value / other._number$_value);
        return _this.multiplyUnits$3(_this._number$_value / other._number$_value, other.get$denominatorUnits(other), other.get$numeratorUnits(other));
      }
      return _this.super$Value$dividedBy(other);
    },
    unaryPlus$0() {
      return this;
    },
    _coerceUnits$1$2(other, operation) {
      var t1, exception;
      try {
        t1 = operation.call$2(this._number$_value, other.coerceValueToMatch$1(this));
        return t1;
      } catch (exception) {
        if (A.unwrapException(exception) instanceof A.SassScriptException) {
          this.coerceValueToMatch$1(other);
          throw exception;
        } else
          throw exception;
      }
    },
    _coerceUnits$2(other, operation) {
      return this._coerceUnits$1$2(other, operation, type$.dynamic);
    },
    multiplyUnits$3(value, otherNumerators, otherDenominators) {
      var newNumerators, mutableOtherDenominators, t1, t2, _i, numerator, mutableDenominatorUnits, _this = this, _box_0 = {};
      _box_0.value = value;
      if (_this.get$numeratorUnits(_this).length === 0) {
        if (otherDenominators.length === 0 && !_this._areAnyConvertible$2(_this.get$denominatorUnits(_this), otherNumerators))
          return A.SassNumber_SassNumber$withUnits(value, _this.get$denominatorUnits(_this), otherNumerators);
        else if (_this.get$denominatorUnits(_this).length === 0)
          return A.SassNumber_SassNumber$withUnits(value, otherDenominators, otherNumerators);
      } else if (otherNumerators.length === 0)
        if (otherDenominators.length === 0)
          return A.SassNumber_SassNumber$withUnits(value, otherDenominators, _this.get$numeratorUnits(_this));
        else if (_this.get$denominatorUnits(_this).length === 0 && !_this._areAnyConvertible$2(_this.get$numeratorUnits(_this), otherDenominators))
          return A.SassNumber_SassNumber$withUnits(value, otherDenominators, _this.get$numeratorUnits(_this));
      newNumerators = A._setArrayType([], type$.JSArray_String);
      mutableOtherDenominators = A._setArrayType(otherDenominators.slice(0), A._arrayInstanceType(otherDenominators));
      for (t1 = _this.get$numeratorUnits(_this), t2 = t1.length, _i = 0; _i < t2; ++_i) {
        numerator = t1[_i];
        A.removeFirstWhere(mutableOtherDenominators, new A.SassNumber_multiplyUnits_closure(_box_0, numerator), new A.SassNumber_multiplyUnits_closure0(newNumerators, numerator));
      }
      t1 = _this.get$denominatorUnits(_this);
      mutableDenominatorUnits = A._setArrayType(t1.slice(0), A._arrayInstanceType(t1));
      for (t1 = otherNumerators.length, _i = 0; _i < t1; ++_i) {
        numerator = otherNumerators[_i];
        A.removeFirstWhere(mutableDenominatorUnits, new A.SassNumber_multiplyUnits_closure1(_box_0, numerator), new A.SassNumber_multiplyUnits_closure2(newNumerators, numerator));
      }
      t1 = _box_0.value;
      B.JSArray_methods.addAll$1(mutableDenominatorUnits, mutableOtherDenominators);
      return A.SassNumber_SassNumber$withUnits(t1, mutableDenominatorUnits, newNumerators);
    },
    _areAnyConvertible$2(units1, units2) {
      return B.JSArray_methods.any$1(units1, new A.SassNumber__areAnyConvertible_closure(units2));
    },
    _unitString$2(numerators, denominators) {
      var t1;
      if (numerators.length === 0) {
        t1 = denominators.length;
        if (t1 === 0)
          return "no units";
        if (t1 === 1)
          return J.$add$ansx(B.JSArray_methods.get$single(denominators), "^-1");
        return "(" + B.JSArray_methods.join$1(denominators, "*") + ")^-1";
      }
      if (denominators.length === 0)
        return B.JSArray_methods.join$1(numerators, "*");
      return B.JSArray_methods.join$1(numerators, "*") + "/" + B.JSArray_methods.join$1(denominators, "*");
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      if (other instanceof A.SassNumber) {
        if (_this.get$numeratorUnits(_this).length !== other.get$numeratorUnits(other).length || _this.get$denominatorUnits(_this).length !== other.get$denominatorUnits(other).length)
          return false;
        if (!_this.get$hasUnits())
          return Math.abs(_this._number$_value - other._number$_value) < $.$get$epsilon();
        if (!B.C_ListEquality.equals$2(0, _this._canonicalizeUnitList$1(_this.get$numeratorUnits(_this)), _this._canonicalizeUnitList$1(other.get$numeratorUnits(other))) || !B.C_ListEquality.equals$2(0, _this._canonicalizeUnitList$1(_this.get$denominatorUnits(_this)), _this._canonicalizeUnitList$1(other.get$denominatorUnits(other))))
          return false;
        return Math.abs(_this._number$_value * _this._canonicalMultiplier$1(_this.get$numeratorUnits(_this)) / _this._canonicalMultiplier$1(_this.get$denominatorUnits(_this)) - other._number$_value * _this._canonicalMultiplier$1(other.get$numeratorUnits(other)) / _this._canonicalMultiplier$1(other.get$denominatorUnits(other))) < $.$get$epsilon();
      } else
        return false;
    },
    get$hashCode(_) {
      var _this = this,
        t1 = _this.hashCache;
      return t1 == null ? _this.hashCache = A.fuzzyHashCode(_this._number$_value * _this._canonicalMultiplier$1(_this.get$numeratorUnits(_this)) / _this._canonicalMultiplier$1(_this.get$denominatorUnits(_this))) : t1;
    },
    _canonicalizeUnitList$1(units) {
      var type,
        t1 = units.length;
      if (t1 === 0)
        return units;
      if (t1 === 1) {
        type = $.$get$_typesByUnit().$index(0, B.JSArray_methods.get$first(units));
        if (type == null)
          t1 = units;
        else {
          t1 = B.Map_U8AHF.$index(0, type);
          t1.toString;
          t1 = A._setArrayType([B.JSArray_methods.get$first(t1)], type$.JSArray_String);
        }
        return t1;
      }
      t1 = A._arrayInstanceType(units)._eval$1("MappedListIterable<1,String>");
      t1 = A.List_List$of(new A.MappedListIterable(units, new A.SassNumber__canonicalizeUnitList_closure(), t1), true, t1._eval$1("ListIterable.E"));
      B.JSArray_methods.sort$0(t1);
      return t1;
    },
    _canonicalMultiplier$1(units) {
      return B.JSArray_methods.fold$2(units, 1, new A.SassNumber__canonicalMultiplier_closure(this));
    },
    canonicalMultiplierForUnit$1(unit) {
      var t1,
        innerMap = B.Map_K2BWj.$index(0, unit);
      if (innerMap == null)
        t1 = 1;
      else {
        t1 = innerMap.get$values(innerMap);
        t1 = 1 / t1.get$first(t1);
      }
      return t1;
    },
    _number$_exception$2(message, $name) {
      return new A.SassScriptException($name == null ? message : "$" + $name + ": " + message);
    }
  };
  A.SassNumber__coerceOrConvertValue__compatibilityException.prototype = {
    call$0() {
      var t2, t3, message, t4, type, unit, _this = this,
        t1 = _this.other;
      if (t1 != null) {
        t2 = _this.$this;
        t3 = t2.toString$0(0) + " and";
        message = new A.StringBuffer(t3);
        t4 = _this.otherName;
        if (t4 != null)
          t3 = message._contents = t3 + (" $" + t4 + ":");
        t1 = t3 + (" " + t1.toString$0(0) + " have incompatible units");
        message._contents = t1;
        if (!t2.get$hasUnits() || !_this.otherHasUnits)
          message._contents = t1 + " (one has units and the other doesn't)";
        t1 = message.toString$0(0) + ".";
        t2 = _this.name;
        return new A.SassScriptException(t2 == null ? t1 : "$" + t2 + ": " + t1);
      } else if (!_this.otherHasUnits) {
        t1 = "Expected " + _this.$this.toString$0(0) + " to have no units.";
        t2 = _this.name;
        return new A.SassScriptException(t2 == null ? t1 : "$" + t2 + ": " + t1);
      } else {
        t1 = _this.newNumerators;
        if (t1.length === 1 && _this.newDenominators.length === 0) {
          type = $.$get$_typesByUnit().$index(0, B.JSArray_methods.get$first(t1));
          if (type != null) {
            t1 = _this.$this.toString$0(0);
            t2 = B.JSArray_methods.contains$1(A._setArrayType([97, 101, 105, 111, 117], type$.JSArray_int), B.JSString_methods._codeUnitAt$1(type, 0)) ? "an " + type : "a " + type;
            t3 = B.Map_U8AHF.$index(0, type);
            t3.toString;
            t3 = "Expected " + t1 + " to have " + t2 + " unit (" + B.JSArray_methods.join$1(t3, ", ") + ").";
            t2 = _this.name;
            return new A.SassScriptException(t2 == null ? t3 : "$" + t2 + ": " + t3);
          }
        }
        t2 = _this.newDenominators;
        unit = A.pluralize("unit", t1.length + t2.length, null);
        t3 = _this.$this;
        t2 = "Expected " + t3.toString$0(0) + " to have " + unit + " " + t3._unitString$2(t1, t2) + ".";
        t1 = _this.name;
        return new A.SassScriptException(t1 == null ? t2 : "$" + t1 + ": " + t2);
      }
    },
    $signature: 392
  };
  A.SassNumber__coerceOrConvertValue_closure.prototype = {
    call$1(oldNumerator) {
      var factor = A.conversionFactor(this.newNumerator, oldNumerator);
      if (factor == null)
        return false;
      this._box_0.value *= factor;
      return true;
    },
    $signature: 6
  };
  A.SassNumber__coerceOrConvertValue_closure0.prototype = {
    call$0() {
      return A.throwExpression(this._compatibilityException.call$0());
    },
    $signature: 0
  };
  A.SassNumber__coerceOrConvertValue_closure1.prototype = {
    call$1(oldDenominator) {
      var factor = A.conversionFactor(this.newDenominator, oldDenominator);
      if (factor == null)
        return false;
      this._box_0.value /= factor;
      return true;
    },
    $signature: 6
  };
  A.SassNumber__coerceOrConvertValue_closure2.prototype = {
    call$0() {
      return A.throwExpression(this._compatibilityException.call$0());
    },
    $signature: 0
  };
  A.SassNumber_plus_closure.prototype = {
    call$2(num1, num2) {
      return num1 + num2;
    },
    $signature: 54
  };
  A.SassNumber_minus_closure.prototype = {
    call$2(num1, num2) {
      return num1 - num2;
    },
    $signature: 54
  };
  A.SassNumber_multiplyUnits_closure.prototype = {
    call$1(denominator) {
      var factor = A.conversionFactor(this.numerator, denominator);
      if (factor == null)
        return false;
      this._box_0.value /= factor;
      return true;
    },
    $signature: 6
  };
  A.SassNumber_multiplyUnits_closure0.prototype = {
    call$0() {
      return this.newNumerators.push(this.numerator);
    },
    $signature: 0
  };
  A.SassNumber_multiplyUnits_closure1.prototype = {
    call$1(denominator) {
      var factor = A.conversionFactor(this.numerator, denominator);
      if (factor == null)
        return false;
      this._box_0.value /= factor;
      return true;
    },
    $signature: 6
  };
  A.SassNumber_multiplyUnits_closure2.prototype = {
    call$0() {
      return this.newNumerators.push(this.numerator);
    },
    $signature: 0
  };
  A.SassNumber__areAnyConvertible_closure.prototype = {
    call$1(unit1) {
      var innerMap = B.Map_K2BWj.$index(0, unit1);
      if (innerMap == null)
        return B.JSArray_methods.contains$1(this.units2, unit1);
      return B.JSArray_methods.any$1(this.units2, innerMap.get$containsKey());
    },
    $signature: 6
  };
  A.SassNumber__canonicalizeUnitList_closure.prototype = {
    call$1(unit) {
      var t1,
        type = $.$get$_typesByUnit().$index(0, unit);
      if (type == null)
        t1 = unit;
      else {
        t1 = B.Map_U8AHF.$index(0, type);
        t1.toString;
        t1 = B.JSArray_methods.get$first(t1);
      }
      return t1;
    },
    $signature: 5
  };
  A.SassNumber__canonicalMultiplier_closure.prototype = {
    call$2(multiplier, unit) {
      return multiplier * this.$this.canonicalMultiplierForUnit$1(unit);
    },
    $signature: 167
  };
  A.ComplexSassNumber.prototype = {
    get$numeratorUnits(_) {
      return this._numeratorUnits;
    },
    get$denominatorUnits(_) {
      return this._denominatorUnits;
    },
    get$hasUnits() {
      return true;
    },
    hasUnit$1(unit) {
      return false;
    },
    compatibleWithUnit$1(unit) {
      return false;
    },
    hasPossiblyCompatibleUnits$1(other) {
      throw A.wrapException(A.UnimplementedError$(string$.Comple));
    },
    withValue$1(value) {
      return new A.ComplexSassNumber(this._numeratorUnits, this._denominatorUnits, value, null);
    },
    withSlash$2(numerator, denominator) {
      return new A.ComplexSassNumber(this._numeratorUnits, this._denominatorUnits, this._number$_value, new A.Tuple2(numerator, denominator, type$.Tuple2_SassNumber_SassNumber));
    }
  };
  A.SingleUnitSassNumber.prototype = {
    get$numeratorUnits(_) {
      return A.List_List$unmodifiable([this._unit], type$.String);
    },
    get$denominatorUnits(_) {
      return B.List_empty;
    },
    get$hasUnits() {
      return true;
    },
    withValue$1(value) {
      return new A.SingleUnitSassNumber(this._unit, value, null);
    },
    withSlash$2(numerator, denominator) {
      return new A.SingleUnitSassNumber(this._unit, this._number$_value, new A.Tuple2(numerator, denominator, type$.Tuple2_SassNumber_SassNumber));
    },
    hasUnit$1(unit) {
      return unit === this._unit;
    },
    hasCompatibleUnits$1(other) {
      return other instanceof A.SingleUnitSassNumber && A.conversionFactor(this._unit, other._unit) != null;
    },
    hasPossiblyCompatibleUnits$1(other) {
      var t1, knownCompatibilities, otherUnit;
      if (!(other instanceof A.SingleUnitSassNumber))
        return false;
      t1 = $.$get$_knownCompatibilitiesByUnit();
      knownCompatibilities = t1.$index(0, this._unit.toLowerCase());
      if (knownCompatibilities == null)
        return true;
      otherUnit = other._unit.toLowerCase();
      return knownCompatibilities.contains$1(0, otherUnit) || !t1.containsKey$1(otherUnit);
    },
    compatibleWithUnit$1(unit) {
      return A.conversionFactor(this._unit, unit) != null;
    },
    coerceValueToMatch$1(other) {
      var t1 = other instanceof A.SingleUnitSassNumber ? this._coerceValueToUnit$1(other._unit) : null;
      return t1 == null ? this.super$SassNumber$coerceValueToMatch(other, null, null) : t1;
    },
    convertValueToMatch$3(other, $name, otherName) {
      var t1 = other instanceof A.SingleUnitSassNumber ? this._coerceValueToUnit$1(other._unit) : null;
      return t1 == null ? this.super$SassNumber$convertValueToMatch(other, $name, otherName) : t1;
    },
    coerce$2(newNumerators, newDenominators) {
      var t1 = newNumerators.length === 1 && newDenominators.length === 0 ? this._coerceToUnit$1(newNumerators[0]) : null;
      return t1 == null ? this.super$SassNumber$coerce(newNumerators, newDenominators, null) : t1;
    },
    coerceValue$3(newNumerators, newDenominators, $name) {
      var t1 = newNumerators.length === 1 && newDenominators.length === 0 ? this._coerceValueToUnit$1(newNumerators[0]) : null;
      return t1 == null ? this.super$SassNumber$coerceValue(newNumerators, newDenominators, $name) : t1;
    },
    coerceValueToUnit$2(unit, $name) {
      var t1 = this._coerceValueToUnit$1(unit);
      return t1 == null ? this.super$SassNumber$coerceValueToUnit(unit, $name) : t1;
    },
    _coerceToUnit$1(unit) {
      var t1 = this._unit;
      if (t1 === unit)
        return this;
      return A.NullableExtension_andThen(A.conversionFactor(unit, t1), new A.SingleUnitSassNumber__coerceToUnit_closure(this, unit));
    },
    _coerceValueToUnit$1(unit) {
      return A.NullableExtension_andThen(A.conversionFactor(unit, this._unit), new A.SingleUnitSassNumber__coerceValueToUnit_closure(this));
    },
    multiplyUnits$3(value, otherNumerators, otherDenominators) {
      var mutableOtherDenominators, t1 = {};
      t1.value = value;
      t1.newNumerators = otherNumerators;
      mutableOtherDenominators = A._setArrayType(otherDenominators.slice(0), A._arrayInstanceType(otherDenominators));
      A.removeFirstWhere(mutableOtherDenominators, new A.SingleUnitSassNumber_multiplyUnits_closure(t1, this), new A.SingleUnitSassNumber_multiplyUnits_closure0(t1, this));
      return A.SassNumber_SassNumber$withUnits(t1.value, mutableOtherDenominators, t1.newNumerators);
    },
    unaryMinus$0() {
      return new A.SingleUnitSassNumber(this._unit, -this._number$_value, null);
    },
    $eq(_, other) {
      var factor;
      if (other == null)
        return false;
      if (other instanceof A.SingleUnitSassNumber) {
        factor = A.conversionFactor(other._unit, this._unit);
        return factor != null && Math.abs(this._number$_value * factor - other._number$_value) < $.$get$epsilon();
      } else
        return false;
    },
    get$hashCode(_) {
      var _this = this,
        t1 = _this.hashCache;
      return t1 == null ? _this.hashCache = A.fuzzyHashCode(_this._number$_value * _this.canonicalMultiplierForUnit$1(_this._unit)) : t1;
    }
  };
  A.SingleUnitSassNumber__coerceToUnit_closure.prototype = {
    call$1(factor) {
      return new A.SingleUnitSassNumber(this.unit, this.$this._number$_value * factor, null);
    },
    $signature: 396
  };
  A.SingleUnitSassNumber__coerceValueToUnit_closure.prototype = {
    call$1(factor) {
      return this.$this._number$_value * factor;
    },
    $signature: 73
  };
  A.SingleUnitSassNumber_multiplyUnits_closure.prototype = {
    call$1(denominator) {
      var factor = A.conversionFactor(denominator, this.$this._unit);
      if (factor == null)
        return false;
      this._box_0.value *= factor;
      return true;
    },
    $signature: 6
  };
  A.SingleUnitSassNumber_multiplyUnits_closure0.prototype = {
    call$0() {
      var t1 = A._setArrayType([this.$this._unit], type$.JSArray_String),
        t2 = this._box_0;
      B.JSArray_methods.addAll$1(t1, t2.newNumerators);
      t2.newNumerators = t1;
    },
    $signature: 0
  };
  A.UnitlessSassNumber.prototype = {
    get$numeratorUnits(_) {
      return B.List_empty;
    },
    get$denominatorUnits(_) {
      return B.List_empty;
    },
    get$hasUnits() {
      return false;
    },
    withValue$1(value) {
      return new A.UnitlessSassNumber(value, null);
    },
    withSlash$2(numerator, denominator) {
      return new A.UnitlessSassNumber(this._number$_value, new A.Tuple2(numerator, denominator, type$.Tuple2_SassNumber_SassNumber));
    },
    hasUnit$1(unit) {
      return false;
    },
    hasCompatibleUnits$1(other) {
      return other instanceof A.UnitlessSassNumber;
    },
    hasPossiblyCompatibleUnits$1(other) {
      return other instanceof A.UnitlessSassNumber;
    },
    compatibleWithUnit$1(unit) {
      return true;
    },
    coerceValueToMatch$1(other) {
      return this._number$_value;
    },
    convertValueToMatch$3(other, $name, otherName) {
      return other.get$hasUnits() ? this.super$SassNumber$convertValueToMatch(other, $name, otherName) : this._number$_value;
    },
    coerce$2(newNumerators, newDenominators) {
      return A.SassNumber_SassNumber$withUnits(this._number$_value, newDenominators, newNumerators);
    },
    coerceValue$3(newNumerators, newDenominators, $name) {
      return this._number$_value;
    },
    coerceValueToUnit$2(unit, $name) {
      return this._number$_value;
    },
    greaterThan$1(other) {
      var t1, t2;
      if (other instanceof A.SassNumber) {
        t1 = this._number$_value;
        t2 = other._number$_value;
        return t1 > t2 && !(Math.abs(t1 - t2) < $.$get$epsilon()) ? B.SassBoolean_true : B.SassBoolean_false;
      }
      return this.super$SassNumber$greaterThan(other);
    },
    greaterThanOrEquals$1(other) {
      var t1, t2;
      if (other instanceof A.SassNumber) {
        t1 = this._number$_value;
        t2 = other._number$_value;
        return t1 > t2 || Math.abs(t1 - t2) < $.$get$epsilon() ? B.SassBoolean_true : B.SassBoolean_false;
      }
      return this.super$SassNumber$greaterThanOrEquals(other);
    },
    lessThan$1(other) {
      var t1, t2;
      if (other instanceof A.SassNumber) {
        t1 = this._number$_value;
        t2 = other._number$_value;
        return t1 < t2 && !(Math.abs(t1 - t2) < $.$get$epsilon()) ? B.SassBoolean_true : B.SassBoolean_false;
      }
      return this.super$SassNumber$lessThan(other);
    },
    lessThanOrEquals$1(other) {
      var t1, t2;
      if (other instanceof A.SassNumber) {
        t1 = this._number$_value;
        t2 = other._number$_value;
        return t1 < t2 || Math.abs(t1 - t2) < $.$get$epsilon() ? B.SassBoolean_true : B.SassBoolean_false;
      }
      return this.super$SassNumber$lessThanOrEquals(other);
    },
    modulo$1(other) {
      if (other instanceof A.SassNumber)
        return other.withValue$1(this.moduloLikeSass$2(this._number$_value, other._number$_value));
      return this.super$SassNumber$modulo(other);
    },
    plus$1(other) {
      if (other instanceof A.SassNumber)
        return other.withValue$1(this._number$_value + other._number$_value);
      return this.super$SassNumber$plus(other);
    },
    minus$1(other) {
      if (other instanceof A.SassNumber)
        return other.withValue$1(this._number$_value - other._number$_value);
      return this.super$SassNumber$minus(other);
    },
    times$1(other) {
      if (other instanceof A.SassNumber)
        return other.withValue$1(this._number$_value * other._number$_value);
      return this.super$SassNumber$times(other);
    },
    dividedBy$1(other) {
      var t1, t2;
      if (other instanceof A.SassNumber) {
        t1 = this._number$_value / other._number$_value;
        if (other.get$hasUnits()) {
          t2 = other.get$denominatorUnits(other);
          t2 = A.SassNumber_SassNumber$withUnits(t1, other.get$numeratorUnits(other), t2);
          t1 = t2;
        } else
          t1 = new A.UnitlessSassNumber(t1, null);
        return t1;
      }
      return this.super$SassNumber$dividedBy(other);
    },
    unaryMinus$0() {
      return new A.UnitlessSassNumber(-this._number$_value, null);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.UnitlessSassNumber && Math.abs(this._number$_value - other._number$_value) < $.$get$epsilon();
    },
    get$hashCode(_) {
      var t1 = this.hashCache;
      return t1 == null ? this.hashCache = A.fuzzyHashCode(this._number$_value) : t1;
    }
  };
  A.SassString.prototype = {
    get$_sassLength() {
      var t1, result, _this = this,
        value = _this.__SassString__sassLength;
      if (value === $) {
        t1 = new A.Runes(_this._string$_text);
        result = t1.get$length(t1);
        A._lateInitializeOnceCheck(_this.__SassString__sassLength, "_sassLength");
        _this.__SassString__sassLength = result;
        value = result;
      }
      return value;
    },
    get$isSpecialNumber() {
      var t1, t2;
      if (this._hasQuotes)
        return false;
      t1 = this._string$_text;
      if (t1.length < 6)
        return false;
      t2 = B.JSString_methods._codeUnitAt$1(t1, 0) | 32;
      if (t2 === 99) {
        t2 = B.JSString_methods._codeUnitAt$1(t1, 1) | 32;
        if (t2 === 108) {
          if ((B.JSString_methods._codeUnitAt$1(t1, 2) | 32) !== 97)
            return false;
          if ((B.JSString_methods._codeUnitAt$1(t1, 3) | 32) !== 109)
            return false;
          if ((B.JSString_methods._codeUnitAt$1(t1, 4) | 32) !== 112)
            return false;
          return B.JSString_methods._codeUnitAt$1(t1, 5) === 40;
        } else if (t2 === 97) {
          if ((B.JSString_methods._codeUnitAt$1(t1, 2) | 32) !== 108)
            return false;
          if ((B.JSString_methods._codeUnitAt$1(t1, 3) | 32) !== 99)
            return false;
          return B.JSString_methods._codeUnitAt$1(t1, 4) === 40;
        } else
          return false;
      } else if (t2 === 118) {
        if ((B.JSString_methods._codeUnitAt$1(t1, 1) | 32) !== 97)
          return false;
        if ((B.JSString_methods._codeUnitAt$1(t1, 2) | 32) !== 114)
          return false;
        return B.JSString_methods._codeUnitAt$1(t1, 3) === 40;
      } else if (t2 === 101) {
        if ((B.JSString_methods._codeUnitAt$1(t1, 1) | 32) !== 110)
          return false;
        if ((B.JSString_methods._codeUnitAt$1(t1, 2) | 32) !== 118)
          return false;
        return B.JSString_methods._codeUnitAt$1(t1, 3) === 40;
      } else if (t2 === 109) {
        t2 = B.JSString_methods._codeUnitAt$1(t1, 1) | 32;
        if (t2 === 97) {
          if ((B.JSString_methods._codeUnitAt$1(t1, 2) | 32) !== 120)
            return false;
          return B.JSString_methods._codeUnitAt$1(t1, 3) === 40;
        } else if (t2 === 105) {
          if ((B.JSString_methods._codeUnitAt$1(t1, 2) | 32) !== 110)
            return false;
          return B.JSString_methods._codeUnitAt$1(t1, 3) === 40;
        } else
          return false;
      } else
        return false;
    },
    get$isVar() {
      if (this._hasQuotes)
        return false;
      var t1 = this._string$_text;
      if (t1.length < 8)
        return false;
      return (B.JSString_methods._codeUnitAt$1(t1, 0) | 32) === 118 && (B.JSString_methods._codeUnitAt$1(t1, 1) | 32) === 97 && (B.JSString_methods._codeUnitAt$1(t1, 2) | 32) === 114 && B.JSString_methods._codeUnitAt$1(t1, 3) === 40;
    },
    get$isBlank() {
      return !this._hasQuotes && this._string$_text.length === 0;
    },
    accept$1$1(visitor) {
      var t1 = visitor._quote && this._hasQuotes,
        t2 = this._string$_text;
      if (t1)
        visitor._visitQuotedString$1(t2);
      else
        visitor._visitUnquotedString$1(t2);
      return null;
    },
    accept$1(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    assertString$1($name) {
      return this;
    },
    plus$1(other) {
      var t1 = this._string$_text,
        t2 = this._hasQuotes;
      if (other instanceof A.SassString)
        return new A.SassString(t1 + other._string$_text, t2);
      else
        return new A.SassString(t1 + A.serializeValue(other, false, true), t2);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.SassString && this._string$_text === other._string$_text;
    },
    get$hashCode(_) {
      var t1 = this._hashCache;
      return t1 == null ? this._hashCache = B.JSString_methods.get$hashCode(this._string$_text) : t1;
    }
  };
  A._EvaluateVisitor0.prototype = {
    _EvaluateVisitor$6$functions$importCache$logger$nodeImporter$quietDeps$sourceMap0(functions, importCache, logger, nodeImporter, quietDeps, sourceMap) {
      var t2, metaModule, t3, _i, module, $function, t4, _this = this,
        _s20_ = "$name, $module: null",
        _s9_ = "sass:meta",
        t1 = type$.JSArray_AsyncBuiltInCallable,
        metaFunctions = A._setArrayType([A.BuiltInCallable$function("global-variable-exists", _s20_, new A._EvaluateVisitor_closure9(_this), _s9_), A.BuiltInCallable$function("variable-exists", "$name", new A._EvaluateVisitor_closure10(_this), _s9_), A.BuiltInCallable$function("function-exists", _s20_, new A._EvaluateVisitor_closure11(_this), _s9_), A.BuiltInCallable$function("mixin-exists", _s20_, new A._EvaluateVisitor_closure12(_this), _s9_), A.BuiltInCallable$function("content-exists", "", new A._EvaluateVisitor_closure13(_this), _s9_), A.BuiltInCallable$function("module-variables", "$module", new A._EvaluateVisitor_closure14(_this), _s9_), A.BuiltInCallable$function("module-functions", "$module", new A._EvaluateVisitor_closure15(_this), _s9_), A.BuiltInCallable$function("get-function", "$name, $css: false, $module: null", new A._EvaluateVisitor_closure16(_this), _s9_), new A.AsyncBuiltInCallable("call", A.ScssParser$("@function call($function, $args...) {", null, _s9_).parseArgumentDeclaration$0(), new A._EvaluateVisitor_closure17(_this))], t1),
        metaMixins = A._setArrayType([A.AsyncBuiltInCallable$mixin("load-css", "$url, $with: null", new A._EvaluateVisitor_closure18(_this), _s9_)], t1);
      t1 = type$.AsyncBuiltInCallable;
      t2 = A.List_List$of($.$get$global(), true, t1);
      B.JSArray_methods.addAll$1(t2, $.$get$local());
      B.JSArray_methods.addAll$1(t2, metaFunctions);
      metaModule = A.BuiltInModule$("meta", t2, metaMixins, null, t1);
      for (t1 = A.List_List$of($.$get$coreModules(), true, type$.BuiltInModule_AsyncBuiltInCallable), t1.push(metaModule), t2 = t1.length, t3 = _this._async_evaluate$_builtInModules, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        module = t1[_i];
        t3.$indexSet(0, module.url, module);
      }
      t1 = A._setArrayType([], type$.JSArray_AsyncCallable);
      B.JSArray_methods.addAll$1(t1, $.$get$globalFunctions());
      B.JSArray_methods.addAll$1(t1, metaFunctions);
      for (t2 = t1.length, t3 = _this._async_evaluate$_builtInFunctions, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        $function = t1[_i];
        t4 = J.get$name$x($function);
        t3.$indexSet(0, A.stringReplaceAllUnchecked(t4, "_", "-"), $function);
      }
    },
    run$2(_, importer, node) {
      return this.run$body$_EvaluateVisitor(0, importer, node);
    },
    run$body$_EvaluateVisitor(_, importer, node) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.EvaluateResult),
        $async$returnValue, $async$self = this, t1;
      var $async$run$2 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = type$.nullable_Object;
              $async$returnValue = A.runZoned(new A._EvaluateVisitor_run_closure0($async$self, node, importer), A.LinkedHashMap_LinkedHashMap$_literal([B.Symbol__evaluationContext, new A._EvaluationContext0($async$self, node)], t1, t1), type$.FutureOr_EvaluateResult);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$run$2, $async$completer);
    },
    _async_evaluate$_assertInModule$1$2(value, $name) {
      if (value != null)
        return value;
      throw A.wrapException(A.StateError$("Can't access " + $name + " outside of a module."));
    },
    _async_evaluate$_assertInModule$2(value, $name) {
      return this._async_evaluate$_assertInModule$1$2(value, $name, type$.dynamic);
    },
    _async_evaluate$_loadModule$7$baseUrl$configuration$namesInErrors(url, stackFrame, nodeWithSpan, callback, baseUrl, configuration, namesInErrors) {
      return this._loadModule$body$_EvaluateVisitor(url, stackFrame, nodeWithSpan, callback, baseUrl, configuration, namesInErrors);
    },
    _async_evaluate$_loadModule$5$configuration(url, stackFrame, nodeWithSpan, callback, configuration) {
      return this._async_evaluate$_loadModule$7$baseUrl$configuration$namesInErrors(url, stackFrame, nodeWithSpan, callback, null, configuration, false);
    },
    _async_evaluate$_loadModule$4(url, stackFrame, nodeWithSpan, callback) {
      return this._async_evaluate$_loadModule$7$baseUrl$configuration$namesInErrors(url, stackFrame, nodeWithSpan, callback, null, null, false);
    },
    _loadModule$body$_EvaluateVisitor(url, stackFrame, nodeWithSpan, callback, baseUrl, configuration, namesInErrors) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1, t2, builtInModule;
      var $async$_async_evaluate$_loadModule$7$baseUrl$configuration$namesInErrors = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              builtInModule = $async$self._async_evaluate$_builtInModules.$index(0, url);
              $async$goto = builtInModule != null ? 3 : 4;
              break;
            case 3:
              // then
              if (configuration instanceof A.ExplicitConfiguration) {
                t1 = namesInErrors ? "Built-in module " + url.toString$0(0) + " can't be configured." : "Built-in modules can't be configured.";
                t2 = configuration.nodeWithSpan;
                throw A.wrapException($async$self._async_evaluate$_exception$2(t1, t2.get$span(t2)));
              }
              $async$goto = 5;
              return A._asyncAwait($async$self._addExceptionSpanAsync$1$2(nodeWithSpan, new A._EvaluateVisitor__loadModule_closure1(callback, builtInModule), type$.void), $async$_async_evaluate$_loadModule$7$baseUrl$configuration$namesInErrors);
            case 5:
              // returning from await.
              // goto return
              $async$goto = 1;
              break;
            case 4:
              // join
              $async$goto = 6;
              return A._asyncAwait($async$self._async_evaluate$_withStackFrame$1$3(stackFrame, nodeWithSpan, new A._EvaluateVisitor__loadModule_closure2($async$self, url, nodeWithSpan, baseUrl, namesInErrors, configuration, callback), type$.Null), $async$_async_evaluate$_loadModule$7$baseUrl$configuration$namesInErrors);
            case 6:
              // returning from await.
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_async_evaluate$_loadModule$7$baseUrl$configuration$namesInErrors, $async$completer);
    },
    _async_evaluate$_execute$5$configuration$namesInErrors$nodeWithSpan(importer, stylesheet, configuration, namesInErrors, nodeWithSpan) {
      return this._execute$body$_EvaluateVisitor(importer, stylesheet, configuration, namesInErrors, nodeWithSpan);
    },
    _async_evaluate$_execute$2(importer, stylesheet) {
      return this._async_evaluate$_execute$5$configuration$namesInErrors$nodeWithSpan(importer, stylesheet, null, false, null);
    },
    _execute$body$_EvaluateVisitor(importer, stylesheet, configuration, namesInErrors, nodeWithSpan) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Module_AsyncCallable),
        $async$returnValue, $async$self = this, currentConfiguration, message, t2, existingSpan, configurationSpan, environment, css, extensionStore, module, url, t1, alreadyLoaded;
      var $async$_async_evaluate$_execute$5$configuration$namesInErrors$nodeWithSpan = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              url = stylesheet.span.file.url;
              t1 = $async$self._async_evaluate$_modules;
              alreadyLoaded = t1.$index(0, url);
              if (alreadyLoaded != null) {
                t1 = configuration == null;
                currentConfiguration = t1 ? $async$self._async_evaluate$_configuration : configuration;
                if (currentConfiguration instanceof A.ExplicitConfiguration) {
                  message = namesInErrors ? $.$get$context().prettyUri$1(url) + string$.x20was_a : string$.This_mw;
                  t2 = $async$self._async_evaluate$_moduleNodes.$index(0, url);
                  existingSpan = t2 == null ? null : J.get$span$z(t2);
                  if (t1) {
                    t1 = currentConfiguration.nodeWithSpan;
                    configurationSpan = t1.get$span(t1);
                  } else
                    configurationSpan = null;
                  t1 = A.LinkedHashMap_LinkedHashMap$_empty(type$.FileSpan, type$.String);
                  if (existingSpan != null)
                    t1.$indexSet(0, existingSpan, "original load");
                  if (configurationSpan != null)
                    t1.$indexSet(0, configurationSpan, "configuration");
                  throw A.wrapException(t1.get$isEmpty(t1) ? $async$self._async_evaluate$_exception$1(message) : $async$self._async_evaluate$_multiSpanException$3(message, "new load", t1));
                }
                $async$returnValue = alreadyLoaded;
                // goto return
                $async$goto = 1;
                break;
              }
              environment = A.AsyncEnvironment$();
              css = A._Cell$();
              extensionStore = A.ExtensionStore$();
              $async$goto = 3;
              return A._asyncAwait($async$self._async_evaluate$_withEnvironment$1$2(environment, new A._EvaluateVisitor__execute_closure0($async$self, importer, stylesheet, extensionStore, configuration, css), type$.Null), $async$_async_evaluate$_execute$5$configuration$namesInErrors$nodeWithSpan);
            case 3:
              // returning from await.
              module = environment.toModule$2(css._readLocal$0(), extensionStore);
              if (url != null) {
                t1.$indexSet(0, url, module);
                if (nodeWithSpan != null)
                  $async$self._async_evaluate$_moduleNodes.$indexSet(0, url, nodeWithSpan);
              }
              $async$returnValue = module;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_async_evaluate$_execute$5$configuration$namesInErrors$nodeWithSpan, $async$completer);
    },
    _async_evaluate$_addOutOfOrderImports$0() {
      var t1, t2, _this = this, _s5_ = "_root",
        _s13_ = "_endOfImports",
        outOfOrderImports = _this._async_evaluate$_outOfOrderImports;
      if (outOfOrderImports == null)
        return _this._async_evaluate$_assertInModule$2(_this._async_evaluate$__root, _s5_).children;
      t1 = _this._async_evaluate$_assertInModule$2(_this._async_evaluate$__root, _s5_).children;
      t1 = A.List_List$of(A.SubListIterable$(t1, 0, A.checkNotNullable(_this._async_evaluate$_assertInModule$2(_this._async_evaluate$__endOfImports, _s13_), "count", type$.int), t1.$ti._eval$1("ListMixin.E")), true, type$.ModifiableCssNode);
      B.JSArray_methods.addAll$1(t1, outOfOrderImports);
      t2 = _this._async_evaluate$_assertInModule$2(_this._async_evaluate$__root, _s5_).children;
      B.JSArray_methods.addAll$1(t1, A.SubListIterable$(t2, _this._async_evaluate$_assertInModule$2(_this._async_evaluate$__endOfImports, _s13_), null, t2.$ti._eval$1("ListMixin.E")));
      return t1;
    },
    _async_evaluate$_combineCss$2$clone(root, clone) {
      var selectors, unsatisfiedExtension, sortedModules, t1, imports, css, t2, t3, statements, index, _this = this;
      if (!B.JSArray_methods.any$1(root.get$upstream(), new A._EvaluateVisitor__combineCss_closure2())) {
        selectors = root.get$extensionStore().get$simpleSelectors();
        unsatisfiedExtension = A.firstOrNull(root.get$extensionStore().extensionsWhereTarget$1(new A._EvaluateVisitor__combineCss_closure3(selectors)));
        if (unsatisfiedExtension != null)
          _this._async_evaluate$_throwForUnsatisfiedExtension$1(unsatisfiedExtension);
        return root.get$css(root);
      }
      sortedModules = _this._async_evaluate$_topologicalModules$1(root);
      if (clone) {
        t1 = sortedModules.$ti._eval$1("MappedListIterable<ListMixin.E,Module<AsyncCallable>>");
        sortedModules = A.List_List$of(new A.MappedListIterable(sortedModules, new A._EvaluateVisitor__combineCss_closure4(), t1), true, t1._eval$1("ListIterable.E"));
      }
      _this._async_evaluate$_extendModules$1(sortedModules);
      t1 = type$.JSArray_CssNode;
      imports = A._setArrayType([], t1);
      css = A._setArrayType([], t1);
      for (t1 = J.get$reversed$ax(sortedModules), t1 = new A.ListIterator(t1, t1.get$length(t1)), t2 = A._instanceType(t1)._precomputed1; t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        t3 = t3.get$css(t3);
        statements = t3.get$children(t3);
        index = _this._async_evaluate$_indexAfterImports$1(statements);
        t3 = J.getInterceptor$ax(statements);
        B.JSArray_methods.addAll$1(imports, t3.getRange$2(statements, 0, index));
        B.JSArray_methods.addAll$1(css, t3.getRange$2(statements, index, t3.get$length(statements)));
      }
      t1 = B.JSArray_methods.$add(imports, css);
      t2 = root.get$css(root);
      return new A.CssStylesheet(new A.UnmodifiableListView(t1, type$.UnmodifiableListView_CssNode), t2.get$span(t2));
    },
    _async_evaluate$_combineCss$1(root) {
      return this._async_evaluate$_combineCss$2$clone(root, false);
    },
    _async_evaluate$_extendModules$1(sortedModules) {
      var t1, t2, originalSelectors, $self, t3, t4, _i, upstream, url,
        downstreamExtensionStores = A.LinkedHashMap_LinkedHashMap$_empty(type$.Uri, type$.List_ExtensionStore),
        unsatisfiedExtensions = new A._LinkedIdentityHashSet(type$._LinkedIdentityHashSet_Extension);
      for (t1 = J.get$iterator$ax(sortedModules); t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        originalSelectors = t2.get$extensionStore().get$simpleSelectors().toSet$0(0);
        unsatisfiedExtensions.addAll$1(0, t2.get$extensionStore().extensionsWhereTarget$1(new A._EvaluateVisitor__extendModules_closure1(originalSelectors)));
        $self = downstreamExtensionStores.$index(0, t2.get$url(t2));
        t3 = t2.get$extensionStore().get$addExtensions();
        if ($self != null)
          t3.call$1($self);
        t3 = t2.get$extensionStore();
        if (t3.get$isEmpty(t3))
          continue;
        for (t3 = t2.get$upstream(), t4 = t3.length, _i = 0; _i < t3.length; t3.length === t4 || (0, A.throwConcurrentModificationError)(t3), ++_i) {
          upstream = t3[_i];
          url = upstream.get$url(upstream);
          if (url == null)
            continue;
          J.add$1$ax(downstreamExtensionStores.putIfAbsent$2(url, new A._EvaluateVisitor__extendModules_closure2()), t2.get$extensionStore());
        }
        unsatisfiedExtensions.removeAll$1(t2.get$extensionStore().extensionsWhereTarget$1(originalSelectors.get$contains(originalSelectors)));
      }
      if (unsatisfiedExtensions._collection$_length !== 0)
        this._async_evaluate$_throwForUnsatisfiedExtension$1(unsatisfiedExtensions.get$first(unsatisfiedExtensions));
    },
    _async_evaluate$_throwForUnsatisfiedExtension$1(extension) {
      throw A.wrapException(A.SassException$(string$.The_ta + extension.target.toString$0(0) + ' !optional" to avoid this error.', extension.span));
    },
    _async_evaluate$_topologicalModules$1(root) {
      var t1 = type$.Module_AsyncCallable,
        sorted = A.QueueList$(null, t1);
      new A._EvaluateVisitor__topologicalModules_visitModule0(A.LinkedHashSet_LinkedHashSet$_empty(t1), sorted).call$1(root);
      return sorted;
    },
    _async_evaluate$_indexAfterImports$1(statements) {
      var t1, t2, t3, lastImport, i, statement;
      for (t1 = J.getInterceptor$asx(statements), t2 = type$.CssComment, t3 = type$.CssImport, lastImport = -1, i = 0; i < t1.get$length(statements); ++i) {
        statement = t1.$index(statements, i);
        if (t3._is(statement))
          lastImport = i;
        else if (!t2._is(statement))
          break;
      }
      return lastImport + 1;
    },
    visitStylesheet$1(node) {
      return this.visitStylesheet$body$_EvaluateVisitor(node);
    },
    visitStylesheet$body$_EvaluateVisitor(node) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_Value),
        $async$returnValue, $async$self = this, t1, t2, _i;
      var $async$visitStylesheet$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = node.children, t2 = t1.length, _i = 0;
            case 3:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $async$goto = 6;
              return A._asyncAwait(t1[_i].accept$1($async$self), $async$visitStylesheet$1);
            case 6:
              // returning from await.
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$visitStylesheet$1, $async$completer);
    },
    visitAtRootRule$1(node) {
      return this.visitAtRootRule$body$_EvaluateVisitor(node);
    },
    visitAtRootRule$body$_EvaluateVisitor(node) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_Value),
        $async$returnValue, $async$self = this, t1, grandparent, root, innerCopy, t2, outerCopy, t3, copy, unparsedQuery, query, $parent, included, $async$temp1, $async$temp2;
      var $async$visitAtRootRule$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              unparsedQuery = node.query;
              $async$goto = unparsedQuery != null ? 3 : 5;
              break;
            case 3:
              // then
              $async$temp1 = unparsedQuery;
              $async$temp2 = A;
              $async$goto = 6;
              return A._asyncAwait($async$self._async_evaluate$_performInterpolation$2$warnForColor(unparsedQuery, true), $async$visitAtRootRule$1);
            case 6:
              // returning from await.
              $async$result = $async$self._async_evaluate$_adjustParseError$2($async$temp1, new $async$temp2._EvaluateVisitor_visitAtRootRule_closure2($async$self, $async$result));
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              $async$result = B.AtRootQuery_UsS;
            case 4:
              // join
              query = $async$result;
              $parent = $async$self._async_evaluate$_assertInModule$2($async$self._async_evaluate$__parent, "__parent");
              included = A._setArrayType([], type$.JSArray_ModifiableCssParentNode);
              for (t1 = type$.CssStylesheet; !t1._is($parent); $parent = grandparent) {
                if (!query.excludes$1($parent))
                  included.push($parent);
                grandparent = $parent._parent;
                if (grandparent == null)
                  throw A.wrapException(A.StateError$(string$.CssNod));
              }
              root = $async$self._async_evaluate$_trimIncluded$1(included);
              $async$goto = root === $async$self._async_evaluate$_assertInModule$2($async$self._async_evaluate$__parent, "__parent") ? 7 : 8;
              break;
            case 7:
              // then
              $async$goto = 9;
              return A._asyncAwait($async$self._async_evaluate$_environment.scope$1$2$when(new A._EvaluateVisitor_visitAtRootRule_closure3($async$self, node), node.hasDeclarations, type$.Null), $async$visitAtRootRule$1);
            case 9:
              // returning from await.
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 8:
              // join
              if (included.length !== 0) {
                innerCopy = B.JSArray_methods.get$first(included).copyWithoutChildren$0();
                for (t1 = A.SubListIterable$(included, 1, null, type$.ModifiableCssParentNode), t1 = new A.ListIterator(t1, t1.get$length(t1)), t2 = A._instanceType(t1)._precomputed1, outerCopy = innerCopy; t1.moveNext$0(); outerCopy = copy) {
                  t3 = t1.__internal$_current;
                  copy = (t3 == null ? t2._as(t3) : t3).copyWithoutChildren$0();
                  copy.addChild$1(outerCopy);
                }
                root.addChild$1(outerCopy);
              } else
                innerCopy = root;
              $async$goto = 10;
              return A._asyncAwait($async$self._async_evaluate$_scopeForAtRoot$4(node, innerCopy, query, included).call$1(new A._EvaluateVisitor_visitAtRootRule_closure4($async$self, node)), $async$visitAtRootRule$1);
            case 10:
              // returning from await.
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$visitAtRootRule$1, $async$completer);
    },
    _async_evaluate$_trimIncluded$1(nodes) {
      var $parent, t1, innermostContiguous, i, t2, grandparent, root, _this = this, _null = null, _s5_ = "_root",
        _s22_ = " to be an ancestor of ";
      if (nodes.length === 0)
        return _this._async_evaluate$_assertInModule$2(_this._async_evaluate$__root, _s5_);
      $parent = _this._async_evaluate$_assertInModule$2(_this._async_evaluate$__parent, "__parent");
      for (t1 = nodes.length, innermostContiguous = _null, i = 0; i < t1; ++i, $parent = grandparent) {
        for (; t2 = nodes[i], $parent !== t2; innermostContiguous = _null, $parent = grandparent) {
          grandparent = $parent._parent;
          if (grandparent == null)
            throw A.wrapException(A.ArgumentError$("Expected " + t2.toString$0(0) + _s22_ + _this.toString$0(0) + ".", _null));
        }
        if (innermostContiguous == null)
          innermostContiguous = i;
        grandparent = $parent._parent;
        if (grandparent == null)
          throw A.wrapException(A.ArgumentError$("Expected " + t2.toString$0(0) + _s22_ + _this.toString$0(0) + ".", _null));
      }
      if ($parent !== _this._async_evaluate$_assertInModule$2(_this._async_evaluate$__root, _s5_))
        return _this._async_evaluate$_assertInModule$2(_this._async_evaluate$__root, _s5_);
      innermostContiguous.toString;
      root = nodes[innermostContiguous];
      B.JSArray_methods.removeRange$2(nodes, innermostContiguous, nodes.length);
      return root;
    },
    _async_evaluate$_scopeForAtRoot$4(node, newParent, query, included) {
      var _this = this,
        scope = new A._EvaluateVisitor__scopeForAtRoot_closure5(_this, newParent, node),
        t1 = query._all || query._at_root_query$_rule;
      if (t1 !== query.include)
        scope = new A._EvaluateVisitor__scopeForAtRoot_closure6(_this, scope);
      if (_this._async_evaluate$_mediaQueries != null && query.excludesName$1("media"))
        scope = new A._EvaluateVisitor__scopeForAtRoot_closure7(_this, scope);
      if (_this._async_evaluate$_inKeyframes && query.excludesName$1("keyframes"))
        scope = new A._EvaluateVisitor__scopeForAtRoot_closure8(_this, scope);
      return _this._async_evaluate$_inUnknownAtRule && !B.JSArray_methods.any$1(included, new A._EvaluateVisitor__scopeForAtRoot_closure9()) ? new A._EvaluateVisitor__scopeForAtRoot_closure10(_this, scope) : scope;
    },
    visitContentBlock$1(node) {
      return A.throwExpression(A.UnsupportedError$(string$.Evalua));
    },
    visitContentRule$1(node) {
      return this.visitContentRule$body$_EvaluateVisitor(node);
    },
    visitContentRule$body$_EvaluateVisitor(node) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_Value),
        $async$returnValue, $async$self = this, $content;
      var $async$visitContentRule$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $content = $async$self._async_evaluate$_environment._async_environment$_content;
              if ($content == null) {
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = 3;
              return A._asyncAwait($async$self._async_evaluate$_runUserDefinedCallable$1$4(node.$arguments, $content, node, new A._EvaluateVisitor_visitContentRule_closure0($async$self, $content), type$.Null), $async$visitContentRule$1);
            case 3:
              // returning from await.
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$visitContentRule$1, $async$completer);
    },
    visitDebugRule$1(node) {
      return this.visitDebugRule$body$_EvaluateVisitor(node);
    },
    visitDebugRule$body$_EvaluateVisitor(node) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_Value),
        $async$returnValue, $async$self = this, value, t1;
      var $async$visitDebugRule$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait(node.expression.accept$1($async$self), $async$visitDebugRule$1);
            case 3:
              // returning from await.
              value = $async$result;
              t1 = value instanceof A.SassString ? value._string$_text : A.serializeValue(value, true, true);
              $async$self._async_evaluate$_logger.debug$2(0, t1, node.span);
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$visitDebugRule$1, $async$completer);
    },
    visitDeclaration$1(node) {
      return this.visitDeclaration$body$_EvaluateVisitor(node);
    },
    visitDeclaration$body$_EvaluateVisitor(node) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_Value),
        $async$returnValue, $async$self = this, t1, $name, t2, cssValue, t3, t4, children, oldDeclarationName;
      var $async$visitDeclaration$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (($async$self._async_evaluate$_atRootExcludingStyleRule ? null : $async$self._async_evaluate$_styleRuleIgnoringAtRoot) == null && !$async$self._async_evaluate$_inUnknownAtRule && !$async$self._async_evaluate$_inKeyframes)
                throw A.wrapException($async$self._async_evaluate$_exception$2(string$.Declarm, node.span));
              t1 = node.name;
              $async$goto = 3;
              return A._asyncAwait($async$self._async_evaluate$_interpolationToValue$2$warnForColor(t1, true), $async$visitDeclaration$1);
            case 3:
              // returning from await.
              $name = $async$result;
              t2 = $async$self._async_evaluate$_declarationName;
              if (t2 != null)
                $name = new A.CssValue(t2 + "-" + A.S($name.get$value($name)), $name.get$span($name), type$.CssValue_String);
              t2 = node.value;
              $async$goto = 4;
              return A._asyncAwait(A.NullableExtension_andThen(t2, new A._EvaluateVisitor_visitDeclaration_closure1($async$self)), $async$visitDeclaration$1);
            case 4:
              // returning from await.
              cssValue = $async$result;
              t3 = cssValue != null;
              if (t3)
                t4 = !cssValue.get$value(cssValue).get$isBlank() || cssValue.get$value(cssValue).get$asList().length === 0;
              else
                t4 = false;
              if (t4) {
                t3 = $async$self._async_evaluate$_assertInModule$2($async$self._async_evaluate$__parent, "__parent");
                t1 = B.JSString_methods.startsWith$1(t1.get$initialPlain(), "--");
                if ($async$self._async_evaluate$_sourceMap) {
                  t2 = A.NullableExtension_andThen(t2, $async$self.get$_async_evaluate$_expressionNode());
                  t2 = t2 == null ? null : J.get$span$z(t2);
                } else
                  t2 = null;
                t3.addChild$1(A.ModifiableCssDeclaration$($name, cssValue, node.span, t1, t2));
              } else if (J.startsWith$1$s($name.get$value($name), "--") && t3)
                throw A.wrapException($async$self._async_evaluate$_exception$2("Custom property values may not be empty.", cssValue.get$span(cssValue)));
              children = node.children;
              $async$goto = children != null ? 5 : 6;
              break;
            case 5:
              // then
              oldDeclarationName = $async$self._async_evaluate$_declarationName;
              $async$self._async_evaluate$_declarationName = $name.get$value($name);
              $async$goto = 7;
              return A._asyncAwait($async$self._async_evaluate$_environment.scope$1$2$when(new A._EvaluateVisitor_visitDeclaration_closure2($async$self, children), node.hasDeclarations, type$.Null), $async$visitDeclaration$1);
            case 7:
              // returning from await.
              $async$self._async_evaluate$_declarationName = oldDeclarationName;
            case 6:
              // join
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$visitDeclaration$1, $async$completer);
    },
    visitEachRule$1(node) {
      return this.visitEachRule$body$_EvaluateVisitor(node);
    },
    visitEachRule$body$_EvaluateVisitor(node) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_Value),
        $async$returnValue, $async$self = this, t1, list, nodeWithSpan, setVariables;
      var $async$visitEachRule$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = node.list;
              $async$goto = 3;
              return A._asyncAwait(t1.accept$1($async$self), $async$visitEachRule$1);
            case 3:
              // returning from await.
              list = $async$result;
              nodeWithSpan = $async$self._async_evaluate$_expressionNode$1(t1);
              setVariables = node.variables.length === 1 ? new A._EvaluateVisitor_visitEachRule_closure2($async$self, node, nodeWithSpan) : new A._EvaluateVisitor_visitEachRule_closure3($async$self, node, nodeWithSpan);
              $async$returnValue = $async$self._async_evaluate$_environment.scope$1$2$semiGlobal(new A._EvaluateVisitor_visitEachRule_closure4($async$self, list, setVariables, node), true, type$.nullable_Value);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$visitEachRule$1, $async$completer);
    },
    _async_evaluate$_setMultipleVariables$3(variables, value, nodeWithSpan) {
      var i,
        list = value.get$asList(),
        t1 = variables.length,
        minLength = Math.min(t1, list.length);
      for (i = 0; i < minLength; ++i)
        this._async_evaluate$_environment.setLocalVariable$3(variables[i], this._async_evaluate$_withoutSlash$2(list[i], nodeWithSpan), nodeWithSpan);
      for (i = minLength; i < t1; ++i)
        this._async_evaluate$_environment.setLocalVariable$3(variables[i], B.C__SassNull, nodeWithSpan);
    },
    visitErrorRule$1(node) {
      return this.visitErrorRule$body$_EvaluateVisitor(node);
    },
    visitErrorRule$body$_EvaluateVisitor(node) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Value),
        $async$self = this, $async$temp1, $async$temp2;
      var $async$visitErrorRule$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$temp1 = A;
              $async$temp2 = J;
              $async$goto = 2;
              return A._asyncAwait(node.expression.accept$1($async$self), $async$visitErrorRule$1);
            case 2:
              // returning from await.
              throw $async$temp1.wrapException($async$self._async_evaluate$_exception$2($async$temp2.toString$0$($async$result), node.span));
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$visitErrorRule$1, $async$completer);
    },
    visitExtendRule$1(node) {
      return this.visitExtendRule$body$_EvaluateVisitor(node);
    },
    visitExtendRule$body$_EvaluateVisitor(node) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_Value),
        $async$returnValue, $async$self = this, targetText, t1, t2, t3, _i, t4, styleRule;
      var $async$visitExtendRule$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              styleRule = $async$self._async_evaluate$_atRootExcludingStyleRule ? null : $async$self._async_evaluate$_styleRuleIgnoringAtRoot;
              if (styleRule == null || $async$self._async_evaluate$_declarationName != null)
                throw A.wrapException($async$self._async_evaluate$_exception$2(string$.x40exten, node.span));
              $async$goto = 3;
              return A._asyncAwait($async$self._async_evaluate$_interpolationToValue$2$warnForColor(node.selector, true), $async$visitExtendRule$1);
            case 3:
              // returning from await.
              targetText = $async$result;
              for (t1 = $async$self._async_evaluate$_adjustParseError$2(targetText, new A._EvaluateVisitor_visitExtendRule_closure0($async$self, targetText)).components, t2 = t1.length, t3 = type$.CompoundSelector, _i = 0; _i < t2; ++_i) {
                t4 = t1[_i].components;
                if (t4.length !== 1 || !(B.JSArray_methods.get$first(t4) instanceof A.CompoundSelector))
                  throw A.wrapException(A.SassFormatException$("complex selectors may not be extended.", targetText.get$span(targetText)));
                t4 = t3._as(B.JSArray_methods.get$first(t4)).components;
                if (t4.length !== 1)
                  throw A.wrapException(A.SassFormatException$(string$.compou + B.JSArray_methods.join$1(t4, ", ") + string$.x60_inst, targetText.get$span(targetText)));
                $async$self._async_evaluate$_assertInModule$2($async$self._async_evaluate$__extensionStore, "_extensionStore").addExtension$4(styleRule.selector, B.JSArray_methods.get$first(t4), node, $async$self._async_evaluate$_mediaQueries);
              }
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$visitExtendRule$1, $async$completer);
    },
    visitAtRule$1(node) {
      return this.visitAtRule$body$_EvaluateVisitor(node);
    },
    visitAtRule$body$_EvaluateVisitor(node) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_Value),
        $async$returnValue, $async$self = this, $name, value, children, wasInKeyframes, wasInUnknownAtRule;
      var $async$visitAtRule$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($async$self._async_evaluate$_declarationName != null)
                throw A.wrapException($async$self._async_evaluate$_exception$2(string$.At_rul, node.span));
              $async$goto = 3;
              return A._asyncAwait($async$self._async_evaluate$_interpolationToValue$1(node.name), $async$visitAtRule$1);
            case 3:
              // returning from await.
              $name = $async$result;
              $async$goto = 4;
              return A._asyncAwait(A.NullableExtension_andThen(node.value, new A._EvaluateVisitor_visitAtRule_closure2($async$self)), $async$visitAtRule$1);
            case 4:
              // returning from await.
              value = $async$result;
              children = node.children;
              if (children == null) {
                $async$self._async_evaluate$_assertInModule$2($async$self._async_evaluate$__parent, "__parent").addChild$1(A.ModifiableCssAtRule$($name, node.span, true, value));
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              wasInKeyframes = $async$self._async_evaluate$_inKeyframes;
              wasInUnknownAtRule = $async$self._async_evaluate$_inUnknownAtRule;
              if (A.unvendor($name.get$value($name)) === "keyframes")
                $async$self._async_evaluate$_inKeyframes = true;
              else
                $async$self._async_evaluate$_inUnknownAtRule = true;
              $async$goto = 5;
              return A._asyncAwait($async$self._async_evaluate$_withParent$2$4$scopeWhen$through(A.ModifiableCssAtRule$($name, node.span, false, value), new A._EvaluateVisitor_visitAtRule_closure3($async$self, children), node.hasDeclarations, new A._EvaluateVisitor_visitAtRule_closure4(), type$.ModifiableCssAtRule, type$.Null), $async$visitAtRule$1);
            case 5:
              // returning from await.
              $async$self._async_evaluate$_inUnknownAtRule = wasInUnknownAtRule;
              $async$self._async_evaluate$_inKeyframes = wasInKeyframes;
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$visitAtRule$1, $async$completer);
    },
    visitForRule$1(node) {
      return this.visitForRule$body$_EvaluateVisitor(node);
    },
    visitForRule$body$_EvaluateVisitor(node) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_Value),
        $async$returnValue, $async$self = this, t1, t2, t3, fromNumber, t4, toNumber, from, to, direction;
      var $async$visitForRule$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = {};
              t2 = node.from;
              t3 = type$.SassNumber;
              $async$goto = 3;
              return A._asyncAwait($async$self._addExceptionSpanAsync$1$2(t2, new A._EvaluateVisitor_visitForRule_closure4($async$self, node), t3), $async$visitForRule$1);
            case 3:
              // returning from await.
              fromNumber = $async$result;
              t4 = node.to;
              $async$goto = 4;
              return A._asyncAwait($async$self._addExceptionSpanAsync$1$2(t4, new A._EvaluateVisitor_visitForRule_closure5($async$self, node), t3), $async$visitForRule$1);
            case 4:
              // returning from await.
              toNumber = $async$result;
              from = $async$self._async_evaluate$_addExceptionSpan$2(t2, new A._EvaluateVisitor_visitForRule_closure6(fromNumber));
              to = t1.to = $async$self._async_evaluate$_addExceptionSpan$2(t4, new A._EvaluateVisitor_visitForRule_closure7(toNumber, fromNumber));
              direction = from > to ? -1 : 1;
              if (from === (!node.isExclusive ? t1.to = to + direction : to)) {
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$returnValue = $async$self._async_evaluate$_environment.scope$1$2$semiGlobal(new A._EvaluateVisitor_visitForRule_closure8(t1, $async$self, node, from, direction, fromNumber), true, type$.nullable_Value);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$visitForRule$1, $async$completer);
    },
    visitForwardRule$1(node) {
      return this.visitForwardRule$body$_EvaluateVisitor(node);
    },
    visitForwardRule$body$_EvaluateVisitor(node) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_Value),
        $async$returnValue, $async$self = this, newConfiguration, t4, _i, variable, $name, oldConfiguration, adjustedConfiguration, t1, t2, t3;
      var $async$visitForwardRule$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              oldConfiguration = $async$self._async_evaluate$_configuration;
              adjustedConfiguration = oldConfiguration.throughForward$1(node);
              t1 = node.configuration;
              t2 = t1.length;
              t3 = node.url;
              $async$goto = t2 !== 0 ? 3 : 5;
              break;
            case 3:
              // then
              $async$goto = 6;
              return A._asyncAwait($async$self._async_evaluate$_addForwardConfiguration$2(adjustedConfiguration, node), $async$visitForwardRule$1);
            case 6:
              // returning from await.
              newConfiguration = $async$result;
              $async$goto = 7;
              return A._asyncAwait($async$self._async_evaluate$_loadModule$5$configuration(t3, "@forward", node, new A._EvaluateVisitor_visitForwardRule_closure1($async$self, node), newConfiguration), $async$visitForwardRule$1);
            case 7:
              // returning from await.
              t3 = type$.String;
              t4 = A.LinkedHashSet_LinkedHashSet$_empty(t3);
              for (_i = 0; _i < t2; ++_i) {
                variable = t1[_i];
                if (!variable.isGuarded)
                  t4.add$1(0, variable.name);
              }
              $async$self._async_evaluate$_removeUsedConfiguration$3$except(adjustedConfiguration, newConfiguration, t4);
              t3 = A.LinkedHashSet_LinkedHashSet$_empty(t3);
              for (_i = 0; _i < t2; ++_i)
                t3.add$1(0, t1[_i].name);
              for (t1 = newConfiguration._values, t2 = J.toList$0$ax(t1.get$keys(t1)), t4 = t2.length, _i = 0; _i < t2.length; t2.length === t4 || (0, A.throwConcurrentModificationError)(t2), ++_i) {
                $name = t2[_i];
                if (!t3.contains$1(0, $name))
                  if (!t1.get$isEmpty(t1))
                    t1.remove$1(0, $name);
              }
              $async$self._async_evaluate$_assertConfigurationIsEmpty$1(newConfiguration);
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              $async$self._async_evaluate$_configuration = adjustedConfiguration;
              $async$goto = 8;
              return A._asyncAwait($async$self._async_evaluate$_loadModule$4(t3, "@forward", node, new A._EvaluateVisitor_visitForwardRule_closure2($async$self, node)), $async$visitForwardRule$1);
            case 8:
              // returning from await.
              $async$self._async_evaluate$_configuration = oldConfiguration;
            case 4:
              // join
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$visitForwardRule$1, $async$completer);
    },
    _async_evaluate$_addForwardConfiguration$2(configuration, node) {
      return this._addForwardConfiguration$body$_EvaluateVisitor(configuration, node);
    },
    _addForwardConfiguration$body$_EvaluateVisitor(configuration, node) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Configuration),
        $async$returnValue, $async$self = this, t2, t3, _i, variable, t4, t5, variableNodeWithSpan, t1, newValues, $async$temp1, $async$temp2, $async$temp3;
      var $async$_async_evaluate$_addForwardConfiguration$2 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = configuration._values;
              newValues = A.LinkedHashMap_LinkedHashMap$of(new A.UnmodifiableMapView(t1, type$.UnmodifiableMapView_String_ConfiguredValue), type$.String, type$.ConfiguredValue);
              t2 = node.configuration, t3 = t2.length, _i = 0;
            case 3:
              // for condition
              if (!(_i < t3)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              variable = t2[_i];
              if (variable.isGuarded) {
                t4 = variable.name;
                t5 = t1.get$isEmpty(t1) ? null : t1.remove$1(0, t4);
                if (t5 != null && !t5.value.$eq(0, B.C__SassNull)) {
                  newValues.$indexSet(0, t4, t5);
                  // goto for update
                  $async$goto = 4;
                  break;
                }
              }
              t4 = variable.expression;
              variableNodeWithSpan = $async$self._async_evaluate$_expressionNode$1(t4);
              $async$temp1 = newValues;
              $async$temp2 = variable.name;
              $async$temp3 = A;
              $async$goto = 6;
              return A._asyncAwait(t4.accept$1($async$self), $async$_async_evaluate$_addForwardConfiguration$2);
            case 6:
              // returning from await.
              $async$temp1.$indexSet(0, $async$temp2, new $async$temp3.ConfiguredValue($async$self._async_evaluate$_withoutSlash$2($async$result, variableNodeWithSpan), variable.span, variableNodeWithSpan));
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              if (configuration instanceof A.ExplicitConfiguration || t1.get$isEmpty(t1)) {
                $async$returnValue = new A.ExplicitConfiguration(node, newValues);
                // goto return
                $async$goto = 1;
                break;
              } else {
                $async$returnValue = new A.Configuration(newValues);
                // goto return
                $async$goto = 1;
                break;
              }
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_async_evaluate$_addForwardConfiguration$2, $async$completer);
    },
    _async_evaluate$_removeUsedConfiguration$3$except(upstream, downstream, except) {
      var t1, t2, t3, t4, _i, $name;
      for (t1 = upstream._values, t2 = J.toList$0$ax(t1.get$keys(t1)), t3 = t2.length, t4 = downstream._values, _i = 0; _i < t2.length; t2.length === t3 || (0, A.throwConcurrentModificationError)(t2), ++_i) {
        $name = t2[_i];
        if (except.contains$1(0, $name))
          continue;
        if (!t4.containsKey$1($name))
          if (!t1.get$isEmpty(t1))
            t1.remove$1(0, $name);
      }
    },
    _async_evaluate$_assertConfigurationIsEmpty$2$nameInError(configuration, nameInError) {
      var t1, entry;
      if (!(configuration instanceof A.ExplicitConfiguration))
        return;
      t1 = configuration._values;
      if (t1.get$isEmpty(t1))
        return;
      t1 = t1.get$entries(t1);
      entry = t1.get$first(t1);
      t1 = nameInError ? "$" + A.S(entry.key) + string$.x20was_n : string$.This_v;
      throw A.wrapException(this._async_evaluate$_exception$2(t1, entry.value.configurationSpan));
    },
    _async_evaluate$_assertConfigurationIsEmpty$1(configuration) {
      return this._async_evaluate$_assertConfigurationIsEmpty$2$nameInError(configuration, false);
    },
    visitFunctionRule$1(node) {
      return this.visitFunctionRule$body$_EvaluateVisitor(node);
    },
    visitFunctionRule$body$_EvaluateVisitor(node) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_Value),
        $async$returnValue, $async$self = this, t1, t2, t3, t4, index, t5;
      var $async$visitFunctionRule$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._async_evaluate$_environment;
              t2 = t1.closure$0();
              t3 = $async$self._async_evaluate$_inDependency;
              t4 = t1._async_environment$_functions;
              index = t4.length - 1;
              t5 = node.name;
              t1._async_environment$_functionIndices.$indexSet(0, t5, index);
              J.$indexSet$ax(t4[index], t5, new A.UserDefinedCallable(node, t2, t3, type$.UserDefinedCallable_AsyncEnvironment));
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$visitFunctionRule$1, $async$completer);
    },
    visitIfRule$1(node) {
      return this.visitIfRule$body$_EvaluateVisitor(node);
    },
    visitIfRule$body$_EvaluateVisitor(node) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_Value),
        $async$returnValue, $async$self = this, t1, t2, _i, clauseToCheck, _box_0;
      var $async$visitIfRule$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              _box_0 = {};
              _box_0.clause = node.lastClause;
              t1 = node.clauses, t2 = t1.length, _i = 0;
            case 3:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              clauseToCheck = t1[_i];
              $async$goto = 6;
              return A._asyncAwait(clauseToCheck.expression.accept$1($async$self), $async$visitIfRule$1);
            case 6:
              // returning from await.
              if ($async$result.get$isTruthy()) {
                _box_0.clause = clauseToCheck;
                // goto after for
                $async$goto = 5;
                break;
              }
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              t1 = _box_0.clause;
              if (t1 == null) {
                $async$returnValue = null;
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = 7;
              return A._asyncAwait($async$self._async_evaluate$_environment.scope$1$3$semiGlobal$when(new A._EvaluateVisitor_visitIfRule_closure0(_box_0, $async$self), true, t1.hasDeclarations, type$.nullable_Value), $async$visitIfRule$1);
            case 7:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$visitIfRule$1, $async$completer);
    },
    visitImportRule$1(node) {
      return this.visitImportRule$body$_EvaluateVisitor(node);
    },
    visitImportRule$body$_EvaluateVisitor(node) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_Value),
        $async$returnValue, $async$self = this, t1, t2, t3, _i, $import;
      var $async$visitImportRule$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = node.imports, t2 = t1.length, t3 = type$.StaticImport, _i = 0;
            case 3:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $import = t1[_i];
              $async$goto = $import instanceof A.DynamicImport ? 6 : 8;
              break;
            case 6:
              // then
              $async$goto = 9;
              return A._asyncAwait($async$self._async_evaluate$_visitDynamicImport$1($import), $async$visitImportRule$1);
            case 9:
              // returning from await.
              // goto join
              $async$goto = 7;
              break;
            case 8:
              // else
              $async$goto = 10;
              return A._asyncAwait($async$self._visitStaticImport$1(t3._as($import)), $async$visitImportRule$1);
            case 10:
              // returning from await.
            case 7:
              // join
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$visitImportRule$1, $async$completer);
    },
    _async_evaluate$_visitDynamicImport$1($import) {
      return this._async_evaluate$_withStackFrame$1$3("@import", $import, new A._EvaluateVisitor__visitDynamicImport_closure0(this, $import), type$.void);
    },
    _async_evaluate$_loadStylesheet$4$baseUrl$forImport(url, span, baseUrl, forImport) {
      return this._loadStylesheet$body$_EvaluateVisitor(url, span, baseUrl, forImport);
    },
    _async_evaluate$_loadStylesheet$3$baseUrl(url, span, baseUrl) {
      return this._async_evaluate$_loadStylesheet$4$baseUrl$forImport(url, span, baseUrl, false);
    },
    _async_evaluate$_loadStylesheet$3$forImport(url, span, forImport) {
      return this._async_evaluate$_loadStylesheet$4$baseUrl$forImport(url, span, null, forImport);
    },
    _loadStylesheet$body$_EvaluateVisitor(url, span, baseUrl, forImport) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$._LoadedStylesheet),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$next = [], $async$self = this, importCache, tuple, isDependency, stylesheet, result, error, stackTrace, error0, stackTrace0, message, t1, t2, t3, t4, exception, message0, $async$exception;
      var $async$_async_evaluate$_loadStylesheet$4$baseUrl$forImport = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              baseUrl = baseUrl;
              $async$handler = 4;
              $async$self._async_evaluate$_importSpan = span;
              importCache = $async$self._async_evaluate$_importCache;
              $async$goto = importCache != null ? 7 : 9;
              break;
            case 7:
              // then
              if (baseUrl == null)
                baseUrl = $async$self._async_evaluate$_assertInModule$2($async$self._async_evaluate$__stylesheet, "_stylesheet").span.file.url;
              $async$goto = 10;
              return A._asyncAwait(J.canonicalize$4$baseImporter$baseUrl$forImport$x(importCache, A.Uri_parse(url), $async$self._async_evaluate$_importer, baseUrl, forImport), $async$_async_evaluate$_loadStylesheet$4$baseUrl$forImport);
            case 10:
              // returning from await.
              tuple = $async$result;
              $async$goto = tuple != null ? 11 : 12;
              break;
            case 11:
              // then
              isDependency = $async$self._async_evaluate$_inDependency || tuple.item1 !== $async$self._async_evaluate$_importer;
              t1 = tuple.item1;
              t2 = tuple.item2;
              t3 = tuple.item3;
              t4 = $async$self._async_evaluate$_quietDeps && isDependency;
              $async$goto = 13;
              return A._asyncAwait(importCache.importCanonical$4$originalUrl$quiet(t1, t2, t3, t4), $async$_async_evaluate$_loadStylesheet$4$baseUrl$forImport);
            case 13:
              // returning from await.
              stylesheet = $async$result;
              if (stylesheet != null) {
                $async$self._async_evaluate$_loadedUrls.add$1(0, tuple.item2);
                t1 = tuple.item1;
                $async$returnValue = new A._LoadedStylesheet0(stylesheet, t1, isDependency);
                $async$next = [1];
                // goto finally
                $async$goto = 5;
                break;
              }
            case 12:
              // join
              // goto join
              $async$goto = 8;
              break;
            case 9:
              // else
              t1 = baseUrl;
              $async$goto = 14;
              return A._asyncAwait($async$self._async_evaluate$_importLikeNode$3(url, t1 == null ? $async$self._async_evaluate$_assertInModule$2($async$self._async_evaluate$__stylesheet, "_stylesheet").span.file.url : t1, forImport), $async$_async_evaluate$_loadStylesheet$4$baseUrl$forImport);
            case 14:
              // returning from await.
              result = $async$result;
              if (result != null) {
                t1 = $async$self._async_evaluate$_loadedUrls;
                A.NullableExtension_andThen(result.stylesheet.span.file.url, t1.get$add(t1));
                $async$returnValue = result;
                $async$next = [1];
                // goto finally
                $async$goto = 5;
                break;
              }
            case 8:
              // join
              if (B.JSString_methods.startsWith$1(url, "package:") && true)
                throw A.wrapException(string$.x22packa);
              else
                throw A.wrapException("Can't find stylesheet to import.");
              $async$next.push(6);
              // goto finally
              $async$goto = 5;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              t1 = A.unwrapException($async$exception);
              if (t1 instanceof A.SassException) {
                error = t1;
                stackTrace = A.getTraceFromException($async$exception);
                t1 = error;