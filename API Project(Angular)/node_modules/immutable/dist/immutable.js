rayType([], type$.JSArray_Expression_2);
      if (!t1.scanChar$1(41)) {
        do {
          _this.whitespace$0();
          if (allowEmptySecondArg && $arguments.length === 1 && t1.peekChar$0() === 41) {
            t3 = A.FileLocation$_(t1._sourceFile, t1._string_scanner$_position);
            t4 = t3.offset;
            t4 = A._FileSpan$(t3.file, t4, t4);
            $arguments.push(new A.StringExpression0(A.Interpolation$0(A._setArrayType([""], type$.JSArray_Object), t4), false));
            break;
          }
          $arguments.push(_this.expressionUntilComma$1$singleEquals(true));
          _this.whitespace$0();
        } while (t1.scanChar$1(44));
        t1.expectChar$1(41);
      }
      if ($.$get$_disallowedFunctionNames0().contains$1(0, plain))
        _this.error$2(0, string$.This_f, t1.spanFrom$1(start));
      t3 = A.Interpolation$0(A._setArrayType([new A.StringExpression0(identifier, false)], type$.JSArray_Object), identifier.span);
      t2 = t1.spanFrom$1(new A._SpanScannerState(t1, t2));
      t4 = type$.Expression_2;
      return new A.InterpolatedFunctionExpression0(t3, new A.ArgumentInvocation0(A.List_List$unmodifiable($arguments, t4), A.ConstantMap_ConstantMap$from(B.Map_empty9, type$.String, t4), null, null, t2), t1.spanFrom$1(start));
    },
    namespacedExpression$2(namespace, start) {
      var expression = this.super$StylesheetParser$namespacedExpression0(namespace, start);
      this.error$2(0, string$.Modulen, expression.get$span(expression));
    }
  };
  A.DebugRule0.prototype = {
    accept$1$1(visitor) {
      return visitor.visitDebugRule$1(this);
    },
    accept$1(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0(_) {
      return "@debug " + this.expression.toString$0(0) + ";";
    },
    $isAstNode0: 1,
    $isStatement0: 1,
    get$span(receiver) {
      return this.span;
    }
  };
  A.ModifiableCssDeclaration0.prototype = {
    accept$1$1(visitor) {
      return visitor.visitCssDeclaration$1(this);
    },
    accept$1(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0(_) {
      return this.name.toString$0(0) + ": " + this.value.toString$0(0) + ";";
    },
    get$span(receiver) {
      return this.span;
    }
  };
  A.Declaration0.prototype = {
    accept$1$1(visitor) {
      return visitor.visitDeclaration$1(this);
    },
    accept$1(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0(_) {
      var t3, children,
        buffer = new A.StringBuffer(""),
        t1 = this.name,
        t2 = "" + t1.toString$0(0);
      buffer._contents = t2;
      t2 = buffer._contents = t2 + A.Primitives_stringFromCharCode(58);
      t3 = this.value;
      if (t3 != null) {
        t1 = !B.JSString_methods.startsWith$1(t1.get$initialPlain(), "--") ? buffer._contents = t2 + A.Primitives_stringFromCharCode(32) : t2;
        buffer._contents = t1 + t3.toString$0(0);
      }
      children = this.children;
      return children == null ? buffer.toString$0(0) + ";" : buffer.toString$0(0) + " {" + B.JSArray_methods.join$1(children, " ") + "}";
    },
    get$span(receiver) {
      return this.span;
    }
  };
  A.SupportsDeclaration0.prototype = {
    get$isCustomProperty() {
      var $name = this.name;
      return $name instanceof A.StringExpression0 && !$name.hasQuotes && B.JSString_methods.startsWith$1($name.text.get$initialPlain(), "--");
    },
    toString$0(_) {
      return "(" + this.name.toString$0(0) + ": " + this.value.toString$0(0) + ")";
    },
    $isAstNode0: 1,
    get$span(receiver) {
      return this.span;
    }
  };
  A.DynamicImport0.prototype = {
    toString$0(_) {
      return A.StringExpression_quoteText0(this.urlString);
    },
    $isImport0: 1,
    $isAstNode0: 1,
    get$span(receiver) {
      return this.span;
    }
  };
  A.EachRule0.prototype = {
    accept$1$1(visitor) {
      return visitor.visitEachRule$1(this);
    },
    accept$1(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0(_) {
      var t1 = this.variables,
        t2 = this.children;
      return "@each " + new A.MappedListIterable(t1, new A.EachRule_toString_closure0(), A._arrayInstanceType(t1)._eval$1("MappedListIterable<1,String>")).join$1(0, ", ") + " in " + this.list.toString$0(0) + " {" + (t2 && B.JSArray_methods).join$1(t2, " ") + "}";
    },
    get$span(receiver) {
      return this.span;
    }
  };
  A.EachRule_toString_closure0.prototype = {
    call$1(variable) {
      return "$" + variable;
    },
    $signature: 5
  };
  A.EmptyExtensionStore0.prototype = {
    get$isEmpty(_) {
      return true;
    },
    get$simpleSelectors() {
      return B.C_EmptyUnmodifiableSet0;
    },
    extensionsWhereTarget$1(callback) {
      return B.List_empty12;
    },
    addSelector$3(selector, span, mediaContext) {
      throw A.wrapException(A.UnsupportedError$(string$.addSel));
    },
    addExtension$4(extender, target, extend, mediaContext) {
      throw A.wrapException(A.UnsupportedError$(string$.addExt_));
    },
    addExtensions$1(extenders) {
      throw A.wrapException(A.UnsupportedError$(string$.addExts));
    },
    clone$0() {
      return B.Tuple2_EmptyExtensionStore_Map_empty0;
    },
    $isExtensionStore0: 1
  };
  A.Environment0.prototype = {
    closure$0() {
      var t4, t5, t6, _this = this,
        t1 = _this._environment0$_forwardedModules,
        t2 = _this._environment0$_nestedForwardedModules,
        t3 = _this._environment0$_variables;
      t3 = A._setArrayType(t3.slice(0), A._arrayInstanceType(t3));
      t4 = _this._environment0$_variableNodes;
      t4 = A._setArrayType(t4.slice(0), A._arrayInstanceType(t4));
      t5 = _this._environment0$_functions;
      t5 = A._setArrayType(t5.slice(0), A._arrayInstanceType(t5));
      t6 = _this._environment0$_mixins;
      t6 = A._setArrayType(t6.slice(0), A._arrayInstanceType(t6));
      return A.Environment$_0(_this._environment0$_modules, _this._environment0$_namespaceNodes, _this._environment0$_globalModules, _this._environment0$_importedModules, t1, t2, _this._environment0$_allModules, t3, t4, t5, t6, _this._environment0$_content);
    },
    addModule$3$namespace(module, nodeWithSpan, namespace) {
      var t1, t2, span, _this = this;
      if (namespace == null) {
        _this._environment0$_globalModules.$indexSet(0, module, nodeWithSpan);
        _this._environment0$_allModules.push(module);
        for (t1 = J.get$iterator$ax(J.get$keys$z(B.JSArray_methods.get$first(_this._environment0$_variables))); t1.moveNext$0();) {
          t2 = t1.get$current(t1);
          if (module.get$variables().containsKey$1(t2))
            throw A.wrapException(A.SassScriptException$0(string$.This_ma + t2 + '".'));
        }
      } else {
        t1 = _this._environment0$_modules;
        if (t1.containsKey$1(namespace)) {
          t1 = _this._environment0$_namespaceNodes.$index(0, namespace);
          span = t1 == null ? null : t1.span;
          t1 = A.LinkedHashMap_LinkedHashMap$_empty(type$.FileSpan, type$.String);
          if (span != null)
            t1.$indexSet(0, span, "original @use");
          throw A.wrapException(A.MultiSpanSassScriptException$0(string$.There_ + namespace + '".', "new @use", t1));
        }
        t1.$indexSet(0, namespace, module);
        _this._environment0$_namespaceNodes.$indexSet(0, namespace, nodeWithSpan);
        _this._environment0$_allModules.push(module);
      }
    },
    forwardModule$2(module, rule) {
      var view, t1, t2, _this = this,
        forwardedModules = _this._environment0$_forwardedModules;
      if (forwardedModules == null)
        forwardedModules = _this._environment0$_forwardedModules = A.LinkedHashMap_LinkedHashMap$_empty(type$.Module_Callable_2, type$.AstNode_2);
      view = A.ForwardedModuleView_ifNecessary0(module, rule, type$.Callable_2);
      for (t1 = A.LinkedHashMapKeyIterator$(forwardedModules, forwardedModules._modifications); t1.moveNext$0();) {
        t2 = t1.__js_helper$_current;
        _this._environment0$_assertNoConflicts$5(view.get$variables(), t2.get$variables(), view, t2, "variable");
        _this._environment0$_assertNoConflicts$5(view.get$functions(view), t2.get$functions(t2), view, t2, "function");
        _this._environment0$_assertNoConflicts$5(view.get$mixins(), t2.get$mixins(), view, t2, "mixin");
      }
      _this._environment0$_allModules.push(module);
      forwardedModules.$indexSet(0, view, rule);
    },
    _environment0$_assertNoConflicts$5(newMembers, oldMembers, newModule, oldModule, type) {
      var larger, smaller, t1, t2, $name, span;
      if (newMembers.get$length(newMembers) < oldMembers.get$length(oldMembers)) {
        larger = oldMembers;
        smaller = newMembers;
      } else {
        larger = newMembers;
        smaller = oldMembers;
      }
      for (t1 = J.get$iterator$ax(smaller.get$keys(smaller)), t2 = type === "variable"; t1.moveNext$0();) {
        $name = t1.get$current(t1);
        if (!larger.containsKey$1($name))
          continue;
        if (t2 ? newModule.variableIdentity$1($name) === oldModule.variableIdentity$1($name) : J.$eq$(larger.$index(0, $name), smaller.$index(0, $name)))
          continue;
        if (t2)
          $name = "$" + $name;
        t1 = this._environment0$_forwardedModules;
        if (t1 == null)
          span = null;
        else {
          t1 = t1.$index(0, oldModule);
          span = t1 == null ? null : J.get$span$z(t1);
        }
        t1 = A.LinkedHashMap_LinkedHashMap$_empty(type$.FileSpan, type$.String);
        if (span != null)
          t1.$indexSet(0, span, "original @forward");
        throw A.wrapException(A.MultiSpanSassScriptException$0("Two forwarded modules both define a " + type + " named " + $name + ".", "new @forward", t1));
      }
    },
    importForwards$1(module) {
      var forwardedModules, t1, t2, t3, t4, t5, forwardedVariableNames, forwardedFunctionNames, forwardedMixinNames, _i, entry, shadowed, t6, _length, _list, _this = this,
        forwarded = module._environment0$_environment._environment0$_forwardedModules;
      if (forwarded == null)
        return;
      forwardedModules = _this._environment0$_forwardedModules;
      if (forwardedModules != null) {
        t1 = A.LinkedHashMap_LinkedHashMap$_empty(type$.Module_Callable_2, type$.AstNode_2);
        for (t2 = forwarded.get$entries(forwarded), t2 = t2.get$iterator(t2), t3 = _this._environment0$_globalModules; t2.moveNext$0();) {
          t4 = t2.get$current(t2);
          t5 = t4.key;
          if (!forwardedModules.containsKey$1(t5) || !t3.containsKey$1(t5))
            t1.$indexSet(0, t5, t4.value);
        }
        forwarded = t1;
      } else
        forwardedModules = _this._environment0$_forwardedModules = A.LinkedHashMap_LinkedHashMap$_empty(type$.Module_Callable_2, type$.AstNode_2);
      t1 = A._instanceType(forwarded)._eval$1("LinkedHashMapKeyIterable<1>");
      t2 = t1._eval$1("ExpandIterable<Iterable.E,String>");
      t3 = t2._eval$1("Iterable.E");
      forwardedVariableNames = A.LinkedHashSet_LinkedHashSet$of(new A.ExpandIterable(new A.LinkedHashMapKeyIterable(forwarded, t1), new A.Environment_importForwards_closure2(), t2), t3);
      forwardedFunctionNames = A.LinkedHashSet_LinkedHashSet$of(new A.ExpandIterable(new A.LinkedHashMapKeyIterable(forwarded, t1), new A.Environment_importForwards_closure3(), t2), t3);
      forwardedMixinNames = A.LinkedHashSet_LinkedHashSet$of(new A.ExpandIterable(new A.LinkedHashMapKeyIterable(forwarded, t1), new A.Environment_importForwards_closure4(), t2), t3);
      t2 = _this._environment0$_variables;
      t3 = t2.length;
      if (t3 === 1) {
        for (t1 = _this._environment0$_importedModules, t3 = t1.get$entries(t1).toList$0(0), t4 = t3.length, t5 = type$.Callable_2, _i = 0; _i < t3.length; t3.length === t4 || (0, A.throwConcurrentModificationError)(t3), ++_i) {
          entry = t3[_i];
          module = entry.key;
          shadowed = A.ShadowedModuleView_ifNecessary0(module, forwardedFunctionNames, forwardedMixinNames, forwardedVariableNames, t5);
          if (shadowed != null) {
            t1.remove$1(0, module);
            t6 = shadowed.variables;
            if (t6.get$isEmpty(t6)) {
              t6 = shadowed.functions;
              if (t6.get$isEmpty(t6)) {
                t6 = shadowed.mixins;
                if (t6.get$isEmpty(t6)) {
                  t6 = shadowed._shadowed_view0$_inner;
                  t6 = t6.get$css(t6);
                  t6 = J.get$isEmpty$asx(t6.get$children(t6));
                } else
                  t6 = false;
              } else
                t6 = false;
            } else
              t6 = false;
            if (!t6)
              t1.$indexSet(0, shadowed, entry.value);
          }
        }
        for (t3 = forwardedModules.get$entries(forwardedModules).toList$0(0), t4 = t3.length, _i = 0; _i < t3.length; t3.length === t4 || (0, A.throwConcurrentModificationError)(t3), ++_i) {
          entry = t3[_i];
          module = entry.key;
          shadowed = A.ShadowedModuleView_ifNecessary0(module, forwardedFunctionNames, forwardedMixinNames, forwardedVariableNames, t5);
          if (shadowed != null) {
            forwardedModules.remove$1(0, module);
            t6 = shadowed.variables;
            if (t6.get$isEmpty(t6)) {
              t6 = shadowed.functions;
              if (t6.get$isEmpty(t6)) {
                t6 = shadowed.mixins;
                if (t6.get$isEmpty(t6)) {
                  t6 = shadowed._shadowed_view0$_inner;
                  t6 = t6.get$css(t6);
                  t6 = J.get$isEmpty$asx(t6.get$children(t6));
                } else
                  t6 = false;
              } else
                t6 = false;
            } else
              t6 = false;
            if (!t6)
              forwardedModules.$indexSet(0, shadowed, entry.value);
          }
        }
        t1.addAll$1(0, forwarded);
        forwardedModules.addAll$1(0, forwarded);
      } else {
        t4 = _this._environment0$_nestedForwardedModules;
        if (t4 == null) {
          _length = t3 - 1;
          _list = J.JSArray_JSArray$allocateGrowable(_length, type$.List_Module_Callable_2);
          for (t3 = type$.JSArray_Module_Callable_2, _i = 0; _i < _length; ++_i)
            _list[_i] = A._setArrayType([], t3);
          _this._environment0$_nestedForwardedModules = _list;
          t3 = _list;
        } else
          t3 = t4;
        B.JSArray_methods.addAll$1(B.JSArray_methods.get$last(t3), new A.LinkedHashMapKeyIterable(forwarded, t1));
      }
      for (t1 = A._LinkedHashSetIterator$(forwardedVariableNames, forwardedVariableNames._collection$_modifications), t3 = _this._environment0$_variableIndices, t4 = _this._environment0$_variableNodes, t5 = A._instanceType(t1)._precomputed1; t1.moveNext$0();) {
        t6 = t1._collection$_current;
        if (t6 == null)
          t6 = t5._as(t6);
        t3.remove$1(0, t6);
        J.remove$1$z(B.JSArray_methods.get$last(t2), t6);
        J.remove$1$z(B.JSArray_methods.get$last(t4), t6);
      }
      for (t1 = A._LinkedHashSetIterator$(forwardedFunctionNames, forwardedFunctionNames._collection$_modifications), t2 = _this._environment0$_functionIndices, t3 = _this._environment0$_functions, t4 = A._instanceType(t1)._precomputed1; t1.moveNext$0();) {
        t5 = t1._collection$_current;
        if (t5 == null)
          t5 = t4._as(t5);
        t2.remove$1(0, t5);
        J.remove$1$z(B.JSArray_methods.get$last(t3), t5);
      }
      for (t1 = A._LinkedHashSetIterator$(forwardedMixinNames, forwardedMixinNames._collection$_modifications), t2 = _this._environment0$_mixinIndices, t3 = _this._environment0$_mixins, t4 = A._instanceType(t1)._precomputed1; t1.moveNext$0();) {
        t5 = t1._collection$_current;
        if (t5 == null)
          t5 = t4._as(t5);
        t2.remove$1(0, t5);
        J.remove$1$z(B.JSArray_methods.get$last(t3), t5);
      }
    },
    getVariable$2$namespace($name, namespace) {
      var t1, index, _this = this;
      if (namespace != null)
        return _this._environment0$_getModule$1(namespace).get$variables().$index(0, $name);
      if (_this._environment0$_lastVariableName === $name) {
        t1 = _this._environment0$_lastVariableIndex;
        t1.toString;
        t1 = J.$index$asx(_this._environment0$_variables[t1], $name);
        return t1 == null ? _this._environment0$_getVariableFromGlobalModule$1($name) : t1;
      }
      t1 = _this._environment0$_variableIndices;
      index = t1.$index(0, $name);
      if (index != null) {
        _this._environment0$_lastVariableName = $name;
        _this._environment0$_lastVariableIndex = index;
        t1 = J.$index$asx(_this._environment0$_variables[index], $name);
        return t1 == null ? _this._environment0$_getVariableFromGlobalModule$1($name) : t1;
      }
      index = _this._environment0$_variableIndex$1($name);
      if (index == null)
        return _this._environment0$_getVariableFromGlobalModule$1($name);
      _this._environment0$_lastVariableName = $name;
      _this._environment0$_lastVariableIndex = index;
      t1.$indexSet(0, $name, index);
      t1 = J.$index$asx(_this._environment0$_variables[index], $name);
      return t1 == null ? _this._environment0$_getVariableFromGlobalModule$1($name) : t1;
    },
    getVariable$1($name) {
      return this.getVariable$2$namespace($name, null);
    },
    _environment0$_getVariableFromGlobalModule$1($name) {
      return this._environment0$_fromOneModule$1$3($name, "variable", new A.Environment__getVariableFromGlobalModule_closure0($name), type$.Value_2);
    },
    getVariableNode$2$namespace($name, namespace) {
      var t1, index, _this = this;
      if (namespace != null)
        return _this._environment0$_getModule$1(namespace).get$variableNodes().$index(0, $name);
      if (_this._environment0$_lastVariableName === $name) {
        t1 = _this._environment0$_lastVariableIndex;
        t1.toString;
        t1 = J.$index$asx(_this._environment0$_variableNodes[t1], $name);
        return t1 == null ? _this._environment0$_getVariableNodeFromGlobalModule$1($name) : t1;
      }
      t1 = _this._environment0$_variableIndices;
      index = t1.$index(0, $name);
      if (index != null) {
        _this._environment0$_lastVariableName = $name;
        _this._environment0$_lastVariableIndex = index;
        t1 = J.$index$asx(_this._environment0$_variableNodes[index], $name);
        return t1 == null ? _this._environment0$_getVariableNodeFromGlobalModule$1($name) : t1;
      }
      index = _this._environment0$_variableIndex$1($name);
      if (index == null)
        return _this._environment0$_getVariableNodeFromGlobalModule$1($name);
      _this._environment0$_lastVariableName = $name;
      _this._environment0$_lastVariableIndex = index;
      t1.$indexSet(0, $name, index);
      t1 = J.$index$asx(_this._environment0$_variableNodes[index], $name);
      return t1 == null ? _this._environment0$_getVariableNodeFromGlobalModule$1($name) : t1;
    },
    _environment0$_getVariableNodeFromGlobalModule$1($name) {
      var t1, t2, value;
      for (t1 = this._environment0$_importedModules, t2 = this._environment0$_globalModules, t2 = new A.LinkedHashMapKeyIterable(t1, A._instanceType(t1)._eval$1("LinkedHashMapKeyIterable<1>")).followedBy$1(0, new A.LinkedHashMapKeyIterable(t2, A._instanceType(t2)._eval$1("LinkedHashMapKeyIterable<1>"))), t2 = new A.FollowedByIterator(J.get$iterator$ax(t2.__internal$_first), t2._second); t2.moveNext$0();) {
        t1 = t2._currentIterator;
        value = t1.get$current(t1).get$variableNodes().$index(0, $name);
        if (value != null)
          return value;
      }
      return null;
    },
    globalVariableExists$2$namespace($name, namespace) {
      if (namespace != null)
        return this._environment0$_getModule$1(namespace).get$variables().containsKey$1($name);
      if (B.JSArray_methods.get$first(this._environment0$_variables).containsKey$1($name))
        return true;
      return this._environment0$_getVariableFromGlobalModule$1($name) != null;
    },
    globalVariableExists$1($name) {
      return this.globalVariableExists$2$namespace($name, null);
    },
    _environment0$_variableIndex$1($name) {
      var t1, i;
      for (t1 = this._environment0$_variables, i = t1.length - 1; i >= 0; --i)
        if (t1[i].containsKey$1($name))
          return i;
      return null;
    },
    setVariable$5$global$namespace($name, value, nodeWithSpan, global, namespace) {
      var t1, moduleWithName, nestedForwardedModules, t2, t3, t4, t5, index, _this = this;
      if (namespace != null) {
        _this._environment0$_getModule$1(namespace).setVariable$3($name, value, nodeWithSpan);
        return;
      }
      if (global || _this._environment0$_variables.length === 1) {
        _this._environment0$_variableIndices.putIfAbsent$2($name, new A.Environment_setVariable_closure2(_this, $name));
        t1 = _this._environment0$_variables;
        if (!B.JSArray_methods.get$first(t1).containsKey$1($name)) {
          moduleWithName = _this._environment0$_fromOneModule$1$3($name, "variable", new A.Environment_setVariable_closure3($name), type$.Module_Callable_2);
          if (moduleWithName != null) {
            moduleWithName.setVariable$3($name, value, nodeWithSpan);
            return;
          }
        }
        J.$indexSet$ax(B.JSArray_methods.get$first(t1), $name, value);
        J.$indexSet$ax(B.JSArray_methods.get$first(_this._environment0$_variableNodes), $name, nodeWithSpan);
        return;
      }
      nestedForwardedModules = _this._environment0$_nestedForwardedModules;
      if (nestedForwardedModules != null && !_this._environment0$_variableIndices.containsKey$1($name) && _this._environment0$_variableIndex$1($name) == null)
        for (t1 = new A.ReversedListIterable(nestedForwardedModules, A.instanceType(nestedForwardedModules)._eval$1("ReversedListIterable<1>")), t1 = new A.ListIterator(t1, t1.get$length(t1)), t2 = A._instanceType(t1)._precomputed1; t1.moveNext$0();) {
          t3 = t1.__internal$_current;
          for (t3 = J.get$reversed$ax(t3 == null ? t2._as(t3) : t3), t3 = new A.ListIterator(t3, t3.get$length(t3)), t4 = A._instanceType(t3)._precomputed1; t3.moveNext$0();) {
            t5 = t3.__internal$_current;
            if (t5 == null)
              t5 = t4._as(t5);
            if (t5.get$variables().containsKey$1($name)) {
              t5.setVariable$3($name, value, nodeWithSpan);
              return;
            }
          }
        }
      if (_this._environment0$_lastVariableName === $name) {
        t1 = _this._environment0$_lastVariableIndex;
        t1.toString;
        index = t1;
      } else
        index = _this._environment0$_variableIndices.putIfAbsent$2($name, new A.Environment_setVariable_closure4(_this, $name));
      if (!_this._environment0$_inSemiGlobalScope && index === 0) {
        index = _this._environment0$_variables.length - 1;
        _this._environment0$_variableIndices.$indexSet(0, $name, index);
      }
      _this._environment0$_lastVariableName = $name;
      _this._environment0$_lastVariableIndex = index;
      J.$indexSet$ax(_this._environment0$_variables[index], $name, value);
      J.$indexSet$ax(_this._environment0$_variableNodes[index], $name, nodeWithSpan);
    },
    setVariable$4$global($name, value, nodeWithSpan, global) {
      return this.setVariable$5$global$namespace($name, value, nodeWithSpan, global, null);
    },
    setLocalVariable$3($name, value, nodeWithSpan) {
      var index, _this = this,
        t1 = _this._environment0$_variables,
        t2 = t1.length;
      _this._environment0$_lastVariableName = $name;
      index = _this._environment0$_lastVariableIndex = t2 - 1;
      _this._environment0$_variableIndices.$indexSet(0, $name, index);
      J.$indexSet$ax(t1[index], $name, value);
      J.$indexSet$ax(_this._environment0$_variableNodes[index], $name, nodeWithSpan);
    },
    getFunction$2$namespace($name, namespace) {
      var t1, index, _this = this;
      if (namespace != null) {
        t1 = _this._environment0$_getModule$1(namespace);
        return t1.get$functions(t1).$index(0, $name);
      }
      t1 = _this._environment0$_functionIndices;
      index = t1.$index(0, $name);
      if (index != null) {
        t1 = J.$index$asx(_this._environment0$_functions[index], $name);
        return t1 == null ? _this._environment0$_getFunctionFromGlobalModule$1($name) : t1;
      }
      index = _this._environment0$_functionIndex$1($name);
      if (index == null)
        return _this._environment0$_getFunctionFromGlobalModule$1($name);
      t1.$indexSet(0, $name, index);
      t1 = J.$index$asx(_this._environment0$_functions[index], $name);
      return t1 == null ? _this._environment0$_getFunctionFromGlobalModule$1($name) : t1;
    },
    _environment0$_getFunctionFromGlobalModule$1($name) {
      return this._environment0$_fromOneModule$1$3($name, "function", new A.Environment__getFunctionFromGlobalModule_closure0($name), type$.Callable_2);
    },
    _environment0$_functionIndex$1($name) {
      var t1, i;
      for (t1 = this._environment0$_functions, i = t1.length - 1; i >= 0; --i)
        if (t1[i].containsKey$1($name))
          return i;
      return null;
    },
    getMixin$2$namespace($name, namespace) {
      var t1, index, _this = this;
      if (namespace != null)
        return _this._environment0$_getModule$1(namespace).get$mixins().$index(0, $name);
      t1 = _this._environment0$_mixinIndices;
      index = t1.$index(0, $name);
      if (index != null) {
        t1 = J.$index$asx(_this._environment0$_mixins[index], $name);
        return t1 == null ? _this._environment0$_getMixinFromGlobalModule$1($name) : t1;
      }
      index = _this._environment0$_mixinIndex$1($name);
      if (index == null)
        return _this._environment0$_getMixinFromGlobalModule$1($name);
      t1.$indexSet(0, $name, index);
      t1 = J.$index$asx(_this._environment0$_mixins[index], $name);
      return t1 == null ? _this._environment0$_getMixinFromGlobalModule$1($name) : t1;
    },
    _environment0$_getMixinFromGlobalModule$1($name) {
      return this._environment0$_fromOneModule$1$3($name, "mixin", new A.Environment__getMixinFromGlobalModule_closure0($name), type$.Callable_2);
    },
    _environment0$_mixinIndex$1($name) {
      var t1, i;
      for (t1 = this._environment0$_mixins, i = t1.length - 1; i >= 0; --i)
        if (t1[i].containsKey$1($name))
          return i;
      return null;
    },
    scope$1$3$semiGlobal$when(callback, semiGlobal, when) {
      var wasInSemiGlobalScope, $name, name0, name1, t1, t2, t3, t4, t5, t6, _this = this;
      semiGlobal = semiGlobal && _this._environment0$_inSemiGlobalScope;
      wasInSemiGlobalScope = _this._environment0$_inSemiGlobalScope;
      _this._environment0$_inSemiGlobalScope = semiGlobal;
      if (!when)
        try {
          t1 = callback.call$0();
          return t1;
        } finally {
          _this._environment0$_inSemiGlobalScope = wasInSemiGlobalScope;
        }
      t1 = _this._environment0$_variables;
      t2 = type$.String;
      B.JSArray_methods.add$1(t1, A.LinkedHashMap_LinkedHashMap$_empty(t2, type$.Value_2));
      t3 = _this._environment0$_variableNodes;
      B.JSArray_methods.add$1(t3, A.LinkedHashMap_LinkedHashMap$_empty(t2, type$.AstNode_2));
      t4 = _this._environment0$_functions;
      t5 = type$.Callable_2;
      B.JSArray_methods.add$1(t4, A.LinkedHashMap_LinkedHashMap$_empty(t2, t5));
      t6 = _this._environment0$_mixins;
      B.JSArray_methods.add$1(t6, A.LinkedHashMap_LinkedHashMap$_empty(t2, t5));
      t5 = _this._environment0$_nestedForwardedModules;
      if (t5 != null)
        t5.push(A._setArrayType([], type$.JSArray_Module_Callable_2));
      try {
        t2 = callback.call$0();
        return t2;
      } finally {
        _this._environment0$_inSemiGlobalScope = wasInSemiGlobalScope;
        _this._environment0$_lastVariableIndex = _this._environment0$_lastVariableName = null;
        for (t1 = J.get$iterator$ax(J.get$keys$z(B.JSArray_methods.removeLast$0(t1))), t2 = _this._environment0$_variableIndices; t1.moveNext$0();) {
          $name = t1.get$current(t1);
          t2.remove$1(0, $name);
        }
        B.JSArray_methods.removeLast$0(t3);
        for (t1 = J.get$iterator$ax(J.get$keys$z(B.JSArray_methods.removeLast$0(t4))), t2 = _this._environment0$_functionIndices; t1.moveNext$0();) {
          name0 = t1.get$current(t1);
          t2.remove$1(0, name0);
        }
        for (t1 = J.get$iterator$ax(J.get$keys$z(B.JSArray_methods.removeLast$0(t6))), t2 = _this._environment0$_mixinIndices; t1.moveNext$0();) {
          name1 = t1.get$current(t1);
          t2.remove$1(0, name1);
        }
        t1 = _this._environment0$_nestedForwardedModules;
        if (t1 != null)
          t1.pop();
      }
    },
    scope$1$1(callback, $T) {
      return this.scope$1$3$semiGlobal$when(callback, false, true, $T);
    },
    scope$1$2$when(callback, when, $T) {
      return this.scope$1$3$semiGlobal$when(callback, false, when, $T);
    },
    scope$1$2$semiGlobal(callback, semiGlobal, $T) {
      return this.scope$1$3$semiGlobal$when(callback, semiGlobal, true, $T);
    },
    toImplicitConfiguration$0() {
      var t1, t2, i, values, nodes, t3, t4, t5, t6,
        configuration = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.ConfiguredValue_2);
      for (t1 = this._environment0$_variables, t2 = this._environment0$_variableNodes, i = 0; i < t1.length; ++i) {
        values = t1[i];
        nodes = t2[i];
        for (t3 = values.get$entries(values), t3 = t3.get$iterator(t3); t3.moveNext$0();) {
          t4 = t3.get$current(t3);
          t5 = t4.key;
          t4 = t4.value;
          t6 = nodes.$index(0, t5);
          t6.toString;
          configuration.$indexSet(0, t5, new A.ConfiguredValue0(t4, null, t6));
        }
      }
      return new A.Configuration0(configuration);
    },
    toModule$2(css, extensionStore) {
      return A._EnvironmentModule__EnvironmentModule1(this, css, extensionStore, A.NullableExtension_andThen0(this._environment0$_forwardedModules, new A.Environment_toModule_closure0()));
    },
    toDummyModule$0() {
      return A._EnvironmentModule__EnvironmentModule1(this, new A.CssStylesheet0(new A.UnmodifiableListView(B.List_empty11, type$.UnmodifiableListView_CssNode_2), A.SourceFile$decoded(B.List_empty1, "<dummy module>").span$1(0, 0)), B.C_EmptyExtensionStore0, A.NullableExtension_andThen0(this._environment0$_forwardedModules, new A.Environment_toDummyModule_closure0()));
    },
    _environment0$_getModule$1(namespace) {
      var module = this._environment0$_modules.$index(0, namespace);
      if (module != null)
        return module;
      throw A.wrapException(A.SassScriptException$0('There is no module with the namespace "' + namespace + '".'));
    },
    _environment0$_fromOneModule$1$3($name, type, callback, $T) {
      var t1, t2, t3, t4, t5, value, identity, valueInModule, identityFromModule, spans,
        nestedForwardedModules = this._environment0$_nestedForwardedModules;
      if (nestedForwardedModules != null)
        for (t1 = new A.ReversedListIterable(nestedForwardedModules, A._arrayInstanceType(nestedForwardedModules)._eval$1("ReversedListIterable<1>")), t1 = new A.ListIterator(t1, t1.get$length(t1)), t2 = A._instanceType(t1)._precomputed1; t1.moveNext$0();) {
          t3 = t1.__internal$_current;
          for (t3 = J.get$reversed$ax(t3 == null ? t2._as(t3) : t3), t3 = new A.ListIterator(t3, t3.get$length(t3)), t4 = A._instanceType(t3)._precomputed1; t3.moveNext$0();) {
            t5 = t3.__internal$_current;
            value = callback.call$1(t5 == null ? t4._as(t5) : t5);
            if (value != null)
              return value;
          }
        }
      for (t1 = this._environment0$_importedModules, t1 = A.LinkedHashMapKeyIterator$(t1, t1._modifications); t1.moveNext$0();) {
        value = callback.call$1(t1.__js_helper$_current);
        if (value != null)
          return value;
      }
      for (t1 = this._environment0$_globalModules, t2 = A.LinkedHashMapKeyIterator$(t1, t1._modifications), t3 = type$.Callable_2, value = null, identity = null; t2.moveNext$0();) {
        t4 = t2.__js_helper$_current;
        valueInModule = callback.call$1(t4);
        if (valueInModule == null)
          continue;
        identityFromModule = t3._is(valueInModule) ? valueInModule : t4.variableIdentity$1($name);
        if (identityFromModule.$eq(0, identity))
          continue;
        if (value != null) {
          spans = t1.get$entries(t1).map$1$1(0, new A.Environment__fromOneModule_closure0(callback, $T), type$.nullable_FileSpan);
          t2 = A.LinkedHashMap_LinkedHashMap$_empty(type$.FileSpan, type$.String);
          for (t1 = spans.get$iterator(spans), t3 = "includes " + type; t1.moveNext$0();) {
            t4 = t1.get$current(t1);
            if (t4 != null)
              t2.$indexSet(0, t4, t3);
          }
          throw A.wrapException(A.MultiSpanSassScriptException$0("This " + type + string$.x20is_av, type + " use", t2));
        }
        identity = identityFromModule;
        value = valueInModule;
      }
      return value;
    }
  };
  A.Environment_importForwards_closure2.prototype = {
    call$1(module) {
      var t1 = module.get$variables();
      return t1.get$keys(t1);
    },
    $signature: 102
  };
  A.Environment_importForwards_closure3.prototype = {
    call$1(module) {
      var t1 = module.get$functions(module);
      return t1.get$keys(t1);
    },
    $signature: 102
  };
  A.Environment_importForwards_closure4.prototype = {
    call$1(module) {
      var t1 = module.get$mixins();
      return t1.get$keys(t1);
    },
    $signature: 102
  };
  A.Environment__getVariableFromGlobalModule_closure0.prototype = {
    call$1(module) {
      return module.get$variables().$index(0, this.name);
    },
    $signature: 384
  };
  A.Environment_setVariable_closure2.prototype = {
    call$0() {
      var t1 = this.$this;
      t1._environment0$_lastVariableName = this.name;
      return t1._environment0$_lastVariableIndex = 0;
    },
    $signature: 12
  };
  A.Environment_setVariable_closure3.prototype = {
    call$1(module) {
      return module.get$variables().containsKey$1(this.name) ? module : null;
    },
    $signature: 385
  };
  A.Environment_setVariable_closure4.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._environment0$_variableIndex$1(this.name);
      return t2 == null ? t1._environment0$_variables.length - 1 : t2;
    },
    $signature: 12
  };
  A.Environment__getFunctionFromGlobalModule_closure0.prototype = {
    call$1(module) {
      return module.get$functions(module).$index(0, this.name);
    },
    $signature: 211
  };
  A.Environment__getMixinFromGlobalModule_closure0.prototype = {
    call$1(module) {
      return module.get$mixins().$index(0, this.name);
    },
    $signature: 211
  };
  A.Environment_toModule_closure0.prototype = {
    call$1(modules) {
      return new A.MapKeySet(modules, type$.MapKeySet_Module_Callable_2);
    },
    $signature: 212
  };
  A.Environment_toDummyModule_closure0.prototype = {
    call$1(modules) {
      return new A.MapKeySet(modules, type$.MapKeySet_Module_Callable_2);
    },
    $signature: 212
  };
  A.Environment__fromOneModule_closure0.prototype = {
    call$1(entry) {
      return A.NullableExtension_andThen0(this.callback.call$1(entry.key), new A.Environment__fromOneModule__closure0(entry, this.T));
    },
    $signature: 388
  };
  A.Environment__fromOneModule__closure0.prototype = {
    call$1(_) {
      return J.get$span$z(this.entry.value);
    },
    $signature() {
      return this.T._eval$1("FileSpan(0)");
    }
  };
  A._EnvironmentModule1.prototype = {
    get$url(_) {
      var t1 = this.css;
      return t1.get$span(t1).file.url;
    },
    setVariable$3($name, value, nodeWithSpan) {
      var t1, t2,
        module = this._environment0$_modulesByVariable.$index(0, $name);
      if (module != null) {
        module.setVariable$3($name, value, nodeWithSpan);
        return;
      }
      t1 = this._environment0$_environment;
      t2 = t1._environment0$_variables;
      if (!B.JSArray_methods.get$first(t2).containsKey$1($name))
        throw A.wrapException(A.SassScriptException$0("Undefined variable."));
      J.$indexSet$ax(B.JSArray_methods.get$first(t2), $name, value);
      J.$indexSet$ax(B.JSArray_methods.get$first(t1._environment0$_variableNodes), $name, nodeWithSpan);
      return;
    },
    variableIdentity$1($name) {
      var module = this._environment0$_modulesByVariable.$index(0, $name);
      return module == null ? this : module.variableIdentity$1($name);
    },
    cloneCss$0() {
      var newCssAndExtensionStore, _this = this,
        t1 = _this.css;
      if (J.get$isEmpty$asx(t1.get$children(t1)))
        return _this;
      newCssAndExtensionStore = A.cloneCssStylesheet0(t1, _this.extensionStore);
      return A._EnvironmentModule$_1(_this._environment0$_environment, newCssAndExtensionStore.item1, newCssAndExtensionStore.item2, _this._environment0$_modulesByVariable, _this.variables, _this.variableNodes, _this.functions, _this.mixins, _this.transitivelyContainsCss, _this.transitivelyContainsExtensions);
    },
    toString$0(_) {
      var t1 = this.css;
      if (t1.get$span(t1).file.url == null)
        t1 = "<unknown url>";
      else {
        t1 = t1.get$span(t1);
        t1 = $.$get$context().prettyUri$1(t1.file.url);
      }
      return t1;
    },
    $isModule0: 1,
    get$upstream() {
      return this.upstream;
    },
    get$variables() {
      return this.variables;
    },
    get$variableNodes() {
      return this.variableNodes;
    },
    get$functions(receiver) {
      return this.functions;
    },
    get$mixins() {
      return this.mixins;
    },
    get$extensionStore() {
      return this.extensionStore;
    },
    get$css(receiver) {
      return this.css;
    },
    get$transitivelyContainsCss() {
      return this.transitivelyContainsCss;
    },
    get$transitivelyContainsExtensions() {
      return this.transitivelyContainsExtensions;
    }
  };
  A._EnvironmentModule__EnvironmentModule_closure11.prototype = {
    call$1(module) {
      return module.get$variables();
    },
    $signature: 389
  };
  A._EnvironmentModule__EnvironmentModule_closure12.prototype = {
    call$1(module) {
      return module.get$variableNodes();
    },
    $signature: 390
  };
  A._EnvironmentModule__EnvironmentModule_closure13.prototype = {
    call$1(module) {
      return module.get$functions(module);
    },
    $signature: 213
  };
  A._EnvironmentModule__EnvironmentModule_closure14.prototype = {
    call$1(module) {
      return module.get$mixins();
    },
    $signature: 213
  };
  A._EnvironmentModule__EnvironmentModule_closure15.prototype = {
    call$1(module) {
      return module.get$transitivelyContainsCss();
    },
    $signature: 142
  };
  A._EnvironmentModule__EnvironmentModule_closure16.prototype = {
    call$1(module) {
      return module.get$transitivelyContainsExtensions();
    },
    $signature: 142
  };
  A.ErrorRule0.prototype = {
    accept$1$1(visitor) {
      return visitor.visitErrorRule$1(this);
    },
    accept$1(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0(_) {
      return "@error " + this.expression.toString$0(0) + ";";
    },
    $isAstNode0: 1,
    $isStatement0: 1,
    get$span(receiver) {
      return this.span;
    }
  };
  A._EvaluateVisitor1.prototype = {
    _EvaluateVisitor$6$functions$importCache$logger$nodeImporter$quietDeps$sourceMap1(functions, importCache, logger, nodeImporter, quietDeps, sourceMap) {
      var t2, metaModule, t3, _i, module, $function, t4, _this = this,
        _s20_ = "$name, $module: null",
        _s9_ = "sass:meta",
        t1 = type$.JSArray_BuiltInCallable_2,
        metaFunctions = A._setArrayType([A.BuiltInCallable$function0("global-variable-exists", _s20_, new A._EvaluateVisitor_closure19(_this), _s9_), A.BuiltInCallable$function0("variable-exists", "$name", new A._EvaluateVisitor_closure20(_this), _s9_), A.BuiltInCallable$function0("function-exists", _s20_, new A._EvaluateVisitor_closure21(_this), _s9_), A.BuiltInCallable$function0("mixin-exists", _s20_, new A._EvaluateVisitor_closure22(_this), _s9_), A.BuiltInCallable$function0("content-exists", "", new A._EvaluateVisitor_closure23(_this), _s9_), A.BuiltInCallable$function0("module-variables", "$module", new A._EvaluateVisitor_closure24(_this), _s9_), A.BuiltInCallable$function0("module-functions", "$module", new A._EvaluateVisitor_closure25(_this), _s9_), A.BuiltInCallable$function0("get-function", "$name, $css: false, $module: null", new A._EvaluateVisitor_closure26(_this), _s9_), A.BuiltInCallable$function0("call", "$function, $args...", new A._EvaluateVisitor_closure27(_this), _s9_)], t1),
        metaMixins = A._setArrayType([A.BuiltInCallable$mixin0("load-css", "$url, $with: null", new A._EvaluateVisitor_closure28(_this), _s9_)], t1);
      t1 = type$.BuiltInCallable_2;
      t2 = A.List_List$of($.$get$global6(), true, t1);
      B.JSArray_methods.addAll$1(t2, $.$get$local0());
      B.JSArray_methods.addAll$1(t2, metaFunctions);
      metaModule = A.BuiltInModule$0("meta", t2, metaMixins, null, t1);
      for (t1 = A.List_List$of($.$get$coreModules0(), true, type$.BuiltInModule_BuiltInCallable_2), t1.push(metaModule), t2 = t1.length, t3 = _this._evaluate0$_builtInModules, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        module = t1[_i];
        t3.$indexSet(0, module.url, module);
      }
      t1 = A._setArrayType([], type$.JSArray_Callable_2);
      B.JSArray_methods.addAll$1(t1, functions);
      B.JSArray_methods.addAll$1(t1, $.$get$globalFunctions0());
      B.JSArray_methods.addAll$1(t1, metaFunctions);
      for (t2 = t1.length, t3 = _this._evaluate0$_builtInFunctions, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        $function = t1[_i];
        t4 = J.get$name$x($function);
        t3.$indexSet(0, A.stringReplaceAllUnchecked(t4, "_", "-"), $function);
      }
    },
    run$2(_, importer, node) {
      var t1 = type$.nullable_Object;
      return A.runZoned(new A._EvaluateVisitor_run_closure1(this, node, importer), A.LinkedHashMap_LinkedHashMap$_literal([B.Symbol__evaluationContext, new A._EvaluationContext1(this, node)], t1, t1), type$.EvaluateResult_2);
    },
    _evaluate0$_assertInModule$1$2(value, $name) {
      if (value != null)
        return value;
      throw A.wrapException(A.StateError$("Can't access " + $name + " outside of a module."));
    },
    _evaluate0$_assertInModule$2(value, $name) {
      return this._evaluate0$_assertInModule$1$2(value, $name, type$.dynamic);
    },
    _evaluate0$_loadModule$7$baseUrl$configuration$namesInErrors(url, stackFrame, nodeWithSpan, callback, baseUrl, configuration, namesInErrors) {
      var t1, t2, _this = this,
        builtInModule = _this._evaluate0$_builtInModules.$index(0, url);
      if (builtInModule != null) {
        if (configuration instanceof A.ExplicitConfiguration0) {
          t1 = namesInErrors ? "Built-in module " + url.toString$0(0) + " can't be configured." : "Built-in modules can't be configured.";
          t2 = configuration.nodeWithSpan;
          throw A.wrapException(_this._evaluate0$_exception$2(t1, t2.get$span(t2)));
        }
        _this._evaluate0$_addExceptionSpan$2(nodeWithSpan, new A._EvaluateVisitor__loadModule_closure3(callback, builtInModule));
        return;
      }
      _this._evaluate0$_withStackFrame$3(stackFrame, nodeWithSpan, new A._EvaluateVisitor__loadModule_closure4(_this, url, nodeWithSpan, baseUrl, namesInErrors, configuration, callback));
    },
    _evaluate0$_loadModule$5$configuration(url, stackFrame, nodeWithSpan, callback, configuration) {
      return this._evaluate0$_loadModule$7$baseUrl$configuration$namesInErrors(url, stackFrame, nodeWithSpan, callback, null, configuration, false);
    },
    _evaluate0$_loadModule$4(url, stackFrame, nodeWithSpan, callback) {
      return this._evaluate0$_loadModule$7$baseUrl$configuration$namesInErrors(url, stackFrame, nodeWithSpan, callback, null, null, false);
    },
    _evaluate0$_execute$5$configuration$namesInErrors$nodeWithSpan(importer, stylesheet, configuration, namesInErrors, nodeWithSpan) {
      var currentConfiguration, message, t2, existingSpan, configurationSpan, environment, css, extensionStore, module, _this = this,
        url = stylesheet.span.file.url,
        t1 = _this._evaluate0$_modules,
        alreadyLoaded = t1.$index(0, url);
      if (alreadyLoaded != null) {
        t1 = configuration == null;
        currentConfiguration = t1 ? _this._evaluate0$_configuration : configuration;
        if (currentConfiguration instanceof A.ExplicitConfiguration0) {
          message = namesInErrors ? $.$get$context().prettyUri$1(url) + string$.x20was_a : string$.This_mw;
          t2 = _this._evaluate0$_moduleNodes.$index(0, url);
          existingSpan = t2 == null ? null : J.get$span$z(t2);
          if (t1) {
            t1 = currentConfiguration.nodeWithSpan;
            configurationSpan = t1.get$span(t1);
          } else
            configurationSpan = null;
          t1 = A.LinkedHashMap_LinkedHashMap$_empty(type$.FileSpan, type$.String);
          if (existingSpan != null)
            t1.$indexSet(0, existingSpan, "original load");
          if (configurationSpan != null)
            t1.$indexSet(0, configurationSpan, "configuration");
          throw A.wrapException(t1.get$isEmpty(t1) ? _this._evaluate0$_exception$1(message) : _this._evaluate0$_multiSpanException$3(message, "new load", t1));
        }
        return alreadyLoaded;
      }
      environment = A.Environment$0();
      css = A._Cell$();
      extensionStore = A.ExtensionStore$0();
      _this._evaluate0$_withEnvironment$2(environment, new A._EvaluateVisitor__execute_closure1(_this, importer, stylesheet, extensionStore, configuration, css));
      module = environment.toModule$2(css._readLocal$0(), extensionStore);
      if (url != null) {
        t1.$indexSet(0, url, module);
        if (nodeWithSpan != null)
          _this._evaluate0$_moduleNodes.$indexSet(0, url, nodeWithSpan);
      }
      return module;
    },
    _evaluate0$_execute$2(importer, stylesheet) {
      return this._evaluate0$_execute$5$configuration$namesInErrors$nodeWithSpan(importer, stylesheet, null, false, null);
    },
    _evaluate0$_addOutOfOrderImports$0() {
      var t1, t2, _this = this, _s5_ = "_root",
        _s13_ = "_endOfImports",
        outOfOrderImports = _this._evaluate0$_outOfOrderImports;
      if (outOfOrderImports == null)
        return _this._evaluate0$_assertInModule$2(_this._evaluate0$__root, _s5_).children;
      t1 = _this._evaluate0$_assertInModule$2(_this._evaluate0$__root, _s5_).children;
      t1 = A.List_List$of(A.SubListIterable$(t1, 0, A.checkNotNullable(_this._evaluate0$_assertInModule$2(_this._evaluate0$__endOfImports, _s13_), "count", type$.int), t1.$ti._eval$1("ListMixin.E")), true, type$.ModifiableCssNode_2);
      B.JSArray_methods.addAll$1(t1, outOfOrderImports);
      t2 = _this._evaluate0$_assertInModule$2(_this._evaluate0$__root, _s5_).children;
      B.JSArray_methods.addAll$1(t1, A.SubListIterable$(t2, _this._evaluate0$_assertInModule$2(_this._evaluate0$__endOfImports, _s13_), null, t2.$ti._eval$1("ListMixin.E")));
      return t1;
    },
    _evaluate0$_combineCss$2$clone(root, clone) {
      var selectors, unsatisfiedExtension, sortedModules, t1, imports, css, t2, t3, statements, index, _this = this;
      if (!B.JSArray_methods.any$1(root.get$upstream(), new A._EvaluateVisitor__combineCss_closure5())) {
        selectors = root.get$extensionStore().get$simpleSelectors();
        unsatisfiedExtension = A.firstOrNull0(root.get$extensionStore().extensionsWhereTarget$1(new A._EvaluateVisitor__combineCss_closure6(selectors)));
        if (unsatisfiedExtension != null)
          _this._evaluate0$_throwForUnsatisfiedExtension$1(unsatisfiedExtension);
        return root.get$css(root);
      }
      sortedModules = _this._evaluate0$_topologicalModules$1(root);
      if (clone) {
        t1 = sortedModules.$ti._eval$1("MappedListIterable<ListMixin.E,Module0<Callable0>>");
        sortedModules = A.List_List$of(new A.MappedListIterable(sortedModules, new A._EvaluateVisitor__combineCss_closure7(), t1), true, t1._eval$1("ListIterable.E"));
      }
      _this._evaluate0$_extendModules$1(sortedModules);
      t1 = type$.JSArray_CssNode_2;
      imports = A._setArrayType([], t1);
      css = A._setArrayType([], t1);
      for (t1 = J.get$reversed$ax(sortedModules), t1 = new A.ListIterator(t1, t1.get$length(t1)), t2 = A._instanceType(t1)._precomputed1; t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        t3 = t3.get$css(t3);
        statements = t3.get$children(t3);
        index = _this._evaluate0$_indexAfterImports$1(statements);
        t3 = J.getInterceptor$ax(statements);
        B.JSArray_methods.addAll$1(imports, t3.getRange$2(statements, 0, index));
        B.JSArray_methods.addAll$1(css, t3.getRange$2(statements, index, t3.get$length(statements)));
      }
      t1 = B.JSArray_methods.$add(imports, css);
      t2 = root.get$css(root);
      return new A.CssStylesheet0(new A.UnmodifiableListView(t1, type$.UnmodifiableListView_CssNode_2), t2.get$span(t2));
    },
    _evaluate0$_combineCss$1(root) {
      return this._evaluate0$_combineCss$2$clone(root, false);
    },
    _evaluate0$_extendModules$1(sortedModules) {
      var t1, t2, originalSelectors, $self, t3, t4, _i, upstream, url,
        downstreamExtensionStores = A.LinkedHashMap_LinkedHashMap$_empty(type$.Uri, type$.List_ExtensionStore_2),
        unsatisfiedExtensions = new A._LinkedIdentityHashSet(type$._LinkedIdentityHashSet_Extension_2);
      for (t1 = J.get$iterator$ax(sortedModules); t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        originalSelectors = t2.get$extensionStore().get$simpleSelectors().toSet$0(0);
        unsatisfiedExtensions.addAll$1(0, t2.get$extensionStore().extensionsWhereTarget$1(new A._EvaluateVisitor__extendModules_closure3(originalSelectors)));
        $self = downstreamExtensionStores.$index(0, t2.get$url(t2));
        t3 = t2.get$extensionStore().get$addExtensions();
        if ($self != null)
          t3.call$1($self);
        t3 = t2.get$extensionStore();
        if (t3.get$isEmpty(t3))
          continue;
        for (t3 = t2.get$upstream(), t4 = t3.length, _i = 0; _i < t3.length; t3.length === t4 || (0, A.throwConcurrentModificationError)(t3), ++_i) {
          upstream = t3[_i];
          url = upstream.get$url(upstream);
          if (url == null)
            continue;
          J.add$1$ax(downstreamExtensionStores.putIfAbsent$2(url, new A._EvaluateVisitor__extendModules_closure4()), t2.get$extensionStore());
        }
        unsatisfiedExtensions.removeAll$1(t2.get$extensionStore().extensionsWhereTarget$1(originalSelectors.get$contains(originalSelectors)));
      }
      if (unsatisfiedExtensions._collection$_length !== 0)
        this._evaluate0$_throwForUnsatisfiedExtension$1(unsatisfiedExtensions.get$first(unsatisfiedExtensions));
    },
    _evaluate0$_throwForUnsatisfiedExtension$1(extension) {
      throw A.wrapException(A.SassException$0(string$.The_ta + extension.target.toString$0(0) + ' !optional" to avoid this error.', extension.span));
    },
    _evaluate0$_topologicalModules$1(root) {
      var t1 = type$.Module_Callable_2,
        sorted = A.QueueList$(null, t1);
      new A._EvaluateVisitor__topologicalModules_visitModule1(A.LinkedHashSet_LinkedHashSet$_empty(t1), sorted).call$1(root);
      return sorted;
    },
    _evaluate0$_indexAfterImports$1(statements) {
      var t1, t2, t3, lastImport, i, statement;
      for (t1 = J.getInterceptor$asx(statements), t2 = type$.CssComment_2, t3 = type$.CssImport_2, lastImport = -1, i = 0; i < t1.get$length(statements); ++i) {
        statement = t1.$index(statements, i);
        if (t3._is(statement))
          lastImport = i;
        else if (!t2._is(statement))
          break;
      }
      return lastImport + 1;
    },
    visitStylesheet$1(node) {
      var t1, t2, _i;
      for (t1 = node.children, t2 = t1.length, _i = 0; _i < t2; ++_i)
        t1[_i].accept$1(this);
      return null;
    },
    visitAtRootRule$1(node) {
      var t1, grandparent, root, innerCopy, t2, outerCopy, t3, copy, _this = this,
        _s8_ = "__parent",
        unparsedQuery = node.query,
        query = unparsedQuery != null ? _this._evaluate0$_adjustParseError$2(unparsedQuery, new A._EvaluateVisitor_visitAtRootRule_closure5(_this, _this._evaluate0$_performInterpolation$2$warnForColor(unparsedQuery, true))) : B.AtRootQuery_UsS0,
        $parent = _this._evaluate0$_assertInModule$2(_this._evaluate0$__parent, _s8_),
        included = A._setArrayType([], type$.JSArray_ModifiableCssParentNode_2);
      for (t1 = type$.CssStylesheet_2; !t1._is($parent); $parent = grandparent) {
        if (!query.excludes$1($parent))
          included.push($parent);
        grandparent = $parent._node1$_parent;
        if (grandparent == null)
          throw A.wrapException(A.StateError$(string$.CssNod));
      }
      root = _this._evaluate0$_trimIncluded$1(included);
      if (root === _this._evaluate0$_assertInModule$2(_this._evaluate0$__parent, _s8_)) {
        _this._evaluate0$_environment.scope$1$2$when(new A._EvaluateVisitor_visitAtRootRule_closure6(_this, node), node.hasDeclarations, type$.Null);
        return null;
      }
      if (included.length !== 0) {
        innerCopy = B.JSArray_methods.get$first(included).copyWithoutChildren$0();
        for (t1 = A.SubListIterable$(included, 1, null, type$.ModifiableCssParentNode_2), t1 = new A.ListIterator(t1, t1.get$length(t1)), t2 = A._instanceType(t1)._precomputed1, outerCopy = innerCopy; t1.moveNext$0(); outerCopy = copy) {
          t3 = t1.__internal$_current;
          copy = (t3 == null ? t2._as(t3) : t3).copyWithoutChildren$0();
          copy.addChild$1(outerCopy);
        }
        root.addChild$1(outerCopy);
      } else
        innerCopy = root;
      _this._evaluate0$_scopeForAtRoot$4(node, innerCopy, query, included).call$1(new A._EvaluateVisitor_visitAtRootRule_closure7(_this, node));
      return null;
    },
    _evaluate0$_trimIncluded$1(nodes) {
      var $parent, t1, innermostContiguous, i, t2, grandparent, root, _this = this, _null = null, _s5_ = "_root",
        _s22_ = " to be an ancestor of ";
      if (nodes.length === 0)
        return _this._evaluate0$_assertInModule$2(_this._evaluate0$__root, _s5_);
      $parent = _this._evaluate0$_assertInModule$2(_this._evaluate0$__parent, "__parent");
      for (t1 = nodes.length, innermostContiguous = _null, i = 0; i < t1; ++i, $parent = grandparent) {
        for (; t2 = nodes[i], $parent !== t2; innermostContiguous = _null, $parent = grandparent) {
          grandparent = $parent._node1$_parent;
          if (grandparent == null)
            throw A.wrapException(A.ArgumentError$("Expected " + t2.toString$0(0) + _s22_ + _this.toString$0(0) + ".", _null));
        }
        if (innermostContiguous == null)
          innermostContiguous = i;
        grandparent = $parent._node1$_parent;
        if (grandparent == null)
          throw A.wrapException(A.ArgumentError$("Expected " + t2.toString$0(0) + _s22_ + _this.toString$0(0) + ".", _null));
      }
      if ($parent !== _this._evaluate0$_assertInModule$2(_this._evaluate0$__root, _s5_))
        return _this._evaluate0$_assertInModule$2(_this._evaluate0$__root, _s5_);
      innermostContiguous.toString;
      root = nodes[innermostContiguous];
      B.JSArray_methods.removeRange$2(nodes, innermostContiguous, nodes.length);
      return root;
    },
    _evaluate0$_scopeForAtRoot$4(node, newParent, query, included) {
      var _this = this,
        scope = new A._EvaluateVisitor__scopeForAtRoot_closure11(_this, newParent, node),
        t1 = query._at_root_query0$_all || query._at_root_query0$_rule;
      if (t1 !== query.include)
        scope = new A._EvaluateVisitor__scopeForAtRoot_closure12(_this, scope);
      if (_this._evaluate0$_mediaQueries != null && query.excludesName$1("media"))
        scope = new A._EvaluateVisitor__scopeForAtRoot_closure13(_this, scope);
      if (_this._evaluate0$_inKeyframes && query.excludesName$1("keyframes"))
        scope = new A._EvaluateVisitor__scopeForAtRoot_closure14(_this, scope);
      return _this._evaluate0$_inUnknownAtRule && !B.JSArray_methods.any$1(included, new A._EvaluateVisitor__scopeForAtRoot_closure15()) ? new A._EvaluateVisitor__scopeForAtRoot_closure16(_this, scope) : scope;
    },
    visitContentBlock$1(node) {
      return A.throwExpression(A.UnsupportedError$(string$.Evalua));
    },
    visitContentRule$1(node) {
      var $content = this._evaluate0$_environment._environment0$_content;
      if ($content == null)
        return null;
      this._evaluate0$_runUserDefinedCallable$1$4(node.$arguments, $content, node, new A._EvaluateVisitor_visitContentRule_closure1(this, $content), type$.Null);
      return null;
    },
    visitDebugRule$1(node) {
      var value = node.expression.accept$1(this),
        t1 = value instanceof A.SassString0 ? value._string0$_text : A.serializeValue0(value, true, true);
      this._evaluate0$_logger.debug$2(0, t1, node.span);
      return null;
    },
    visitDeclaration$1(node) {
      var t1, $name, t2, cssValue, t3, t4, children, oldDeclarationName, _this = this, _null = null;
      if ((_this._evaluate0$_atRootExcludingStyleRule ? _null : _this._evaluate0$_styleRuleIgnoringAtRoot) == null && !_this._evaluate0$_inUnknownAtRule && !_this._evaluate0$_inKeyframes)
        throw A.wrapException(_this._evaluate0$_exception$2(string$.Declarm, node.span));
      t1 = node.name;
      $name = _this._evaluate0$_interpolationToValue$2$warnForColor(t1, true);
      t2 = _this._evaluate0$_declarationName;
      if (t2 != null)
        $name = new A.CssValue0(t2 + "-" + A.S($name.value), $name.span, type$.CssValue_String_2);
      t2 = node.value;
      cssValue = A.NullableExtension_andThen0(t2, new A._EvaluateVisitor_visitDeclaration_closure3(_this));
      t3 = cssValue != null;
      if (t3)
        t4 = !cssValue.get$value(cssValue).get$isBlank() || cssValue.get$value(cssValue).get$asList().length === 0;
      else
        t4 = false;
      if (t4) {
        t3 = _this._evaluate0$_assertInModule$2(_this._evaluate0$__parent, "__parent");
        t1 = B.JSString_methods.startsWith$1(t1.get$initialPlain(), "--");
        if (_this._evaluate0$_sourceMap) {
          t2 = A.NullableExtension_andThen0(t2, _this.get$_evaluate0$_expressionNode());
          t2 = t2 == null ? _null : J.get$span$z(t2);
        } else
          t2 = _null;
        t3.addChild$1(A.ModifiableCssDeclaration$0($name, cssValue, node.span, t1, t2));
      } else if (J.startsWith$1$s($name.value, "--") && t3)
        throw A.wrapException(_this._evaluate0$_exception$2("Custom property values may not be empty.", cssValue.get$span(cssValue)));
      children = node.children;
      if (children != null) {
        oldDeclarationName = _this._evaluate0$_declarationName;
        _this._evaluate0$_declarationName = $name.value;
        _this._evaluate0$_environment.scope$1$2$when(new A._EvaluateVisitor_visitDeclaration_closure4(_this, children), node.hasDeclarations, type$.Null);
        _this._evaluate0$_declarationName = oldDeclarationName;
      }
      return _null;
    },
    visitEachRule$1(node) {
      var _this = this,
        t1 = node.list,
        list = t1.accept$1(_this),
        nodeWithSpan = _this._evaluate0$_expressionNode$1(t1),
        setVariables = node.variables.length === 1 ? new A._EvaluateVisitor_visitEachRule_closure5(_this, node, nodeWithSpan) : new A._EvaluateVisitor_visitEachRule_closure6(_this, node, nodeWithSpan);
      return _this._evaluate0$_environment.scope$1$2$semiGlobal(new A._EvaluateVisitor_visitEachRule_closure7(_this, list, setVariables, node), true, type$.nullable_Value_2);
    },
    _evaluate0$_setMultipleVariables$3(variables, value, nodeWithSpan) {
      var i,
        list = value.get$asList(),
        t1 = variables.length,
        minLength = Math.min(t1, list.length);
      for (i = 0; i < minLength; ++i)
        this._evaluate0$_environment.setLocalVariable$3(variables[i], this._evaluate0$_withoutSlash$2(list[i], nodeWithSpan), nodeWithSpan);
      for (i = minLength; i < t1; ++i)
        this._evaluate0$_environment.setLocalVariable$3(variables[i], B.C__SassNull0, nodeWithSpan);
    },
    visitErrorRule$1(node) {
      throw A.wrapException(this._evaluate0$_exception$2(J.toString$0$(node.expression.accept$1(this)), node.span));
    },
    visitExtendRule$1(node) {
      var targetText, t1, t2, t3, _i, t4, _this = this,
        styleRule = _this._evaluate0$_atRootExcludingStyleRule ? null : _this._evaluate0$_styleRuleIgnoringAtRoot;
      if (styleRule == null || _this._evaluate0$_declarationName != null)
        throw A.wrapException(_this._evaluate0$_exception$2(string$.x40exten, node.span));
      targetText = _this._evaluate0$_interpolationToValue$2$warnForColor(node.selector, true);
      for (t1 = _this._evaluate0$_adjustParseError$2(targetText, new A._EvaluateVisitor_visitExtendRule_closure1(_this, targetText)).components, t2 = t1.length, t3 = type$.CompoundSelector_2, _i = 0; _i < t2; ++_i) {
        t4 = t1[_i].components;
        if (t4.length !== 1 || !(B.JSArray_methods.get$first(t4) instanceof A.CompoundSelector0))
          throw A.wrapException(A.SassFormatException$0("complex selectors may not be extended.", targetText.span));
        t4 = t3._as(B.JSArray_methods.get$first(t4)).components;
        if (t4.length !== 1)
          throw A.wrapException(A.SassFormatException$0(string$.compou + B.JSArray_methods.join$1(t4, ", ") + string$.x60_inst, targetText.span));
        _this._evaluate0$_assertInModule$2(_this._evaluate0$__extensionStore, "_extensionStore").addExtension$4(styleRule.selector, B.JSArray_methods.get$first(t4), node, _this._evaluate0$_mediaQueries);
      }
      return null;
    },
    visitAtRule$1(node) {
      var $name, value, children, wasInKeyframes, wasInUnknownAtRule, _this = this;
      if (_this._evaluate0$_declarationName != null)
        throw A.wrapException(_this._evaluate0$_exception$2(string$.At_rul, node.span));
      $name = _this._evaluate0$_interpolationToValue$1(node.name);
      value = A.NullableExtension_andThen0(node.value, new A._EvaluateVisitor_visitAtRule_closure5(_this));
      children = node.children;
      if (children == null) {
        _this._evaluate0$_assertInModule$2(_this._evaluate0$__parent, "__parent").addChild$1(A.ModifiableCssAtRule$0($name, node.span, true, value));
        return null;
      }
      wasInKeyframes = _this._evaluate0$_inKeyframes;
      wasInUnknownAtRule = _this._evaluate0$_inUnknownAtRule;
      if (A.unvendor0($name.value) === "keyframes")
        _this._evaluate0$_inKeyframes = true;
      else
        _this._evaluate0$_inUnknownAtRule = true;
      _this._evaluate0$_withParent$2$4$scopeWhen$through(A.ModifiableCssAtRule$0($name, node.span, false, value), new A._EvaluateVisitor_visitAtRule_closure6(_this, children), node.hasDeclarations, new A._EvaluateVisitor_visitAtRule_closure7(), type$.ModifiableCssAtRule_2, type$.Null);
      _this._evaluate0$_inUnknownAtRule = wasInUnknownAtRule;
      _this._evaluate0$_inKeyframes = wasInKeyframes;
      return null;
    },
    visitForRule$1(node) {
      var _this = this, t1 = {},
        t2 = node.from,
        fromNumber = _this._evaluate0$_addExceptionSpan$2(t2, new A._EvaluateVisitor_visitForRule_closure9(_this, node)),
        t3 = node.to,
        toNumber = _this._evaluate0$_addExceptionSpan$2(t3, new A._EvaluateVisitor_visitForRule_closure10(_this, node)),
        from = _this._evaluate0$_addExceptionSpan$2(t2, new A._EvaluateVisitor_visitForRule_closure11(fromNumber)),
        to = t1.to = _this._evaluate0$_addExceptionSpan$2(t3, new A._EvaluateVisitor_visitForRule_closure12(toNumber, fromNumber)),
        direction = from > to ? -1 : 1;
      if (from === (!node.isExclusive ? t1.to = to + direction : to))
        return null;
      return _this._evaluate0$_environment.scope$1$2$semiGlobal(new A._EvaluateVisitor_visitForRule_closure13(t1, _this, node, from, direction, fromNumber), true, type$.nullable_Value_2);
    },
    visitForwardRule$1(node) {
      var newConfiguration, t4, _i, variable, $name, _this = this,
        _s8_ = "@forward",
        oldConfiguration = _this._evaluate0$_configuration,
        adjustedConfiguration = oldConfiguration.throughForward$1(node),
        t1 = node.configuration,
        t2 = t1.length,
        t3 = node.url;
      if (t2 !== 0) {
        newConfiguration = _this._evaluate0$_addForwardConfiguration$2(adjustedConfiguration, node);
        _this._evaluate0$_loadModule$5$configuration(t3, _s8_, node, new A._EvaluateVisitor_visitForwardRule_closure3(_this, node), newConfiguration);
        t3 = type$.String;
        t4 = A.LinkedHashSet_LinkedHashSet$_empty(t3);
        for (_i = 0; _i < t2; ++_i) {
          variable = t1[_i];
          if (!variable.isGuarded)
            t4.add$1(0, variable.name);
        }
        _this._evaluate0$_removeUsedConfiguration$3$except(adjustedConfiguration, newConfiguration, t4);
        t3 = A.LinkedHashSet_LinkedHashSet$_empty(t3);
        for (_i = 0; _i < t2; ++_i)
          t3.add$1(0, t1[_i].name);
        for (t1 = newConfiguration._configuration$_values, t2 = J.toList$0$ax(t1.get$keys(t1)), t4 = t2.length, _i = 0; _i < t2.length; t2.length === t4 || (0, A.throwConcurrentModificationError)(t2), ++_i) {
          $name = t2[_i];
          if (!t3.contains$1(0, $name))
            if (!t1.get$isEmpty(t1))
              t1.remove$1(0, $name);
        }
        _this._evaluate0$_assertConfigurationIsEmpty$1(newConfiguration);
      } else {
        _this._evaluate0$_configuration = adjustedConfiguration;
        _this._evaluate0$_loadModule$4(t3, _s8_, node, new A._EvaluateVisitor_visitForwardRule_closure4(_this, node));
        _this._evaluate0$_configuration = oldConfiguration;
      }
      return null;
    },
    _evaluate0$_addForwardConfiguration$2(configuration, node) {
      var t2, t3, _i, variable, t4, t5, variableNodeWithSpan,
        t1 = configuration._configuration$_values,
        newValues = A.LinkedHashMap_LinkedHashMap$of(new A.UnmodifiableMapView(t1, type$.UnmodifiableMapView_String_ConfiguredValue_2), type$.String, type$.ConfiguredValue_2);
      for (t2 = node.configuration, t3 = t2.length, _i = 0; _i < t3; ++_i) {
        variable = t2[_i];
        if (variable.isGuarded) {
          t4 = variable.name;
          t5 = t1.get$isEmpty(t1) ? null : t1.remove$1(0, t4);
          if (t5 != null && !t5.value.$eq(0, B.C__SassNull0)) {
            newValues.$indexSet(0, t4, t5);
            continue;
          }
        }
        t4 = variable.expression;
        variableNodeWithSpan = this._evaluate0$_expressionNode$1(t4);
        newValues.$indexSet(0, variable.name, new A.ConfiguredValue0(this._evaluate0$_withoutSlash$2(t4.accept$1(this), variableNodeWithSpan), variable.span, variableNodeWithSpan));
      }
      if (configuration instanceof A.ExplicitConfiguration0 || t1.get$isEmpty(t1))
        return new A.ExplicitConfiguration0(node, newValues);
      else
        return new A.Configuration0(newValues);
    },
    _evaluate0$_removeUsedConfiguration$3$except(upstream, downstream, except) {
      var t1, t2, t3, t4, _i, $name;
      for (t1 = upstream._configuration$_values, t2 = J.toList$0$ax(t1.get$keys(t1)), t3 = t2.length, t4 = downstream._configuration$_values, _i = 0; _i < t2.length; t2.length === t3 || (0, A.throwConcurrentModificationError)(t2), ++_i) {
        $name = t2[_i];
        if (except.contains$1(0, $name))
          continue;
        if (!t4.containsKey$1($name))
          if (!t1.get$isEmpty(t1))
            t1.remove$1(0, $name);
      }
    },
    _evaluate0$_assertConfigurationIsEmpty$2$nameInError(configuration, nameInError) {
      var t1, entry;
      if (!(configuration instanceof A.ExplicitConfiguration0))
        return;
      t1 = configuration._configuration$_values;
      if (t1.get$isEmpty(t1))
        return;
      t1 = t1.get$entries(t1);
      entry = t1.get$first(t1);
      t1 = nameInError ? "$" + A.S(entry.key) + string$.x20was_n : string$.This_v;
      throw A.wrapException(this._evaluate0$_exception$2(t1, entry.value.configurationSpan));
    },
    _evaluate0$_assertConfigurationIsEmpty$1(configuration) {
      return this._evaluate0$_assertConfigurationIsEmpty$2$nameInError(configuration, false);
    },
    visitFunctionRule$1(node) {
      var t1 = this._evaluate0$_environment,
        t2 = t1.closure$0(),
        t3 = this._evaluate0$_inDependency,
        t4 = t1._environment0$_functions,
        index = t4.length - 1,
        t5 = node.name;
      t1._environment0$_functionIndices.$indexSet(0, t5, index);
      J.$indexSet$ax(t4[index], t5, new A.UserDefinedCallable0(node, t2, t3, type$.UserDefinedCallable_Environment_2));
      return null;
    },
    visitIfRule$1(node) {
      var t1, t2, _i, clauseToCheck, _box_0 = {};
      _box_0.clause = node.lastClause;
      for (t1 = node.clauses, t2 = t1.length, _i = 0; _i < t2; ++_i) {
        clauseToCheck = t1[_i];
        if (clauseToCheck.expression.accept$1(this).get$isTruthy()) {
          _box_0.clause = clauseToCheck;
          break;
        }
      }
      t1 = _box_0.clause;
      if (t1 == null)
        return null;
      return this._evaluate0$_environment.scope$1$3$semiGlobal$when(new A._EvaluateVisitor_visitIfRule_closure1(_box_0, this), true, t1.hasDeclarations, type$.nullable_Value_2);
    },
    visitImportRule$1(node) {
      var t1, t2, t3, t4, t5, t6, _i, $import, t7, result, $self, t8, _this = this,
        _s8_ = "__parent",
        _s5_ = "_root",
        _s13_ = "_endOfImports";
      for (t1 = node.imports, t2 = t1.length, t3 = type$.CssValue_String_2, t4 = _this.get$_evaluate0$_interpolationToValue(), t5 = type$.StaticImport_2, t6 = type$.JSArray_ModifiableCssImport_2, _i = 0; _i < t2; ++_i) {
        $import = t1[_i];
        if ($import instanceof A.DynamicImport0)
          _this._evaluate0$_visitDynamicImport$1($import);
        else {
          t5._as($import);
          t7 = $import.url;
          result = _this._evaluate0$_performInterpolation$2$warnForColor(t7, false);
          $self = $import.modifiers;
          t8 = $self == null ? null : t4.call$1($self);
          node = new A.ModifiableCssImport0(new A.CssValue0(result, t7.span, t3), t8, $import.span);
          if (_this._evaluate0$_assertInModule$2(_this._evaluate0$__parent, _s8_) !== _this._evaluate0$_assertInModule$2(_this._evaluate0$__root, _s5_))
            _this._evaluate0$_assertInModule$2(_this._evaluate0$__parent, _s8_).addChild$1(node);
          else if (_this._evaluate0$_assertInModule$2(_this._evaluate0$__endOfImports, _s13_) === J.get$length$asx(_this._evaluate0$_assertInModule$2(_this._evaluate0$__root, _s5_).children._collection$_source)) {
            t7 = _this._evaluate0$_assertInModule$2(_this._evaluate0$__root, _s5_);
            node._node1$_parent = t7;
            t7 = t7._node1$_children;
            node._node1$_indexInParent = t7.length;
            t7.push(node);
            _this._evaluate0$__endOfImports = _this._evaluate0$_assertInModule$2(_this._evaluate0$__endOfImports, _s13_) + 1;
          } else {
            t7 = _this._evaluate0$_outOfOrderImports;
            (t7 == null ? _this._evaluate0$_outOfOrderImports = A._setArrayType([], t6) : t7).push(node);
          }
        }
      }
      return null;
    },
    _evaluate0$_visitDynamicImport$1($import) {
      return this._evaluate0$_withStackFrame$3("@import", $import, new A._EvaluateVisitor__visitDynamicImport_closure1(this, $import));
    },
    _evaluate0$_loadStylesheet$4$baseUrl$forImport(url, span, baseUrl, forImport) {
      var importCache, tuple, isDependency, stylesheet, result, error, stackTrace, error0, stackTrace0, message, t1, t2, t3, t4, exception, message0, _this = this,
        _s11_ = "_stylesheet";
      baseUrl = baseUrl;
      try {
        _this._evaluate0$_importSpan = span;
        importCache = _this._evaluate0$_importCache;
        if (importCache != null) {
          if (baseUrl == null)
            baseUrl = _this._evaluate0$_assertInModule$2(_this._evaluate0$__stylesheet, _s11_).span.file.url;
          tuple = J.canonicalize$4$baseImporter$baseUrl$forImport$x(importCache, A.Uri_parse(url), _this._evaluate0$_importer, baseUrl, forImport);
          if (tuple != null) {
            isDependency = _this._evaluate0$_inDependency || tuple.item1 !== _this._evaluate0$_importer;
            t1 = tuple.item1;
            t2 = tuple.item2;
            t3 = tuple.item3;
            t4 = _this._evaluate0$_quietDeps && isDependency;
            stylesheet = importCache.importCanonical$4$originalUrl$quiet(t1, t2, t3, t4);
            if (stylesheet != null) {
              _this._evaluate0$_loadedUrls.add$1(0, tuple.item2);
              t1 = tuple.item1;
              return new A._LoadedStylesheet1(stylesheet, t1, isDependency);
            }
          }
        } else {
          t1 = baseUrl;
          result = _this._evaluate0$_importLikeNode$3(url, t1 == null ? _this._evaluate0$_assertInModule$2(_this._evaluate0$__stylesheet, _s11_).span.file.url : t1, forImport);
          if (result != null) {
            t1 = _this._evaluate0$_loadedUrls;
            A.NullableExtension_andThen0(result.stylesheet.span.file.url, t1.get$add(t1));
            return result;
          }
        }
        if (B.JSString_methods.startsWith$1(url, "package:") && true)
          throw A.wrapException(string$.x22packa);
        else
          throw A.wrapException("Can't find stylesheet to import.");
      } catch (exception) {
        t1 = A.unwrapException(exception);
        if (t1 instanceof A.SassException0) {
          error = t1;
          stackTrace = A.getTraceFromException(exception);
          t1 = error;
          t2 = J.getInterceptor$z(t1);
          A.throwWithTrace0(_this._evaluate0$_exception$2(error._span_exception$_message, A.SourceSpanException.prototype.get$span.call(t2, t1)), stackTrace);
        } else {
          error0 = t1;
          stackTrace0 = A.getTraceFromException(exception);
          message = null;
          try {
            message = A._asString(J.get$message$x(error0));
          } catch (exception) {
            message0 = J.toString$0$(error0);
            message = message0;
          }
          A.throwWithTrace0(_this._evaluate0$_exception$1(message), stackTrace0);
        }
      } finally {
        _this._evaluate0$_importSpan = null;
      }
    },
    _evaluate0$_loadStylesheet$3$baseUrl(url, span, baseUrl) {
      return this._evaluate0$_loadStylesheet$4$baseUrl$forImport(url, span, baseUrl, false);
    },
    _evaluate0$_loadStylesheet$3$forImport(url, span, forImport) {
      return this._evaluate0$_loadStylesheet$4$baseUrl$forImport(url, span, null, forImport);
    },
    _evaluate0$_importLikeNode$3(originalUrl, previous, forImport) {
      var isDependency, url, t2, _this = this,
        t1 = _this._evaluate0$_nodeImporter,
        result = t1.loadRelative$3(originalUrl, previous, forImport);
      if (result != null)
        isDependency = _this._evaluate0$_inDependency;
      else {
        result = t1.load$3(0, originalUrl, previous, forImport);
        if (result == null)
          return null;
        isDependency = true;
      }
      url = result.item2;
      t1 = B.JSString_methods.startsWith$1(url, "file") ? A.Syntax_forPath0(url) : B.Syntax_SCSS0;
      t2 = _this._evaluate0$_quietDeps && isDependency ? $.$get$Logger_quiet0() : _this._evaluate0$_logger;
      return new A._LoadedStylesheet1(A.Stylesheet_Stylesheet$parse0(result.item1, t1, t2, url), null, isDependency);
    },
    visitIncludeRule$1(node) {
      var nodeWithSpan, t1, _this = this,
        _s37_ = "Mixin doesn't accept a content block.",
        mixin = _this._evaluate0$_addExceptionSpan$2(node, new A._EvaluateVisitor_visitIncludeRule_closure7(_this, node));
      if (mixin == null)
        throw A.wrapException(_this._evaluate0$_exception$2("Undefined mixin.", node.span));
      nodeWithSpan = new A._FakeAstNode0(new A._EvaluateVisitor_visitIncludeRule_closure8(node));
      if (mixin instanceof A.BuiltInCallable0) {
        if (node.content != null)
          throw A.wrapException(_this._evaluate0$_exception$2(_s37_, node.span));
        _this._evaluate0$_runBuiltInCallable$3(node.$arguments, mixin, nodeWithSpan);
      } else if (type$.UserDefinedCallable_Environment_2._is(mixin)) {
        t1 = node.content;
        if (t1 != null && !type$.MixinRule_2._as(mixin.declaration).get$hasContent())
          throw A.wrapException(A.MultiSpanSassRuntimeException$0(_s37_, node.get$spanWithoutContent(), "invocation", A.LinkedHashMap_LinkedHashMap$_literal([mixin.declaration.$arguments.get$spanWithName(), "declaration"], type$.FileSpan, type$.String), _this._evaluate0$_stackTrace$1(node.get$spanWithoutContent())));
        _this._evaluate0$_runUserDefinedCallable$1$4(node.$arguments, mixin, nodeWithSpan, new A._EvaluateVisitor_visitIncludeRule_closure9(_this, A.NullableExtension_andThen0(t1, new A._EvaluateVisitor_visitIncludeRule_closure10(_this)), mixin, nodeWithSpan), type$.Null);
      } else
        throw A.wrapException(A.UnsupportedError$("Unknown callable type " + mixin.toString$0(0) + "."));
      return null;
    },
    visitMixinRule$1(node) {
      var t1 = this._evaluate0$_environment,
        t2 = t1.closure$0(),
        t3 = this._evaluate0$_inDependency,
        t4 = t1._environment0$_mixins,
        index = t4.length - 1,
        t5 = node.name;
      t1._environment0$_mixinIndices.$indexSet(0, t5, index);
      J.$indexSet$ax(t4[index], t5, new A.UserDefinedCallable0(node, t2, t3, type$.UserDefinedCallable_Environment_2));
      return null;
    },
    visitLoudComment$1(node) {
      var t1, _this = this,
        _s8_ = "__parent",
        _s13_ = "_endOfImports";
      if (_this._evaluate0$_inFunction)
        return null;
      if (_this._evaluate0$_assertInModule$2(_this._evaluate0$__parent, _s8_) === _this._evaluate0$_assertInModule$2(_this._evaluate0$__root, "_root") && _this._evaluate0$_assertInModule$2(_this._evaluate0$__endOfImports, _s13_) === J.get$length$asx(_this._evaluate0$_assertInModule$2(_this._evaluate0$__root, "_root").children._collection$_source))
        _this._evaluate0$__endOfImports = _this._evaluate0$_assertInModule$2(_this._evaluate0$__endOfImports, _s13_) + 1;
      t1 = node.text;
      _this._evaluate0$_assertInModule$2(_this._evaluate0$__parent, _s8_).addChild$1(new A.ModifiableCssComment0(_this._evaluate0$_performInterpolation$1(t1), t1.span));
      return null;
    },
    visitMediaRule$1(node) {
      var queries, mergedQueries, t1, _this = this;
      if (_this._evaluate0$_declarationName != null)
        throw A.wrapException(_this._evaluate0$_exception$2(string$.Media_, node.span));
      queries = _this._evaluate0$_visitMediaQueries$1(node.query);
      mergedQueries = A.NullableExtension_andThen0(_this._evaluate0$_mediaQueries, new A._EvaluateVisitor_visitMediaRule_closure5(_this, queries));
      t1 = mergedQueries == null;
      if (!t1 && J.get$isEmpty$asx(mergedQueries))
        return null;
      t1 = t1 ? queries : mergedQueries;
      _this._evaluate0$_withParent$2$4$scopeWhen$through(A.ModifiableCssMediaRule$0(t1, node.span), new A._EvaluateVisitor_visitMediaRule_closure6(_this, mergedQueries, queries, node), node.hasDeclarations, new A._EvaluateVisitor_visitMediaRule_closure7(mergedQueries), type$.ModifiableCssMediaRule_2, type$.Null);
      return null;
    },
    _evaluate0$_visitMediaQueries$1(interpolation) {
      return this._evaluate0$_adjustParseError$2(interpolation, new A._EvaluateVisitor__visitMediaQueries_closure1(this, this._evaluate0$_performInterpolation$2$warnForColor(interpolation, true)));
    },
    _evaluate0$_mergeMediaQueries$2(queries1, queries2) {
      var t1, t2, t3, t4, t5, result,
        queries = A._setArrayType([], type$.JSArray_CssMediaQuery_2);
      for (t1 = J.get$iterator$ax(queries1), t2 = J.getInterceptor$ax(queries2), t3 = type$.MediaQuerySuccessfulMergeResult_2; t1.moveNext$0();) {
        t4 = t1.get$current(t1);
        for (t5 = t2.get$iterator(queries2); t5.moveNext$0();) {
          result = t4.merge$1(t5.get$current(t5));
          if (result === B._SingletonCssMediaQueryMergeResult_empty0)
            continue;
          if (result === B._SingletonCssMediaQueryMergeResult_unrepresentable0)
            return null;
          queries.push(t3._as(result).query);
        }
      }
      return queries;
    },
    visitReturnRule$1(node) {
      var t1 = node.expression;
      return this._evaluate0$_withoutSlash$2(t1.accept$1(this), t1);
    },
    visitSilentComment$1(node) {
      return null;
    },
    visitStyleRule$1(node) {
      var t2, selectorText, rule, oldAtRootExcludingStyleRule, _this = this,
        _s8_ = "__parent",
        t1 = {};
      if (_this._evaluate0$_declarationName != null)
        throw A.wrapException(_this._evaluate0$_exception$2(string$.Style_, node.span));
      t2 = node.selector;
      selectorText = _this._evaluate0$_interpolationToValue$3$trim$warnForColor(t2, true, true);
      if (_this._evaluate0$_inKeyframes) {
        _this._evaluate0$_withParent$2$4$scopeWhen$through(A.ModifiableCssKeyframeBlock$0(new A.CssValue0(A.List_List$unmodifiable(_this._evaluate0$_adjustParseError$2(t2, new A._EvaluateVisitor_visitStyleRule_closure13(_this, selectorText)), type$.String), t2.span, type$.CssValue_List_String_2), node.span), new A._EvaluateVisitor_visitStyleRule_closure14(_this, node), node.hasDeclarations, new A._EvaluateVisitor_visitStyleRule_closure15(), type$.ModifiableCssKeyframeBlock_2, type$.Null);
        return null;
      }
      t1.parsedSelector = _this._evaluate0$_adjustParseError$2(t2, new A._EvaluateVisitor_visitStyleRule_closure16(_this, selectorText));
      t1.parsedSelector = _this._evaluate0$_addExceptionSpan$2(t2, new A._EvaluateVisitor_visitStyleRule_closure17(t1, _this));
      rule = A.ModifiableCssStyleRule$0(_this._evaluate0$_assertInModule$2(_this._evaluate0$__extensionStore, "_extensionStore").addSelector$3(t1.parsedSelector, t2.span, _this._evaluate0$_mediaQueries), node.span, t1.parsedSelector);
      oldAtRootExcludingStyleRule = _this._evaluate0$_atRootExcludingStyleRule;
      t1 = _this._evaluate0$_atRootExcludingStyleRule = false;
      _this._evaluate0$_withParent$2$4$scopeWhen$through(rule, new A._EvaluateVisitor_visitStyleRule_closure18(_this, rule, node), node.hasDeclarations, new A._EvaluateVisitor_visitStyleRule_closure19(), type$.ModifiableCssStyleRule_2, type$.Null);
      _this._evaluate0$_atRootExcludingStyleRule = oldAtRootExcludingStyleRule;
      if ((oldAtRootExcludingStyleRule ? null : _this._evaluate0$_styleRuleIgnoringAtRoot) == null) {
        t1 = _this._evaluate0$_assertInModule$2(_this._evaluate0$__parent, _s8_).children;
        t1 = !t1.get$isEmpty(t1);
      }
      if (t1) {
        t1 = _this._evaluate0$_assertInModule$2(_this._evaluate0$__parent, _s8_).children;
        t1.get$last(t1).isGroupEnd = true;
      }
      return null;
    },
    visitSupportsRule$1(node) {
      var t1, _this = this;
      if (_this._evaluate0$_declarationName != null)
        throw A.wrapException(_this._evaluate0$_exception$2(string$.Suppor, node.span));
      t1 = node.condition;
      _this._evaluate0$_withParent$2$4$scopeWhen$through(A.ModifiableCssSupportsRule$0(new A.CssValue0(_this._evaluate0$_visitSupportsCondition$1(t1), t1.get$span(t1), type$.CssValue_String_2), node.span), new A._EvaluateVisitor_visitSupportsRule_closure3(_this, node), node.hasDeclarations, new A._EvaluateVisitor_visitSupportsRule_closure4(), type$.ModifiableCssSupportsRule_2, type$.Null);
      return null;
    },
    _evaluate0$_visitSupportsCondition$1(condition) {
      var t1, oldInSupportsDeclaration, t2, t3, _this = this;
      if (condition instanceof A.SupportsOperation0) {
        t1 = condition.operator;
        return _this._evaluate0$_parenthesize$2(condition.left, t1) + " " + t1 + " " + _this._evaluate0$_parenthesize$2(condition.right, t1);
      } else if (condition instanceof A.SupportsNegation0)
        return "not " + _this._evaluate0$_parenthesize$1(condition.condition);
      else if (condition instanceof A.SupportsInterpolation0) {
        t1 = condition.expression;
        return _this._evaluate0$_serialize$3$quote(t1.accept$1(_this), t1, false);
      } else if (condition instanceof A.SupportsDeclaration0) {
        oldInSupportsDeclaration = _this._evaluate0$_inSupportsDeclaration;
        _this._evaluate0$_inSupportsDeclaration = true;
        t1 = condition.name;
        t1 = _this._evaluate0$_serialize$3$quote(t1.accept$1(_this), t1, true);
        t2 = condition.get$isCustomProperty() ? "" : " ";
        t3 = condition.value;
        t3 = _this._evaluate0$_serialize$3$quote(t3.accept$1(_this), t3, true);
        _this._evaluate0$_inSupportsDeclaration = oldInSupportsDeclaration;
        return "(" + t1 + ":" + t2 + t3 + ")";
      } else if (condition instanceof A.SupportsFunction0)
        return _this._evaluate0$_performInterpolation$1(condition.name) + "(" + _this._evaluate0$_performInterpolation$1(condition.$arguments) + ")";
      else if (condition instanceof A.SupportsAnything0)
        return "(" + _this._evaluate0$_performInterpolation$1(condition.contents) + ")";
      else
        throw A.wrapException(A.ArgumentError$("Unknown supports condition type " + A.getRuntimeType(condition).toString$0(0) + ".", null));
    },
    _evaluate0$_parenthesize$2(condition, operator) {
      var t1;
      if (!(condition instanceof A.SupportsNegation0))
        if (condition instanceof A.SupportsOperation0)
          t1 = operator == null || operator !== condition.operator;
        else
          t1 = false;
      else
        t1 = true;
      if (t1)
        return "(" + this._evaluate0$_visitSupportsCondition$1(condition) + ")";
      else
        return this._evaluate0$_visitSupportsCondition$1(condition);
    },
    _evaluate0$_parenthesize$1(condition) {
      return this._evaluate0$_parenthesize$2(condition, null);
    },
    visitVariableDeclaration$1(node) {
      var t1, value, _this = this, _null = null;
      if (node.isGuarded) {
        if (node.namespace == null && _this._evaluate0$_environment._environment0$_variables.length === 1) {
          t1 = _this._evaluate0$_configuration._configuration$_values;
          t1 = t1.get$isEmpty(t1) ? _null : t1.remove$1(0, node.name);
          if (t1 != null && !t1.value.$eq(0, B.C__SassNull0)) {
            _this._evaluate0$_addExceptionSpan$2(node, new A._EvaluateVisitor_visitVariableDeclaration_closure5(_this, node, t1));
            return _null;
          }
        }
        value = _this._evaluate0$_addExceptionSpan$2(node, new A._EvaluateVisitor_visitVariableDeclaration_closure6(_this, node));
        if (value != null && !value.$eq(0, B.C__SassNull0))
          return _null;
      }
      if (node.isGlobal && !_this._evaluate0$_environment.globalVariableExists$1(node.name)) {
        t1 = _this._evaluate0$_environment._environment0$_variables.length === 1 ? string$.As_of_S : string$.As_of_R + A.declarationName0(node.span) + ": null` at the stylesheet root.";
        _this._evaluate0$_warn$3$deprecation(t1, node.span, true);
      }
      t1 = node.expression;
      _this._evaluate0$_addExceptionSpan$2(node, new A._EvaluateVisitor_visitVariableDeclaration_closure7(_this, node, _this._evaluate0$_withoutSlash$2(t1.accept$1(_this), t1)));
      return _null;
    },
    visitUseRule$1(node) {
      var values, _i, variable, t3, variableNodeWithSpan, configuration, _this = this,
        t1 = node.configuration,
        t2 = t1.length;
      if (t2 !== 0) {
        values = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.ConfiguredValue_2);
        for (_i = 0; _i < t2; ++_i) {
          variable = t1[_i];
          t3 = variable.expression;
          variableNodeWithSpan = _this._evaluate0$_expressionNode$1(t3);
          values.$indexSet(0, variable.name, new A.ConfiguredValue0(_this._evaluate0$_withoutSlash$2(t3.accept$1(_this), variableNodeWithSpan), variable.span, variableNodeWithSpan));
        }
        configuration = new A.ExplicitConfiguration0(node, values);
      } else
        configuration = B.Configuration_Map_empty0;
      _this._evaluate0$_loadModule$5$configuration(node.url, "@use", node, new A._EvaluateVisitor_visitUseRule_closure1(_this, node), configuration);
      _this._evaluate0$_assertConfigurationIsEmpty$1(configuration);
      return null;
    },
    visitWarnRule$1(node) {
      var _this = this,
        value = _this._evaluate0$_addExceptionSpan$2(node, new A._EvaluateVisitor_visitWarnRule_closure1(_this, node)),
        t1 = value instanceof A.SassString0 ? value._string0$_text : _this._evaluate0$_serialize$2(value, node.expression);
      _this._evaluate0$_logger.warn$2$trace(0, t1, _this._evaluate0$_stackTrace$1(node.span));
      return null;
    },
    visitWhileRule$1(node) {
      return this._evaluate0$_environment.scope$1$3$semiGlobal$when(new A._EvaluateVisitor_visitWhileRule_closure1(this, node), true, node.hasDeclarations, type$.nullable_Value_2);
    },
    visitBinaryOperationExpression$1(node) {
      return this._evaluate0$_addExceptionSpan$2(node, new A._EvaluateVisitor_visitBinaryOperationExpression_closure1(this, node));
    },
    visitValueExpression$1(node) {
      return node.value;
    },
    visitVariableExpression$1(node) {
      var result = this._evaluate0$_addExceptionSpan$2(node, new A._EvaluateVisitor_visitVariableExpression_closure1(this, node));
      if (result != null)
        return result;
      throw A.wrapException(this._evaluate0$_exception$2("Undefined variable.", node.span));
    },
    visitUnaryOperationExpression$1(node) {
      return this._evaluate0$_addExceptionSpan$2(node, new A._EvaluateVisitor_visitUnaryOperationExpression_closure1(node, node.operand.accept$1(this)));
    },
    visitBooleanExpression$1(node) {
      return node.value ? B.SassBoolean_true0 : B.SassBoolean_false0;
    },
    visitIfExpression$1(node) {
      var condition, t2, ifTrue, ifFalse, result, _this = this,
        pair = _this._evaluate0$_evaluateMacroArguments$1(node),
        positional = pair.item1,
        named = pair.item2,
        t1 = J.getInterceptor$asx(positional);
      _this._evaluate0$_verifyArguments$4(t1.get$length(positional), named, $.$get$IfExpression_declaration0(), node);
      if (t1.get$length(positional) > 0)
        condition = t1.$index(positional, 0);
      else {
        t2 = named.$index(0, "condition");
        t2.toString;
        condition = t2;
      }
      if (t1.get$length(positional) > 1)
        ifTrue = t1.$index(positional, 1);
      else {
        t2 = named.$index(0, "if-true");
        t2.toString;
        ifTrue = t2;
      }
      if (t1.get$length(positional) > 2)
        ifFalse = t1.$index(positional, 2);
      else {
        t1 = named.$index(0, "if-false");
        t1.toString;
        ifFalse = t1;
      }
      result = condition.accept$1(_this).get$isTruthy() ? ifTrue : ifFalse;
      return _this._evaluate0$_withoutSlash$2(result.accept$1(_this), _this._evaluate0$_expressionNode$1(result));
    },
    visitNullExpression$1(node) {
      return B.C__SassNull0;
    },
    visitNumberExpression$1(node) {
      var t1 = node.value,
        t2 = node.unit;
      return t2 == null ? new A.UnitlessSassNumber0(t1, null) : new A.SingleUnitSassNumber0(t2, t1, null);
    },
    visitParenthesizedExpression$1(node) {
      return node.expression.accept$1(this);
    },
    visitCalculationExpression$1(node) {
      var $arguments, error, stackTrace, t2, t3, t4, t5, t6, _i, argument, exception, _this = this,
        t1 = A._setArrayType([], type$.JSArray_Object);
      for (t2 = node.$arguments, t3 = t2.length, t4 = node.name, t5 = t4 !== "min", t6 = t4 === "max", _i = 0; _i < t3; ++_i) {
        argument = t2[_i];
        t1.push(_this._evaluate0$_visitCalculationValue$2$inMinMax(argument, !t5 || t6));
      }
      $arguments = t1;
      if (_this._evaluate0$_inSupportsDeclaration)
        return new A.SassCalculation0(t4, A.List_List$unmodifiable($arguments, type$.Object));
      try {
        switch (t4) {
          case "calc":
            t1 = A.SassCalculation_calc0(J.$index$asx($arguments, 0));
            return t1;
          case "min":
            t1 = A.SassCalculation_min0($arguments);
            return t1;
          case "max":
            t1 = A.SassCalculation_max0($arguments);
            return t1;
          case "clamp":
            t1 = J.$index$asx($arguments, 0);
            t3 = J.get$length$asx($arguments) > 1 ? J.$index$asx($arguments, 1) : null;
            t1 = A.SassCalculation_clamp0(t1, t3, J.get$length$asx($arguments) > 2 ? J.$index$asx($arguments, 2) : null);
            return t1;
          default:
            t1 = A.UnsupportedError$('Unknown calculation name "' + t4 + '".');
            throw A.wrapException(t1);
        }
      } catch (exception) {
        t1 = A.unwrapException(exception);
        if (t1 instanceof A.SassScriptException0) {
          error = t1;
          stackTrace = A.getTraceFromException(exception);
          _this._evaluate0$_verifyCompatibleNumbers$2($arguments, t2);
          A.throwWithTrace0(_this._evaluate0$_exception$2(error.message, node.span), stackTrace);
        } else
          throw exception;
      }
    },
    _evaluate0$_verifyCompatibleNumbers$2(args, nodesWithSpans) {
      var i, t1, arg, number1, j, number2;
      for (i = 0; t1 = args.length, i < t1; ++i) {
        arg = args[i];
        if (!(arg instanceof A.SassNumber0))
          continue;
        if (arg.get$numeratorUnits(arg).length > 1 || arg.get$denominatorUnits(arg).length !== 0)
          throw A.wrapException(this._evaluate0$_exception$2("Number " + arg.toString$0(0) + " isn't compatible with CSS calculations.", J.get$span$z(nodesWithSpans[i])));
      }
      for (i = 0; i < t1 - 1; ++i) {
        number1 = args[i];
        if (!(number1 instanceof A.SassNumber0))
          continue;
        for (j = i + 1; t1 = args.length, j < t1; ++j) {
          number2 = args[j];
          if (!(number2 instanceof A.SassNumber0))
            continue;
          if (number1.hasPossiblyCompatibleUnits$1(number2))
            continue;
          throw A.wrapException(A.MultiSpanSassRuntimeException$0(number1.toString$0(0) + " and " + number2.toString$0(0) + " are incompatible.", J.get$span$z(nodesWithSpans[i]), number1.toString$0(0), A.LinkedHashMap_LinkedHashMap$_literal([J.get$span$z(nodesWithSpans[j]), number2.toString$0(0)], type$.FileSpan, type$.String), this._evaluate0$_stackTrace$1(J.get$span$z(nodesWithSpans[i]))));
        }
      }
    },
    _evaluate0$_visitCalculationValue$2$inMinMax(node, inMinMax) {
      var inner, result, t1, _this = this;
      if (node instanceof A.ParenthesizedExpression0) {
        inner = node.expression;
        result = _this._evaluate0$_visitCalculationValue$2$inMinMax(inner, inMinMax);
        if (inner instanceof A.FunctionExpression0)
          t1 = A.stringReplaceAllUnchecked(inner.originalName, "_", "-").toLowerCase() === "var" && result instanceof A.SassString0 && !result._string0$_hasQuotes;
        else
          t1 = false;
        return t1 ? new A.SassString0("(" + result._string0$_text + ")", false) : result;
      } else if (node instanceof A.StringExpression0)
        return new A.CalculationInterpolation0(_this._evaluate0$_performInterpolation$1(node.text));
      else if (node instanceof A.BinaryOperationExpression0)
        return _this._evaluate0$_addExceptionSpan$2(node, new A._EvaluateVisitor__visitCalculationValue_closure1(_this, node, inMinMax));
      else {
        result = node.accept$1(_this);
        if (result instanceof A.SassNumber0 || result instanceof A.SassCalculation0)
          return result;
        if (result instanceof A.SassString0 && !result._string0$_hasQuotes)
          return result;
        throw A.wrapException(_this._evaluate0$_exception$2("Value " + result.toString$0(0) + " can't be used in a calculation.", node.get$span(node)));
      }
    },
    _evaluate0$_binaryOperatorToCalculationOperator$1(operator) {
      switch (operator) {
        case B.BinaryOperator_AcR2:
          return B.CalculationOperator_Iem0;
        case B.BinaryOperator_iyO0:
          return B.CalculationOperator_uti0;
        case B.BinaryOperator_O1M0:
          return B.CalculationOperator_Dih0;
        case B.BinaryOperator_RTB0:
          return B.CalculationOperator_jB60;
        default:
          throw A.wrapException(A.UnsupportedError$("Invalid calculation operator " + operator.toString$0(0) + "."));
      }
    },
    visitColorExpression$1(node) {
      return node.value;
    },
    visitListExpression$1(node) {
      var t1 = node.contents;
      return A.SassList$0(new A.MappedListIterable(t1, new A._EvaluateVisitor_visitListExpression_closure1(this), A._arrayInstanceType(t1)._eval$1("MappedListIterable<1,Value0>")), node.separator, node.hasBrackets);
    },
    visitMapExpression$1(node) {
      var t2, t3, _i, pair, t4, keyValue, valueValue, oldValueSpan,
        t1 = type$.Value_2,
        map = A.LinkedHashMap_LinkedHashMap$_empty(t1, t1),
        keyNodes = A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.AstNode_2);
      for (t2 = node.pairs, t3 = t2.length, _i = 0; _i < t3; ++_i) {
        pair = t2[_i];
        t4 = pair.item1;
        keyValue = t4.accept$1(this);
        valueValue = pair.item2.accept$1(this);
        if (map.$index(0, keyValue) != null) {
          t1 = keyNodes.$index(0, keyValue);
          oldValueSpan = t1 == null ? null : t1.get$span(t1);
          t1 = J.getInterceptor$z(t4);
          t2 = t1.get$span(t4);
          t3 = A.LinkedHashMap_LinkedHashMap$_empty(type$.FileSpan, type$.String);
          if (oldValueSpan != null)
            t3.$indexSet(0, oldValueSpan, "first key");
          throw A.wrapException(A.MultiSpanSassRuntimeException$0("Duplicate key.", t2, "second key", t3, this._evaluate0$_stackTrace$1(t1.get$span(t4))));
        }
        map.$indexSet(0, keyValue, valueValue);
        keyNodes.$indexSet(0, keyValue, t4);
      }
      return new A.SassMap0(A.ConstantMap_ConstantMap$from(map, t1, t1));
    },
    visitFunctionExpression$1(node) {
      var oldInFunction, result, _this = this, t1 = {},
        $function = _this._evaluate0$_addExceptionSpan$2(node, new A._EvaluateVisitor_visitFunctionExpression_closure3(_this, node));
      t1.$function = $function;
      if ($function == null) {
        if (node.namespace != null)
          throw A.wrapException(_this._evaluate0$_exception$2("Undefined function.", node.span));
        t1.$function = new A.PlainCssCallable0(node.originalName);
      }
      oldInFunction = _this._evaluate0$_inFunction;
      _this._evaluate0$_inFunction = true;
      result = _this._evaluate0$_addErrorSpan$2(node, new A._EvaluateVisitor_visitFunctionExpression_closure4(t1, _this, node));
      _this._evaluate0$_inFunction = oldInFunction;
      return result;
    },
    visitInterpolatedFunctionExpression$1(node) {
      var result, _this = this,
        t1 = _this._evaluate0$_performInterpolation$1(node.name),
        oldInFunction = _this._evaluate0$_inFunction;
      _this._evaluate0$_inFunction = true;
      result = _this._evaluate0$_addErrorSpan$2(node, new A._EvaluateVisitor_visitInterpolatedFunctionExpression_closure1(_this, node, new A.PlainCssCallable0(t1)));
      _this._evaluate0$_inFunction = oldInFunction;
      return result;
    },
    _evaluate0$_getFunction$2$namespace($name, namespace) {
      var local = this._evaluate0$_environment.getFunction$2$namespace($name, namespace);
      if (local != null || namespace != null)
        return local;
      return this._evaluate0$_builtInFunctions.$index(0, $name);
    },
    _evaluate0$_runUserDefinedCallable$1$4($arguments, callable, nodeWithSpan, run, $V) {
      var oldCallable, result, _this = this,
        evaluated = _this._evaluate0$_evaluateArguments$1($arguments),
        $name = callable.declaration.name;
      if ($name !== "@content")
        $name += "()";
      oldCallable = _this._evaluate0$_currentCallable;
      _this._evaluate0$_currentCallable = callable;
      result = _this._evaluate0$_withStackFrame$3($name, nodeWithSpan, new A._EvaluateVisitor__runUserDefinedCallable_closure1(_this, callable, evaluated, nodeWithSpan, run, $V));
      _this._evaluate0$_currentCallable = oldCallable;
      return result;
    },
    _evaluate0$_runFunctionCallable$3($arguments, callable, nodeWithSpan) {
      var t1, t2, t3, first, _i, argument, restArg, rest, _this = this;
      if (callable instanceof A.BuiltInCallable0)
        return _this._evaluate0$_withoutSlash$2(_this._evaluate0$_runBuiltInCallable$3($arguments, callable, nodeWithSpan), nodeWithSpan);
      else if (type$.UserDefinedCallable_Environment_2._is(callable))
        return _this._evaluate0$_runUserDefinedCallable$1$4($arguments, callable, nodeWithSpan, new A._EvaluateVisitor__runFunctionCallable_closure1(_this, callable), type$.Value_2);
      else if (callable instanceof A.PlainCssCallable0) {
        t1 = $arguments.named;
        if (t1.get$isNotEmpty(t1) || $arguments.keywordRest != null)
          throw A.wrapException(_this._evaluate0$_exception$2(string$.Plain_, nodeWithSpan.get$span(nodeWithSpan)));
        t1 = callable.name + "(";
        for (t2 = $arguments.positional, t3 = t2.length, first = true, _i = 0; _i < t3; ++_i) {
          argument = t2[_i];
          if (first)
            first = false;
          else
            t1 += ", ";
          t1 += _this._evaluate0$_serialize$3$quote(argument.accept$1(_this), argument, true);
        }
        restArg = $arguments.rest;
        if (restArg != null) {
          rest = restArg.accept$1(_this);
          if (!first)
            t1 += ", ";
          t1 += _this._evaluate0$_serialize$2(rest, restArg);
        }
        t1 += A.Primitives_stringFromCharCode(41);
        return new A.SassString0(t1.charCodeAt(0) == 0 ? t1 : t1, false);
      } else
        throw A.wrapException(A.ArgumentError$("Unknown callable type " + J.get$runtimeType$u(callable).toString$0(0) + ".", null));
    },
    _evaluate0$_runBuiltInCallable$3($arguments, callable, nodeWithSpan) {
      var callback, result, error, stackTrace, error0, stackTrace0, error1, stackTrace1, message, namedSet, tuple, overload, declaredArguments, i, t1, argument, t2, t3, rest, argumentList, exception, t4, t5, t6, message0, _this = this,
        evaluated = _this._evaluate0$_evaluateArguments$1($arguments),
        oldCallableNode = _this._evaluate0$_callableNode;
      _this._evaluate0$_callableNode = nodeWithSpan;
      namedSet = new A.MapKeySet(evaluated.named, type$.MapKeySet_String);
      tuple = callable.callbackFor$2(evaluated.positional.length, namedSet);
      overload = tuple.item1;
      callback = tuple.item2;
      _this._evaluate0$_addExceptionSpan$2(nodeWithSpan, new A._EvaluateVisitor__runBuiltInCallable_closure3(overload, evaluated, namedSet));
      declaredArguments = overload.$arguments;
      for (i = evaluated.positional.length, t1 = declaredArguments.length; i < t1; ++i) {
        argument = declaredArguments[i];
        t2 = evaluated.positional;
        t3 = evaluated.named.remove$1(0, argument.name);
        if (t3 == null) {
          t3 = argument.defaultValue;
          t3 = _this._evaluate0$_withoutSlash$2(t3.accept$1(_this), t3);
        }
        t2.push(t3);
      }
      if (overload.restArgument != null) {
        if (evaluated.positional.length > t1) {
          rest = B.JSArray_methods.sublist$1(evaluated.positional, t1);
          B.JSArray_methods.removeRange$2(evaluated.positional, t1, evaluated.positional.length);
        } else
          rest = B.List_empty15;
        t1 = evaluated.named;
        argumentList = A.SassArgumentList$0(rest, t1, evaluated.separator === B.ListSeparator_undecided_null0 ? B.ListSeparator_kWM0 : evaluated.separator);
        evaluated.positional.push(argumentList);
      } else
        argumentList = null;
      result = null;
      try {
        result = callback.call$1(evaluated.positional);
      } catch (exception) {
        t1 = A.unwrapException(exception);
        if (type$.SassRuntimeException_2._is(t1))
          throw exception;
        else if (t1 instanceof A.MultiSpanSassScriptException0) {
          error = t1;
          stackTrace = A.getTraceFromException(exception);
          t1 = error.message;
          t2 = nodeWithSpan.get$span(nodeWithSpan);
          t3 = error.primaryLabel;
          t4 = error.secondarySpans;
          A.throwWithTrace0(new A.MultiSpanSassRuntimeException0(_this._evaluate0$_stackTrace$1(nodeWithSpan.get$span(nodeWithSpan)), t3, A.ConstantMap_ConstantMap$from(t4, type$.FileSpan, type$.String), t1, t2), stackTrace);
        } else if (t1 instanceof A.MultiSpanSassException0) {
          error0 = t1;
          stackTrace0 = A.getTraceFromException(exception);
          t1 = error0._span_exception$_message;
          t2 = error0;
          t3 = J.getInterceptor$z(t2);
          t2 = A.SourceSpanException.prototype.get$span.call(t3, t2);
          t3 = error0.primaryLabel;
          t4 = error0.secondarySpans;
          t5 = error0;
          t6 = J.getInterceptor$z(t5);
          A.throwWithTrace0(new A.MultiSpanSassRuntimeException0(_this._evaluate0$_stackTrace$1(A.SourceSpanException.prototype.get$span.call(t6, t5)), t3, A.ConstantMap_ConstantMap$from(t4, type$.FileSpan, type$.String), t1, t2), stackTrace0);
        } else {
          error1 = t1;
          stackTrace1 = A.getTraceFromException(exception);
          message = null;
          try {
            message = A._asString(J.get$message$x(error1));
          } catch (exception) {
            message0 = J.toString$0$(error1);
            message = message0;
          }
          A.throwWithTrace0(_this._evaluate0$_exception$2(message, nodeWithSpan.get$span(nodeWithSpan)), stackTrace1);
        }
      }
      _this._evaluate0$_callableNode = oldCallableNode;
      if (argumentList == null)
        return result;
      if (evaluated.named.__js_helper$_length === 0)
        return result;
      if (argumentList._argument_list$_wereKeywordsAccessed)
        return result;
      t1 = evaluated.named;
      t1 = t1.get$keys(t1);
      t1 = A.pluralize0("argument", t1.get$length(t1), null);
      t2 = evaluated.named;
      throw A.wrapException(A.MultiSpanSassRuntimeException$0("No " + t1 + " named " + A.S(A.toSentence0(t2.get$keys(t2).map$1$1(0, new A._EvaluateVisitor__runBuiltInCallable_closure4(), type$.Object), "or")) + ".", nodeWithSpan.get$span(nodeWithSpan), "invocation", A.LinkedHashMap_LinkedHashMap$_literal([overload.get$spanWithName(), "declaration"], type$.FileSpan, type$.String), _this._evaluate0$_stackTrace$1(nodeWithSpan.get$span(nodeWithSpan))));
    },
    _evaluate0$_evaluateArguments$1($arguments) {
      var t1, t2, _i, expression, nodeForSpan, named, namedNodes, t3, t4, t5, restArgs, rest, restNodeForSpan, separator, keywordRestArgs, keywordRest, keywordRestNodeForSpan, _this = this,
        positional = A._setArrayType([], type$.JSArray_Value_2),
        positionalNodes = A._setArrayType([], type$.JSArray_AstNode_2);
      for (t1 = $arguments.positional, t2 = t1.length, _i = 0; _i < t2; ++_i) {
        expression = t1[_i];
        nodeForSpan = _this._evaluate0$_expressionNode$1(expression);
        positional.push(_this._evaluate0$_withoutSlash$2(expression.accept$1(_this), nodeForSpan));
        positionalNodes.push(nodeForSpan);
      }
      t1 = type$.String;
      named = A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.Value_2);
      t2 = type$.AstNode_2;
      namedNodes = A.LinkedHashMap_LinkedHashMap$_empty(t1, t2);
      for (t3 = $arguments.named, t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {
        t4 = t3.get$current(t3);
        t5 = t4.value;
        nodeForSpan = _this._evaluate0$_expressionNode$1(t5);
        t4 = t4.key;
        named.$indexSet(0, t4, _this._evaluate0$_withoutSlash$2(t5.accept$1(_this), nodeForSpan));
        namedNodes.$indexSet(0, t4, nodeForSpan);
      }
      restArgs = $arguments.rest;
      if (restArgs == null)
        return new A._ArgumentResults1(positional, positionalNodes, named, namedNodes, B.ListSeparator_undecided_null0);
      rest = restArgs.accept$1(_this);
      restNodeForSpan = _this._evaluate0$_expressionNode$1(restArgs);
      if (rest instanceof A.SassMap0) {
        _this._evaluate0$_addRestMap$4(named, rest, restArgs, new A._EvaluateVisitor__evaluateArguments_closure7());
        t3 = A.LinkedHashMap_LinkedHashMap$_empty(t1, t2);
        for (t4 = rest._map0$_contents, t4 = J.get$iterator$ax(t4.get$keys(t4)), t5 = type$.SassString_2; t4.moveNext$0();)
          t3.$indexSet(0, t5._as(t4.get$current(t4))._string0$_text, restNodeForSpan);
        namedNodes.addAll$1(0, t3);
        separator = B.ListSeparator_undecided_null0;
      } else if (rest instanceof A.SassList0) {
        t3 = rest._list1$_contents;
        B.JSArray_methods.addAll$1(positional, new A.MappedListIterable(t3, new A._EvaluateVisitor__evaluateArguments_closure8(_this, restNodeForSpan), A._arrayInstanceType(t3)._eval$1("MappedListIterable<1,Value0>")));
        B.JSArray_methods.addAll$1(positionalNodes, A.List_List$filled(t3.length, restNodeForSpan, false, t2));
        separator = rest._list1$_separator;
        if (rest instanceof A.SassArgumentList0) {
          rest._argument_list$_wereKeywordsAccessed = true;
          rest._argument_list$_keywords.forEach$1(0, new A._EvaluateVisitor__evaluateArguments_closure9(_this, named, restNodeForSpan, namedNodes));
        }
      } else {
        positional.push(_this._evaluate0$_withoutSlash$2(rest, restNodeForSpan));
        positionalNodes.push(restNodeForSpan);
        separator = B.ListSeparator_undecided_null0;
      }
      keywordRestArgs = $arguments.keywordRest;
      if (keywordRestArgs == null)
        return new A._ArgumentResults1(positional, positionalNodes, named, namedNodes, separator);
      keywordRest = keywordRestArgs.accept$1(_this);
      keywordRestNodeForSpan = _this._evaluate0$_expressionNode$1(keywordRestArgs);
      if (keywordRest instanceof A.SassMap0) {
        _this._evaluate0$_addRestMap$4(named, keywordRest, keywordRestArgs, new A._EvaluateVisitor__evaluateArguments_closure10());
        t1 = A.LinkedHashMap_LinkedHashMap$_empty(t1, t2);
        for (t2 = keywordRest._map0$_contents, t2 = J.get$iterator$ax(t2.get$keys(t2)), t3 = type$.SassString_2; t2.moveNext$0();)
          t1.$indexSet(0, t3._as(t2.get$current(t2))._string0$_text, keywordRestNodeForSpan);
        namedNodes.addAll$1(0, t1);
        return new A._ArgumentResults1(positional, positionalNodes, named, namedNodes, separator);
      } else
        throw A.wrapException(_this._evaluate0$_exception$2(string$.Variabs + keywordRest.toString$0(0) + ").", keywordRestArgs.get$span(keywordRestArgs)));
    },
    _evaluate0$_evaluateMacroArguments$1(invocation) {
      var t2, positional, named, rest, restNodeForSpan, keywordRestArgs_, keywordRest, keywordRestNodeForSpan, _this = this,
        t1 = invocation.$arguments,
        restArgs_ = t1.rest;
      if (restArgs_ == null)
        return new A.Tuple2(t1.positional, t1.named, type$.Tuple2_of_List_Expression_and_Map_String_Expression_2);
      t2 = t1.positional;
      positional = A._setArrayType(t2.slice(0), A._arrayInstanceType(t2));
      named = A.LinkedHashMap_LinkedHashMap$of(t1.named, type$.String, type$.Expression_2);
      rest = restArgs_.accept$1(_this);
      restNodeForSpan = _this._evaluate0$_expressionNode$1(restArgs_);
      if (rest instanceof A.SassMap0)
        _this._evaluate0$_addRestMap$4(named, rest, invocation, new A._EvaluateVisitor__evaluateMacroArguments_closure7(restArgs_));
      else if (rest instanceof A.SassList0) {
        t2 = rest._list1$_contents;
        B.JSArray_methods.addAll$1(positional, new A.MappedListIterable(t2, new A._EvaluateVisitor__evaluateMacroArguments_closure8(_this, restNodeForSpan, restArgs_), A._arrayInstanceType(t2)._eval$1("MappedListIterable<1,Expression0>")));
        if (rest instanceof A.SassArgumentList0) {
          rest._argument_list$_wereKeywordsAccessed = true;
          rest._argument_list$_keywords.forEach$1(0, new A._EvaluateVisitor__evaluateMacroArguments_closure9(_this, named, restNodeForSpan, restArgs_));
        }
      } else
        positional.push(new A.ValueExpression0(_this._evaluate0$_withoutSlash$2(rest, restNodeForSpan), restArgs_.get$span(restArgs_)));
      keywordRestArgs_ = t1.keywordRest;
      if (keywordRestArgs_ == null)
        return new A.Tuple2(positional, named, type$.Tuple2_of_List_Expression_and_Map_String_Expression_2);
      keywordRest = keywordRestArgs_.accept$1(_this);
      keywordRestNodeForSpan = _this._evaluate0$_expressionNode$1(keywordRestArgs_);
      if (keywordRest instanceof A.SassMap0) {
        _this._evaluate0$_addRestMap$4(named, keywordRest, invocation, new A._EvaluateVisitor__evaluateMacroArguments_closure10(_this, keywordRestNodeForSpan, keywordRestArgs_));
        return new A.Tuple2(positional, named, type$.Tuple2_of_List_Expression_and_Map_String_Expression_2);
      } else
        throw A.wrapException(_this._evaluate0$_exception$2(string$.Variabs + keywordRest.toString$0(0) + ").", keywordRestArgs_.get$span(keywordRestArgs_)));
    },
    _evaluate0$_addRestMap$1$4(values, map, nodeWithSpan, convert) {
      map._map0$_contents.forEach$1(0, new A._EvaluateVisitor__addRestMap_closure1(this, values, convert, this._evaluate0$_expressionNode$1(nodeWithSpan), map, nodeWithSpan));
    },
    _evaluate0$_addRestMap$4(values, map, nodeWithSpan, convert) {
      return this._evaluate0$_addRestMap$1$4(values, map, nodeWithSpan, convert, type$.dynamic);
    },
    _evaluate0$_verifyArguments$4(positional, named, $arguments, nodeWithSpan) {
      return this._evaluate0$_addExceptionSpan$2(nodeWithSpan, new A._EvaluateVisitor__verifyArguments_closure1($arguments, positional, named));
    },
    visitSelectorExpression$1(node) {
      var t1 = this._evaluate0$_styleRuleIgnoringAtRoot;
      t1 = t1 == null ? null : t1.originalSelector.get$asSassList();
      return t1 == null ? B.C__SassNull0 : t1;
    },
    visitStringExpression$1(node) {
      var t1, _this = this,
        oldInSupportsDeclaration = _this._evaluate0$_inSupportsDeclaration;
      _this._evaluate0$_inSupportsDeclaration = false;
      t1 = node.text.contents;
      t1 = new A.MappedListIterable(t1, new A._EvaluateVisitor_visitStringExpression_closure1(_this), A._arrayInstanceType(t1)._eval$1("MappedListIterable<1,String>")).join$0(0);
      _this._evaluate0$_inSupportsDeclaration = oldInSupportsDeclaration;
      return new A.SassString0(t1, node.hasQuotes);
    },
    visitSupportsExpression$1(expression) {
      return new A.SassString0(this._evaluate0$_visitSupportsCondition$1(expression.condition), false);
    },
    visitCssAtRule$1(node) {
      var wasInKeyframes, wasInUnknownAtRule, t1, _this = this;
      if (_this._evaluate0$_declarationName != null)
        throw A.wrapException(_this._evaluate0$_exception$2(string$.At_rul, node.span));
      if (node.isChildless) {
        _this._evaluate0$_assertInModule$2(_this._evaluate0$__parent, "__parent").addChild$1(A.ModifiableCssAtRule$0(node.name, node.span, true, node.value));
        return;
      }
      wasInKeyframes = _this._evaluate0$_inKeyframes;
      wasInUnknownAtRule = _this._evaluate0$_inUnknownAtRule;
      t1 = node.name;
      if (A.unvendor0(t1.get$value(t1)) === "keyframes")
        _this._evaluate0$_inKeyframes = true;
      else
        _this._evaluate0$_inUnknownAtRule = true;
      _this._evaluate0$_withParent$2$4$scopeWhen$through(A.ModifiableCssAtRule$0(t1, node.span, false, node.value), new A._EvaluateVisitor_visitCssAtRule_closure3(_this, node), false, new A._EvaluateVisitor_visitCssAtRule_closure4(), type$.ModifiableCssAtRule_2, type$.Null);
      _this._evaluate0$_inUnknownAtRule = wasInUnknownAtRule;
      _this._evaluate0$_inKeyframes = wasInKeyframes;
    },
    visitCssComment$1(node) {
      var _this = this,
        _s8_ = "__parent",
        _s13_ = "_endOfImports";
      if (_this._evaluate0$_assertInModule$2(_this._evaluate0$__parent, _s8_) === _this._evaluate0$_assertInModule$2(_this._evaluate0$__root, "_root") && _this._evaluate0$_assertInModule$2(_this._evaluate0$__endOfImports, _s13_) === J.get$length$asx(_this._evaluate0$_assertInModule$2(_this._evaluate0$__root, "_root").children._collection$_source))
        _this._evaluate0$__endOfImports = _this._evaluate0$_assertInModule$2(_this._evaluate0$__endOfImports, _s13_) + 1;
      _this._evaluate0$_assertInModule$2(_this._evaluate0$__parent, _s8_).addChild$1(new A.ModifiableCssComment0(node.text, node.span));
    },
    visitCssDeclaration$1(node) {
      var t1 = node.name;
      this._evaluate0$_assertInModule$2(this._evaluate0$__parent, "__parent").addChild$1(A.ModifiableCssDeclaration$0(t1, node.value, node.span, J.startsWith$1$s(t1.get$value(t1), "--"), node.valueSpanForMap));
    },
    visitCssImport$1(node) {
      var t1, _this = this,
        _s8_ = "__parent",
        _s5_ = "_root",
        _s13_ = "_endOfImports",
        modifiableNode = new A.ModifiableCssImport0(node.url, node.modifiers, node.span);
      if (_this._evaluate0$_assertInModule$2(_this._evaluate0$__parent, _s8_) !== _this._evaluate0$_assertInModule$2(_this._evaluate0$__root, _s5_))
        _this._evaluate0$_assertInModule$2(_this._evaluate0$__parent, _s8_).addChild$1(modifiableNode);
      else if (_this._evaluate0$_assertInModule$2(_this._evaluate0$__endOfImports, _s13_) === J.get$length$asx(_this._evaluate0$_assertInModule$2(_this._evaluate0$__root, _s5_).children._collection$_source)) {
        _this._evaluate0$_assertInModule$2(_this._evaluate0$__root, _s5_).addChild$1(modifiableNode);
        _this._evaluate0$__endOfImports = _this._evaluate0$_assertInModule$2(_this._evaluate0$__endOfImports, _s13_) + 1;
      } else {
        t1 = _this._evaluate0$_outOfOrderImports;
        (t1 == null ? _this._evaluate0$_outOfOrderImports = A._setArrayType([], type$.JSArray_ModifiableCssImport_2) : t1).push(modifiableNode);
      }
    },
    visitCssKeyframeBlock$1(node) {
      this._evaluate0$_withParent$2$4$scopeWhen$through(A.ModifiableCssKeyframeBlock$0(node.selector, node.span), new A._EvaluateVisitor_visitCssKeyframeBlock_closure3(this, node), false, new A._EvaluateVisitor_visitCssKeyframeBlock_closure4(), type$.ModifiableCssKeyframeBlock_2, type$.Null);
    },
    visitCssMediaRule$1(node) {
      var mergedQueries, t1, _this = this;
      if (_this._evaluate0$_declarationName != null)
        throw A.wrapException(_this._evaluate0$_exception$2(string$.Media_, node.span));
      mergedQueries = A.NullableExtension_andThen0(_this._evaluate0$_mediaQueries, new A._EvaluateVisitor_visitCssMediaRule_closure5(_this, node));
      t1 = mergedQueries == null;
      if (!t1 && J.get$isEmpty$asx(mergedQueries))
        return;
      t1 = t1 ? node.queries : mergedQueries;
      _this._evaluate0$_withParent$2$4$scopeWhen$through(A.ModifiableCssMediaRule$0(t1, node.span), new A._EvaluateVisitor_visitCssMediaRule_closure6(_this, mergedQueries, node), false, new A._EvaluateVisitor_visitCssMediaRule_closure7(mergedQueries), type$.ModifiableCssMediaRule_2, type$.Null);
    },
    visitCssStyleRule$1(node) {
      var t1, styleRule, t2, t3, t4, t5, originalSelector, rule, oldAtRootExcludingStyleRule, _this = this,
        _s8_ = "__parent";
      if (_this._evaluate0$_declarationName != null)
        throw A.wrapException(_this._evaluate0$_exception$2(string$.Style_, node.span));
      t1 = _this._evaluate0$_atRootExcludingStyleRule;
      styleRule = t1 ? null : _this._evaluate0$_styleRuleIgnoringAtRoot;
      t2 = node.selector;
      t3 = t2.value;
      t4 = styleRule == null;
      t5 = t4 ? null : styleRule.originalSelector;
      originalSelector = t3.resolveParentSelectors$2$implicitParent(t5, !t1);
      rule = A.ModifiableCssStyleRule$0(_this._evaluate0$_assertInModule$2(_this._evaluate0$__extensionStore, "_extensionStore").addSelector$3(originalSelector, t2.span, _this._evaluate0$_mediaQueries), node.span, originalSelector);
      oldAtRootExcludingStyleRule = _this._evaluate0$_atRootExcludingStyleRule;
      _this._evaluate0$_atRootExcludingStyleRule = false;
      _this._evaluate0$_withParent$2$4$scopeWhen$through(rule, new A._EvaluateVisitor_visitCssStyleRule_closure3(_this, rule, node), false, new A._EvaluateVisitor_visitCssStyleRule_closure4(), type$.ModifiableCssStyleRule_2, type$.Null);
      _this._evaluate0$_atRootExcludingStyleRule = oldAtRootExcludingStyleRule;
      if (t4) {
        t1 = _this._evaluate0$_assertInModule$2(_this._evaluate0$__parent, _s8_).children;
        t1 = !t1.get$isEmpty(t1);
      } else
        t1 = false;
      if (t1) {
        t1 = _this._evaluate0$_assertInModule$2(_this._evaluate0$__parent, _s8_).children;
        t1.get$last(t1).isGroupEnd = true;
      }
    },
    visitCssStylesheet$1(node) {
      var t1;
      for (t1 = J.get$iterator$ax(node.get$children(node)); t1.moveNext$0();)
        t1.get$current(t1).accept$1(this);
    },
    visitCssSupportsRule$1(node) {
      var _this = this;
      if (_this._evaluate0$_declarationName != null)
        throw A.wrapException(_this._evaluate0$_exception$2(string$.Suppor, node.span));
      _this._evaluate0$_withParent$2$4$scopeWhen$through(A.ModifiableCssSupportsRule$0(node.condition, node.span), new A._EvaluateVisitor_visitCssSupportsRule_closure3(_this, node), false, new A._EvaluateVisitor_visitCssSupportsRule_closure4(), type$.ModifiableCssSupportsRule_2, type$.Null);
    },
    _evaluate0$_handleReturn$1$2(list, callback) {
      var t1, _i, result;
      for (t1 = list.length, _i = 0; _i < list.length; list.length === t1 || (0, A.throwConcurrentModificationError)(list), ++_i) {
        result = callback.call$1(list[_i]);
        if (result != null)
          return result;
      }
      return null;
    },
    _evaluate0$_handleReturn$2(list, callback) {
      return this._evaluate0$_handleReturn$1$2(list, callback, type$.dynamic);
    },
    _evaluate0$_withEnvironment$1$2(environment, callback) {
      var result,
        oldEnvironment = this._evaluate0$_environment;
      this._evaluate0$_environment = environment;
      result = callback.call$0();
      this._evaluate0$_environment = oldEnvironment;
      return result;
    },
    _evaluate0$_withEnvironment$2(environment, callback) {
      return this._evaluate0$_withEnvironment$1$2(environment, callback, type$.dynamic);
    },
    _evaluate0$_interpolationToValue$3$trim$warnForColor(interpolation, trim, warnForColor) {
      var result = this._evaluate0$_performInterpolation$2$warnForColor(interpolation, warnForColor),
        t1 = trim ? A.trimAscii0(result, true) : result;
      return new A.CssValue0(t1, interpolation.span, type$.CssValue_String_2);
    },
    _evaluate0$_interpolationToValue$1(interpolation) {
      return this._evaluate0$_interpolationToValue$3$trim$warnForColor(interpolation, false, false);
    },
    _evaluate0$_interpolationToValue$2$warnForColor(interpolation, warnForColor) {
      return this._evaluate0$_interpolationToValue$3$trim$warnForColor(interpolation, false, warnForColor);
    },
    _evaluate0$_performInterpolation$2$warnForColor(interpolation, warnForColor) {
      var t1, result, _this = this,
        oldInSupportsDeclaration = _this._evaluate0$_inSupportsDeclaration;
      _this._evaluate0$_inSupportsDeclaration = false;
      t1 = interpolation.contents;
      result = new A.MappedListIterable(t1, new A._EvaluateVisitor__performInterpolation_closure1(_this, warnForColor, interpolation), A._arrayInstanceType(t1)._eval$1("MappedListIterable<1,String>")).join$0(0);
      _this._evaluate0$_inSupportsDeclaration = oldInSupportsDeclaration;
      return result;
    },
    _evaluate0$_performInterpolation$1(interpolation) {
      return this._evaluate0$_performInterpolation$2$warnForColor(interpolation, false);
    },
    _evaluate0$_serialize$3$quote(value, nodeWithSpan, quote) {
      return this._evaluate0$_addExceptionSpan$2(nodeWithSpan, new A._EvaluateVisitor__serialize_closure1(value, quote));
    },
    _evaluate0$_serialize$2(value, nodeWithSpan) {
      return this._evaluate0$_serialize$3$quote(value, nodeWithSpan, true);
    },
    _evaluate0$_expressionNode$1(expression) {
      var t1;
      if (expression instanceof A.VariableExpression0) {
        t1 = this._evaluate0$_addExceptionSpan$2(expression, new A._EvaluateVisitor__expressionNode_closure1(this, expression));
        return t1 == null ? expression : t1;
      } else
        return expression;
    },
    _evaluate0$_withParent$2$4$scopeWhen$through(node, callback, scopeWhen, through, $S, $T) {
      var t1, result, _this = this;
      _this._evaluate0$_addChild$2$through(node, through);
      t1 = _this._evaluate0$_assertInModule$2(_this._evaluate0$__parent, "__parent");
      _this._evaluate0$__parent = node;
      result = _this._evaluate0$_environment.scope$1$2$when(callback, scopeWhen, $T);
      _this._evaluate0$__parent = t1;
      return result;
    },
    _evaluate0$_withParent$2$3$scopeWhen(node, callback, scopeWhen, $S, $T) {
      return this._evaluate0$_withParent$2$4$scopeWhen$through(node, callback, scopeWhen, null, $S, $T);
    },
    _evaluate0$_withParent$2$2(node, callback, $S, $T) {
      return this._evaluate0$_withParent$2$4$scopeWhen$through(node, callback, true, null, $S, $T);
    },
    _evaluate0$_addChild$2$through(node, through) {
      var grandparent, t1,
        $parent = this._evaluate0$_assertInModule$2(this._evaluate0$__parent, "__parent");
      if (through != null) {
        for (; through.call$1($parent); $parent = grandparent) {
          grandparent = $parent._node1$_parent;
          if (grandparent == null)
            throw A.wrapException(A.ArgumentError$(string$.throug + node.toString$0(0) + ".", null));
        }
        if ($parent.get$hasFollowingSibling()) {
          t1 = $parent._node1$_parent;
          t1.toString;
          $parent = $parent.copyWithoutChildren$0();
          t1.addChild$1($parent);
        }
      }
      $parent.addChild$1(node);
    },
    _evaluate0$_addChild$1(node) {
      return this._evaluate0$_addChild$2$through(node, null);
    },
    _evaluate0$_withStyleRule$1$2(rule, callback) {
      var result,
        oldRule = this._evaluate0$_styleRuleIgnoringAtRoot;
      this._evaluate0$_styleRuleIgnoringAtRoot = rule;
      result = callback.call$0();
      this._evaluate0$_styleRuleIgnoringAtRoot = oldRule;
      return result;
    },
    _evaluate0$_withStyleRule$2(rule, callback) {
      return this._evaluate0$_withStyleRule$1$2(rule, callback, type$.dynamic);
    },
    _evaluate0$_withMediaQueries$1$2(queries, callback) {
      var result,
        oldMediaQueries = this._evaluate0$_mediaQueries;
      this._evaluate0$_mediaQueries = queries;
      result = callback.call$0();
      this._evaluate0$_mediaQueries = oldMediaQueries;
      return result;
    },
    _evaluate0$_withMediaQueries$2(queries, callback) {
      return this._evaluate0$_withMediaQueries$1$2(queries, callback, type$.dynamic);
    },
    _evaluate0$_withStackFrame$1$3(member, nodeWithSpan, callback) {
      var oldMember, result, _this = this,
        t1 = _this._evaluate0$_stack;
      t1.push(new A.Tuple2(_this._evaluate0$_member, nodeWithSpan, type$.Tuple2_String_AstNode_2));
      oldMember = _this._evaluate0$_member;
      _this._evaluate0$_member = member;
      result = callback.call$0();
      _this._evaluate0$_member = oldMember;
      t1.pop();
      return result;
    },
    _evaluate0$_withStackFrame$3(member, nodeWithSpan, callback) {
      return this._evaluate0$_withStackFrame$1$3(member, nodeWithSpan, callback, type$.dynamic);
    },
    _evaluate0$_withoutSlash$2(value, nodeForSpan) {
      if (value instanceof A.SassNumber0 && value.asSlash != null)
        this._evaluate0$_warn$3$deprecation(string$.Using__i + A.S(new A._EvaluateVisitor__withoutSlash_recommendation1().call$1(value)) + string$.x0a_More, nodeForSpan.get$span(nodeForSpan), true);
      return value.withoutSlash$0();
    },
    _evaluate0$_stackFrame$2(member, span) {
      return A.frameForSpan0(span, member, A.NullableExtension_andThen0(span.file.url, new A._EvaluateVisitor__stackFrame_closure1(this)));
    },
    _evaluate0$_stackTrace$1(span) {
      var _this = this,
        t1 = _this._evaluate0$_stack;
      t1 = A.List_List$of(new A.MappedListIterable(t1, new A._EvaluateVisitor__stackTrace_closure1(_this), A._arrayInstanceType(t1)._eval$1("MappedListIterable<1,Frame>")), true, type$.Frame);
      if (span != null)
        t1.push(_this._evaluate0$_stackFrame$2(_this._evaluate0$_member, span));
      return A.Trace$(new A.ReversedListIterable(t1, A._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>")), null);
    },
    _evaluate0$_stackTrace$0() {
      return this._evaluate0$_stackTrace$1(null);
    },
    _evaluate0$_warn$3$deprecation(message, span, deprecation) {
      var t1, _this = this;
      if (_this._evaluate0$_quietDeps)
        if (!_this._evaluate0$_inDependency) {
          t1 = _this._evaluate0$_currentCallable;
          t1 = t1 == null ? null : t1.inDependency;
          t1 = t1 === true;
        } else
          t1 = true;
      else
        t1 = false;
      if (t1)
        return;
      if (!_this._evaluate0$_warningsEmitted.add$1(0, new A.Tuple2(message, span, type$.Tuple2_String_SourceSpan)))
        return;
      _this._evaluate0$_logger.warn$4$deprecation$span$trace(0, message, deprecation, span, _this._evaluate0$_stackTrace$1(span));
    },
    _evaluate0$_warn$2(message, span) {
      return this._evaluate0$_warn$3$deprecation(message, span, false);
    },
    _evaluate0$_exception$2(message, span) {
      var t1 = span == null ? J.get$span$z(B.JSArray_methods.get$last(this._evaluate0$_stack).item2) : span;
      return new A.SassRuntimeException0(this._evaluate0$_stackTrace$1(span), message, t1);
    },
    _evaluate0$_exception$1(message) {
      return this._evaluate0$_exception$2(message, null);
    },
    _evaluate0$_multiSpanException$3(message, primaryLabel, secondaryLabels) {
      var t1 = J.get$span$z(B.JSArray_methods.get$last(this._evaluate0$_stack).item2);
      return new A.MultiSpanSassRuntimeException0(this._evaluate0$_stackTrace$0(), primaryLabel, A.ConstantMap_ConstantMap$from(secondaryLabels, type$.FileSpan, type$.String), message, t1);
    },
    _evaluate0$_adjustParseError$1$2(nodeWithSpan, callback) {
      var error, stackTrace, errorText, span, syntheticFile, syntheticSpan, t1, exception, t2, t3, t4, t5, t6, _null = null;
      try {
        t1 = callback.call$0();
        return t1;
      } catch (exception) {
        t1 = A.unwrapException(exception);
        if (t1 instanceof A.SassFormatException0) {
          error = t1;
          stackTrace = A.getTraceFromException(exception);
          t1 = error;
          t2 = J.getInterceptor$z(t1);
          errorText = A.String_String$fromCharCodes(B.NativeUint32List_methods.sublist$2(A.SourceSpanException.prototype.get$span.call(t2, t1).file._decodedChars, 0, _null), 0, _null);
          span = nodeWithSpan.get$span(nodeWithSpan);
          t1 = span;
          t2 = span;
          syntheticFile = B.JSString_methods.replaceRange$3(A.String_String$fromCharCodes(B.NativeUint32List_methods.sublist$2(span.file._decodedChars, 0, _null), 0, _null), A.FileLocation$_(t1.file, t1._file$_start).offset, A.FileLocation$_(t2.file, t2._end).offset, errorText);
          t2 = A.SourceFile$fromString(syntheticFile, span.file.url);
          t1 = span;
          t1 = A.FileLocation$_(t1.file, t1._file$_start);
          t3 = error;
          t4 = J.getInterceptor$z(t3);
          t3 = A.SourceSpanException.prototype.get$span.call(t4, t3);
          t3 = A.FileLocation$_(t3.file, t3._file$_start);
          t4 = span;
          t4 = A.FileLocation$_(t4.file, t4._file$_start);
          t5 = error;
          t6 = J.getInterceptor$z(t5);
          t5 = A.SourceSpanException.prototype.get$span.call(t6, t5);
          syntheticSpan = t2.span$2(0, t1.offset + t3.offset, t4.offset + A.FileLocation$_(t5.file, t5._end).offset);
          A.throwWithTrace0(this._evaluate0$_exception$2(error._span_exception$_message, syntheticSpan), stackTrace);
        } else
          throw exception;
      }
    },
    _evaluate0$_adjustParseError$2(nodeWithSpan, callback) {
      return this._evaluate0$_adjustParseError$1$2(nodeWithSpan, callback, type$.dynamic);
    },
    _evaluate0$_addExceptionSpan$1$2(nodeWithSpan, callback) {
      var error, stackTrace, error0, stackTrace0, t1, exception, t2, t3, t4;
      try {
        t1 = callback.call$0();
        return t1;
      } catch (exception) {
        t1 = A.unwrapException(exception);
        if (t1 instanceof A.MultiSpanSassScriptException0) {
          error = t1;
          stackTrace = A.getTraceFromException(exception);
          t1 = error.message;
          t2 = nodeWithSpan.get$span(nodeWithSpan);
          t3 = error.primaryLabel;
          t4 = error.secondarySpans;
          A.throwWithTrace0(new A.MultiSpanSassRuntimeException0(this._evaluate0$_stackTrace$1(nodeWithSpan.get$span(nodeWithSpan)), t3, A.ConstantMap_ConstantMap$from(t4, type$.FileSpan, type$.String), t1, t2), stackTrace);
        } else if (t1 instanceof A.SassScriptException0) {
          error0 = t1;
          stackTrace0 = A.getTraceFromException(exception);
          A.throwWithTrace0(this._evaluate0$_exception$2(error0.message, nodeWithSpan.get$span(nodeWithSpan)), stackTrace0);
        } else
          throw exception;
      }
    },
    _evaluate0$_addExceptionSpan$2(nodeWithSpan, callback) {
      return this._evaluate0$_addExceptionSpan$1$2(nodeWithSpan, callback, type$.dynamic);
    },
    _evaluate0$_addErrorSpan$1$2(nodeWithSpan, callback) {
      var error, stackTrace, t1, exception, t2;
      try {
        t1 = callback.call$0();
        return t1;
      } catch (exception) {
        t1 = A.unwrapException(exception);
        if (type$.SassRuntimeException_2._is(t1)) {
          error = t1;
          stackTrace = A.getTraceFromException(exception);
          t1 = J.get$span$z(error);
          if (!B.JSString_methods.startsWith$1(A.String_String$fromCharCodes(B.NativeUint32List_methods.sublist$2(t1.file._decodedChars, t1._file$_start, t1._end), 0, null), "@error"))
            throw exception;
          t1 = error._span_exception$_message;
          t2 = nodeWithSpan.get$span(nodeWithSpan);
          A.throwWithTrace0(new A.SassRuntimeException0(this._evaluate0$_stackTrace$0(), t1, t2), stackTrace);
        } else
          throw exception;
      }
    },
    _evaluate0$_addErrorSpan$2(nodeWithSpan, callback) {
      return this._evaluate0$_addErrorSpan$1$2(nodeWithSpan, callback, type$.dynamic);
    }
  };
  A._EvaluateVisitor_closure19.prototype = {
    call$1($arguments) {
      var module, t2,
        t1 = J.getInterceptor$asx($arguments),
        variable = t1.$index($arguments, 0).assertString$1("name");
      t1 = t1.$index($arguments, 1).get$realNull();
      module = t1 == null ? null : t1.assertString$1("module");
      t1 = this.$this._evaluate0$_environment;
      t2 = A.stringReplaceAllUnchecked(variable._string0$_text, "_", "-");
      return t1.globalVariableExists$2$namespace(t2, module == null ? null : module._string0$_text) ? B.SassBoolean_true0 : B.SassBoolean_false0;
    },
    $signature: 18
  };
  A._EvaluateVisitor_closure20.prototype = {
    call$1($arguments) {
      var variable = J.$index$asx($arguments, 0).assertString$1("name"),
        t1 = this.$this._evaluate0$_environment;
      return t1.getVariable$1(A.stringReplaceAllUnchecked(variable._string0$_text, "_", "-")) != null ? B.SassBoolean_true0 : B.SassBoolean_false0;
    },
    $signature: 18
  };
  A._EvaluateVisitor_closure21.prototype = {
    call$1($arguments) {
      var module, t2, t3, t4,
        t1 = J.getInterceptor$asx($arguments),
        variable = t1.$index($arguments, 0).assertString$1("name");
      t1 = t1.$index($arguments, 1).get$realNull();
      module = t1 == null ? null : t1.assertString$1("module");
      t1 = this.$this;
      t2 = t1._evaluate0$_environment;
      t3 = variable._string0$_text;
      t4 = A.stringReplaceAllUnchecked(t3, "_", "-");
      return t2.getFunction$2$namespace(t4, module == null ? null : module._string0$_text) != null || t1._evaluate0$_builtInFunctions.containsKey$1(t3) ? B.SassBoolean_true0 : B.SassBoolean_false0;
    },
    $signature: 18
  };
  A._EvaluateVisitor_closure22.prototype = {
    call$1($arguments) {
      var module, t2,
        t1 = J.getInterceptor$asx($arguments),
        variable = t1.$index($arguments, 0).assertString$1("name");
      t1 = t1.$index($arguments, 1).get$realNull();
      module = t1 == null ? null : t1.assertString$1("module");
      t1 = this.$this._evaluate0$_environment;
      t2 = A.stringReplaceAllUnchecked(variable._string0$_text, "_", "-");
      return t1.getMixin$2$namespace(t2, module == null ? null : module._string0$_text) != null ? B.SassBoolean_true0 : B.SassBoolean_false0;
    },
    $signature: 18
  };
  A._EvaluateVisitor_closure23.prototype = {
    call$1($arguments) {
      var t1 = this.$this._evaluate0$_environment;
      if (!t1._environment0$_inMixin)
        throw A.wrapException(A.SassScriptException$0(string$.conten));
      return t1._environment0$_content != null ? B.SassBoolean_true0 : B.SassBoolean_false0;
    },
    $signature: 18
  };
  A._EvaluateVisitor_closure24.prototype = {
    call$1($arguments) {
      var t2, t3, t4,
        t1 = J.$index$asx($arguments, 0).assertString$1("module")._string0$_text,
        module = this.$this._evaluate0$_environment._environment0$_modules.$index(0, t1);
      if (module == null)
        throw A.wrapException('There is no module with namespace "' + t1 + '".');
      t1 = type$.Value_2;
      t2 = A.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      for (t3 = module.get$variables(), t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {
        t4 = t3.get$current(t3);
        t2.$indexSet(0, new A.SassString0(t4.key, true), t4.value);
      }
      return new A.SassMap0(A.ConstantMap_ConstantMap$from(t2, t1, t1));
    },
    $signature: 40
  };
  A._EvaluateVisitor_closure25.prototype = {
    call$1($arguments) {
      var t2, t3, t4,
        t1 = J.$index$asx($arguments, 0).assertString$1("module")._string0$_text,
        module = this.$this._evaluate0$_environment._environment0$_modules.$index(0, t1);
      if (module == null)
        throw A.wrapException('There is no module with namespace "' + t1 + '".');
      t1 = type$.Value_2;
      t2 = A.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      for (t3 = module.get$functions(module), t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {
        t4 = t3.get$current(t3);
        t2.$indexSet(0, new A.SassString0(t4.key, true), new A.SassFunction0(t4.value));
      }
      return new A.SassMap0(A.ConstantMap_ConstantMap$from(t2, t1, t1));
    },
    $signature: 40
  };
  A._EvaluateVisitor_closure26.prototype = {
    call$1($arguments) {
      var module, callable, t2,
        t1 = J.getInterceptor$asx($arguments),
        $name = t1.$index($arguments, 0).assertString$1("name"),
        css = t1.$index($arguments, 1).get$isTruthy();
      t1 = t1.$index($arguments, 2).get$realNull();
      module = t1 == null ? null : t1.assertString$1("module");
      if (css && module != null)
        throw A.wrapException(string$.x24css_a);
      if (css)
        callable = new A.PlainCssCallable0($name._string0$_text);
      else {
        t1 = this.$this;
        t2 = t1._evaluate0$_callableNode;
        t2.toString;
        callable = t1._evaluate0$_addExceptionSpan$2(t2, new A._EvaluateVisitor__closure7(t1, $name, module));
      }
      if (callable != null)
        return new A.SassFunction0(callable);
      throw A.wrapException("Function not found: " + $name.toString$0(0));
    },
    $signature: 162
  };
  A._EvaluateVisitor__closure7.prototype = {
    call$0() {
      var t1 = A.stringReplaceAllUnchecked(this.name._string0$_text, "_", "-"),
        t2 = this.module;
      t2 = t2 == null ? null : t2._string0$_text;
      return this.$this._evaluate0$_getFunction$2$namespace(t1, t2);
    },
    $signature: 105
  };
  A._EvaluateVisitor_closure27.prototype = {
    call$1($arguments) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, invocation, callableNode, callable,
        t1 = J.getInterceptor$asx($arguments),
        $function = t1.$index($arguments, 0),
        args = type$.SassArgumentList_2._as(t1.$index($arguments, 1));
      t1 = this.$this;
      t2 = t1._evaluate0$_callableNode;
      t2.toString;
      t3 = A._setArrayType([], type$.JSArray_Expression_2);
      t4 = type$.String;
      t5 = type$.Expression_2;
      t6 = t2.get$span(t2);
      t7 = t2.get$span(t2);
      args._argument_list$_wereKeywordsAccessed = true;
      t8 = args._argument_list$_keywords;
      if (t8.get$isEmpty(t8))
        t2 = null;
      else {
        t9 = type$.Value_2;
        t10 = A.LinkedHashMap_LinkedHashMap$_empty(t9, t9);
        for (args._argument_list$_wereKeywordsAccessed = true, t8 = t8.get$entries(t8), t8 = t8.get$iterator(t8); t8.moveNext$0();) {
          t11 = t8.get$current(t8);
          t10.$indexSet(0, new A.SassString0(t11.key, false), t11.value);
        }
        t2 = new A.ValueExpression0(new A.SassMap0(A.ConstantMap_ConstantMap$from(t10, t9, t9)), t2.get$span(t2));
      }
      invocation = new A.ArgumentInvocation0(A.List_List$unmodifiable(t3, t5), A.ConstantMap_ConstantMap$from(A.LinkedHashMap_LinkedHashMap$_empty(t4, t5), t4, t5), new A.ValueExpression0(args, t7), t2, t6);
      if ($function instanceof A.SassString0) {
        t2 = $function.toString$0(0);
        A.EvaluationContext_current0().warn$2$deprecation(0, string$.Passin + t2 + "))", true);
        callableNode = t1._evaluate0$_callableNode;
        return t1.visitFunctionExpression$1(new A.FunctionExpression0(null, $function._string0$_text, invocation, callableNode.get$span(callableNode)));
      }
      callable = $function.assertFunction$1("function").callable;
      if (type$.Callable_2._is(callable)) {
        t2 = t1._evaluate0$_callableNode;
        t2.toString;
        return t1._evaluate0$_runFunctionCallable$3(invocation, callable, t2);
      } else
        throw A.wrapException(A.SassScriptException$0("The function " + callable.get$name(callable) + string$.x20is_as));
    },
    $signature: 3
  };
  A._EvaluateVisitor_closure28.prototype = {
    call$1($arguments) {
      var withMap, t2, values, configuration,
        t1 = J.getInterceptor$asx($arguments),
        url = A.Uri_parse(t1.$index($arguments, 0).assertString$1("url")._string0$_text);
      t1 = t1.$index($arguments, 1).get$realNull();
      withMap = t1 == null ? null : t1.assertMap$1("with")._map0$_contents;
      t1 = this.$this;
      t2 = t1._evaluate0$_callableNode;
      t2.toString;
      if (withMap != null) {
        values = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.ConfiguredValue_2);
        withMap.forEach$1(0, new A._EvaluateVisitor__closure5(values, t2.get$span(t2), t2));
        configuration = new A.ExplicitConfiguration0(t2, values);
      } else
        configuration = B.Configuration_Map_empty0;
      t1._evaluate0$_loadModule$7$baseUrl$configuration$namesInErrors(url, "load-css()", t2, new A._EvaluateVisitor__closure6(t1), t2.get$span(t2).file.url, configuration, true);
      t1._evaluate0$_assertConfigurationIsEmpty$2$nameInError(configuration, true);
    },
    $signature: 395
  };
  A._EvaluateVisitor__closure5.prototype = {
    call$2(variable, value) {
      var t1 = variable.assertString$1("with key"),
        $name = A.stringReplaceAllUnchecked(t1._string0$_text, "_", "-");
      t1 = this.values;
      if (t1.containsKey$1($name))
        throw A.wrapException("The variable $" + $name + " was configured twice.");
      t1.$indexSet(0, $name, new A.ConfiguredValue0(value, this.span, this.callableNode));
    },
    $signature: 55
  };
  A._EvaluateVisitor__closure6.prototype = {
    call$1(module) {
      var t1 = this.$this;
      return t1._evaluate0$_combineCss$2$clone(module, true).accept$1(t1);
    },
    $signature: 66
  };
  A._EvaluateVisitor_run_closure1.prototype = {
    call$0() {
      var t2, _this = this,
        t1 = _this.node,
        url = t1.span.file.url;
      if (url != null) {
        t2 = _this.$this;
        t2._evaluate0$_activeModules.$indexSet(0, url, null);
        if (!(t2._evaluate0$_nodeImporter != null && url.toString$0(0) === "stdin"))
          t2._evaluate0$_loadedUrls.add$1(0, url);
      }
      t2 = _this.$this;
      return new A.EvaluateResult0(t2._evaluate0$_combineCss$1(t2._evaluate0$_execute$2(_this.importer, t1)), t2._evaluate0$_loadedUrls);
    },
    $signature: 397
  };
  A._EvaluateVisitor__loadModule_closure3.prototype = {
    call$0() {
      return this.callback.call$1(this.builtInModule);
    },
    $signature: 0
  };
  A._EvaluateVisitor__loadModule_closure4.prototype = {
    call$0() {
      var oldInDependency, module, error, stackTrace, error0, stackTrace0, error1, stackTrace1, error2, stackTrace2, message, exception, t3, t4, t5, t6, t7, _this = this,
        t1 = _this.$this,
        t2 = _this.nodeWithSpan,
        result = t1._evaluate0$_loadStylesheet$3$baseUrl(_this.url.toString$0(0), t2.get$span(t2), _this.baseUrl),
        stylesheet = result.stylesheet,
        canonicalUrl = stylesheet.span.file.url;
      if (canonicalUrl != null && t1._evaluate0$_activeModules.containsKey$1(canonicalUrl)) {
        message = _this.namesInErrors ? "Module loop: " + $.$get$context().prettyUri$1(canonicalUrl) + " is already being loaded." : string$.Modulel;
        t2 = A.NullableExtension_andThen0(t1._evaluate0$_activeModules.$index(0, canonicalUrl), new A._EvaluateVisitor__loadModule__closure1(t1, message));
        throw A.wrapException(t2 == null ? t1._evaluate0$_exception$1(message) : t2);
      }
      if (canonicalUrl != null)
        t1._evaluate0$_activeModules.$indexSet(0, canonicalUrl, t2);
      oldInDependency = t1._evaluate0$_inDependency;
      t1._evaluate0$_inDependency = result.isDependency;
      module = null;
      try {
        module = t1._evaluate0$_execute$5$configuration$namesInErrors$nodeWithSpan(result.importer, stylesheet, _this.configuration, _this.namesInErrors, t2);
      } finally {
        t1._evaluate0$_activeModules.remove$1(0, canonicalUrl);
        t1._evaluate0$_inDependency = oldInDependency;
      }
      try {
        _this.callback.call$1(module);
      } catch (exception) {
        t2 = A.unwrapException(exception);
        if (type$.SassRuntimeException_2._is(t2))
          throw exception;
        else if (t2 instanceof A.MultiSpanSassException0) {
          error = t2;
          stackTrace = A.getTraceFromException(exception);
          t2 = error._span_exception$_message;
          t3 = error;
          t4 = J.getInterceptor$z(t3);
          t3 = A.SourceSpanException.prototype.get$span.call(t4, t3);
          t4 = error.primaryLabel;
          t5 = error.secondarySpans;
          t6 = error;
          t7 = J.getInterceptor$z(t6);
          A.throwWithTrace0(new A.MultiSpanSassRuntimeException0(t1._evaluate0$_stackTrace$1(A.SourceSpanException.prototype.get$span.call(t7, t6)), t4, A.ConstantMap_ConstantMap$from(t5, type$.FileSpan, type$.String), t2, t3), stackTrace);
        } else if (t2 instanceof A.SassException0) {
          error0 = t2;
          stackTrace0 = A.getTraceFromException(exception);
          t2 = error0;
          t3 = J.getInterceptor$z(t2);
          A.throwWithTrace0(t1._evaluate0$_exception$2(error0._span_exception$_message, A.SourceSpanException.prototype.get$span.call(t3, t2)), stackTrace0);
        } else if (t2 instanceof A.MultiSpanSassScriptException0) {
          error1 = t2;
          stackTrace1 = A.getTraceFromException(exception);
          A.throwWithTrace0(t1._evaluate0$_multiSpanException$3(error1.message, error1.primaryLabel, error1.secondarySpans), stackTrace1);
        } else if (t2 instanceof A.SassScriptException0) {
          error2 = t2;
          stackTrace2 = A.getTraceFromException(exception);
          A.throwWithTrace0(t1._evaluate0$_exception$1(error2.message), stackTrace2);
        } else
          throw exception;
      }
    },
    $signature: 1
  };
  A._EvaluateVisitor__loadModule__closure1.prototype = {
    call$1(previousLoad) {
      return this.$this._evaluate0$_multiSpanException$3(this.message, "new load", A.LinkedHashMap_LinkedHashMap$_literal([previousLoad.get$span(previousLoad), "original load"], type$.FileSpan, type$.String));
    },
    $signature: 93
  };
  A._EvaluateVisitor__execute_closure1.prototype = {
    call$0() {
      var t3, t4, t5, t6, _this = this,
        t1 = _this.$this,
        oldImporter = t1._evaluate0$_importer,
        oldStylesheet = t1._evaluate0$__stylesheet,
        oldRoot = t1._evaluate0$__root,
        oldParent = t1._evaluate0$__parent,
        oldEndOfImports = t1._evaluate0$__endOfImports,
        oldOutOfOrderImports = t1._evaluate0$_outOfOrderImports,
        oldExtensionStore = t1._evaluate0$__extensionStore,
        t2 = t1._evaluate0$_atRootExcludingStyleRule,
        oldStyleRule = t2 ? null : t1._evaluate0$_styleRuleIgnoringAtRoot,
        oldMediaQueries = t1._evaluate0$_mediaQueries,
        oldDeclarationName = t1._evaluate0$_declarationName,
        oldInUnknownAtRule = t1._evaluate0$_inUnknownAtRule,
        oldInKeyframes = t1._evaluate0$_inKeyframes,
        oldConfiguration = t1._evaluate0$_configuration;
      t1._evaluate0$_importer = _this.importer;
      t3 = t1._evaluate0$__stylesheet = _this.stylesheet;
      t4 = t3.span;
      t5 = t1._evaluate0$__parent = t1._evaluate0$__root = A.ModifiableCssStylesheet$0(t4);
      t1._evaluate0$__endOfImports = 0;
      t1._evaluate0$_outOfOrderImports = null;
      t1._evaluate0$__extensionStore = _this.extensionStore;
      t1._evaluate0$_declarationName = t1._evaluate0$_mediaQueries = t1._evaluate0$_styleRuleIgnoringAtRoot = null;
      t1._evaluate0$_inKeyframes = t1._evaluate0$_atRootExcludingStyleRule = t1._evaluate0$_inUnknownAtRule = false;
      t6 = _this.configuration;
      if (t6 != null)
        t1._evaluate0$_configuration = t6;
      t1.visitStylesheet$1(t3);
      t3 = t1._evaluate0$_outOfOrderImports == null ? t5 : new A.CssStylesheet0(new A.UnmodifiableListView(t1._evaluate0$_addOutOfOrderImports$0(), type$.UnmodifiableListView_CssNode_2), t4);
      _this.css._value = t3;
      t1._evaluate0$_importer = oldImporter;
      t1._evaluate0$__stylesheet = oldStylesheet;
      t1._evaluate0$__root = oldRoot;
      t1._evaluate0$__parent = oldParent;
      t1._evaluate0$__endOfImports = oldEndOfImports;
      t1._evaluate0$_outOfOrderImports = oldOutOfOrderImports;
      t1._evaluate0$__extensionStore = oldExtensionStore;
      t1._evaluate0$_styleRuleIgnoringAtRoot = oldStyleRule;
      t1._evaluate0$_mediaQueries = oldMediaQueries;
      t1._evaluate0$_declarationName = oldDeclarationName;
      t1._evaluate0$_inUnknownAtRule = oldInUnknownAtRule;
      t1._evaluate0$_atRootExcludingStyleRule = t2;
      t1._evaluate0$_inKeyframes = oldInKeyframes;
      t1._evaluate0$_configuration = oldConfiguration;
    },
    $signature: 1
  };
  A._EvaluateVisitor__combineCss_closure5.prototype = {
    call$1(module) {
      return module.get$transitivelyContainsCss();
    },
    $signature: 142
  };
  A._EvaluateVisitor__combineCss_closure6.prototype = {
    call$1(target) {
      return !this.selectors.contains$1(0, target);
    },
    $signature: 15
  };
  A._EvaluateVisitor__combineCss_closure7.prototype = {
    call$1(module) {
      return module.cloneCss$0();
    },
    $signature: 398
  };
  A._EvaluateVisitor__extendModules_closure3.prototype = {
    call$1(target) {
      return !this.originalSelectors.contains$1(0, target);
    },
    $signature: 15
  };
  A._EvaluateVisitor__extendModules_closure4.prototype = {
    call$0() {
      return A._setArrayType([], type$.JSArray_ExtensionStore_2);
    },
    $signature: 168
  };
  A._EvaluateVisitor__topologicalModules_visitModule1.prototype = {
    call$1(module) {
      var t1, t2, t3, _i, upstream;
      for (t1 = module.get$upstream(), t2 = t1.length, t3 = this.seen, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        upstream = t1[_i];
        if (upstream.get$transitivelyContainsCss() && t3.add$1(0, upstream))
          this.call$1(upstream);
      }
      this.sorted.addFirst$1(module);
    },
    $signature: 66
  };
  A._EvaluateVisitor_visitAtRootRule_closure5.prototype = {
    call$0() {
      var t1 = A.SpanScanner$(this.resolved, null);
      return new A.AtRootQueryParser0(t1, this.$this._evaluate0$_logger).parse$0();
    },
    $signature: 108
  };
  A._EvaluateVisitor_visitAtRootRule_closure6.prototype = {
    call$0() {
      var t1, t2, t3, _i;
      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)
        t1[_i].accept$1(t3);
    },
    $signature: 1
  };
  A._EvaluateVisitor_visitAtRootRule_closure7.prototype = {
    call$0() {
      var t1, t2, t3, _i;
      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)
        t1[_i].accept$1(t3);
    },
    $signature: 0
  };
  A._EvaluateVisitor__scopeForAtRoot_closure11.prototype = {
    call$1(callback) {
      var t1 = this.$this,
        t2 = t1._evaluate0$_assertInModule$2(t1._evaluate0$__parent, "__parent");
      t1._evaluate0$__parent = this.newParent;
      t1._evaluate0$_environment.scope$1$2$when(callback, this.node.hasDeclarations, type$.void);
      t1._evaluate0$__parent = t2;
    },
    $signature: 28
  };
  A._EvaluateVisitor__scopeForAtRoot_closure12.prototype = {
    call$1(callback) {
      var t1 = this.$this,
        oldAtRootExcludingStyleRule = t1._evaluate0$_atRootExcludingStyleRule;
      t1._evaluate0$_atRootExcludingStyleRule = true;
      this.innerScope.call$1(callback);
      t1._evaluate0$_atRootExcludingStyleRule = oldAtRootExcludingStyleRule;
    },
    $signature: 28
  };
  A._EvaluateVisitor__scopeForAtRoot_closure13.prototype = {
    call$1(callback) {
      return this.$this._evaluate0$_withMediaQueries$2(null, new A._EvaluateVisitor__scopeForAtRoot__closure1(this.innerScope, callback));
    },
    $signature: 28
  };
  A._EvaluateVisitor__scopeForAtRoot__closure1.prototype = {
    call$0() {
      return this.innerScope.call$1(this.callback);
    },
    $signature: 1
  };
  A._EvaluateVisitor__scopeForAtRoot_closure14.prototype = {
    call$1(callback) {
      var t1 = this.$this,
        wasInKeyframes = t1._evaluate0$_inKeyframes;
      t1._evaluate0$_inKeyframes = false;
      this.innerScope.call$1(callback);
      t1._evaluate0$_inKeyframes = wasInKeyframes;
    },
    $signature: 28
  };
  A._EvaluateVisitor__scopeForAtRoot_closure15.prototype = {
    call$1($parent) {
      return type$.CssAtRule_2._is($parent);
    },
    $signature: 170
  };
  A._EvaluateVisitor__scopeForAtRoot_closure16.prototype = {
    call$1(callback) {
      var t1 = this.$this,
        wasInUnknownAtRule = t1._evaluate0$_inUnknownAtRule;
      t1._evaluate0$_inUnknownAtRule = false;
      this.innerScope.call$1(callback);
      t1._evaluate0$_inUnknownAtRule = wasInUnknownAtRule;
    },
    $signature: 28
  };
  A._EvaluateVisitor_visitContentRule_closure1.prototype = {
    call$0() {
      var t1, t2, t3, _i;
      for (t1 = this.content.declaration.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)
        t1[_i].accept$1(t3);
      return null;
    },
    $signature: 1
  };
  A._EvaluateVisitor_visitDeclaration_closure3.prototype = {
    call$1(value) {
      return new A.CssValue0(value.accept$1(this.$this), value.get$span(value), type$.CssValue_Value_2);
    },
    $signature: 399
  };
  A._EvaluateVisitor_visitDeclaration_closure4.prototype = {
    call$0() {
      var t1, t2, t3, _i;
      for (t1 = this.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)
        t1[_i].accept$1(t3);
    },
    $signature: 1
  };
  A._EvaluateVisitor_visitEachRule_closure5.prototype = {
    call$1(value) {
      var t1 = this.$this,
        t2 = this.nodeWithSpan;
      return t1._evaluate0$_environment.setLocalVariable$3(B.JSArray_methods.get$first(this.node.variables), t1._evaluate0$_withoutSlash$2(value, t2), t2);
    },
    $signature: 53
  };
  A._EvaluateVisitor_visitEachRule_closure6.prototype = {
    call$1(value) {
      return this.$this._evaluate0$_setMultipleVariables$3(this.node.variables, value, this.nodeWithSpan);
    },
    $signature: 53
  };
  A._EvaluateVisitor_visitEachRule_closure7.prototype = {
    call$0() {
      var _this = this,
        t1 = _this.$this;
      return t1._evaluate0$_handleReturn$2(_this.list.get$asList(), new A._EvaluateVisitor_visitEachRule__closure1(t1, _this.setVariables, _this.node));
    },
    $signature: 39
  };
  A._EvaluateVisitor_visitEachRule__closure1.prototype = {
    call$1(element) {
      var t1;
      this.setVariables.call$1(element);
      t1 = this.$this;
      return t1._evaluate0$_handleReturn$2(this.node.children, new A._EvaluateVisitor_visitEachRule___closure1(t1));
    },
    $signature: 201
  };
  A._EvaluateVisitor_visitEachRule___closure1.prototype = {
    call$1(child) {
      return child.accept$1(this.$this);
    },
    $signature: 79
  };
  A._EvaluateVisitor_visitExtendRule_closure1.prototype = {
    call$0() {
      return A.SelectorList_SelectorList$parse0(A.trimAscii0(this.targetText.value, true), false, true, this.$this._evaluate0$_logger);
    },
    $signature: 45
  };
  A._EvaluateVisitor_visitAtRule_closure5.prototype = {
    call$1(value) {
      return this.$this._evaluate0$_interpolationToValue$3$trim$warnForColor(value, true, true);
    },
    $signature: 402
  };
  A._EvaluateVisitor_visitAtRule_closure6.prototype = {
    call$0() {
      var t2, t3, _i,
        t1 = this.$this,
        styleRule = t1._evaluate0$_atRootExcludingStyleRule ? null : t1._evaluate0$_styleRuleIgnoringAtRoot;
      if (styleRule == null || t1._evaluate0$_inKeyframes)
        for (t2 = this.children, t3 = t2.length, _i = 0; _i < t3; ++_i)
          t2[_i].accept$1(t1);
      else
        t1._evaluate0$_withParent$2$3$scopeWhen(A.ModifiableCssStyleRule$0(styleRule.selector, styleRule.span, styleRule.originalSelector), new A._EvaluateVisitor_visitAtRule__closure1(t1, this.children), false, type$.ModifiableCssStyleRule_2, type$.Null);
    },
    $signature: 1
  };
  A._EvaluateVisitor_visitAtRule__closure1.prototype = {
    call$0() {
      var t1, t2, t3, _i;
      for (t1 = this.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)
        t1[_i].accept$1(t3);
    },
    $signature: 1
  };
  A._EvaluateVisitor_visitAtRule_closure7.prototype = {
    call$1(node) {
      return type$.CssStyleRule_2._is(node);
    },
    $signature: 7
  };
  A._EvaluateVisitor_visitForRule_closure9.prototype = {
    call$0() {
      return this.node.from.accept$1(this.$this).assertNumber$0();
    },
    $signature: 218
  };
  A._EvaluateVisitor_visitForRule_closure10.prototype = {
    call$0() {
      return this.node.to.accept$1(this.$this).assertNumber$0();
    },
    $signature: 218
  };
  A._EvaluateVisitor_visitForRule_closure11.prototype = {
    call$0() {
      return this.fromNumber.assertInt$0();
    },
    $signature: 12
  };
  A._EvaluateVisitor_visitForRule_closure12.prototype = {
    call$0() {
      var t1 = this.fromNumber;
      return this.toNumber.coerce$2(t1.get$numeratorUnits(t1), t1.get$denominatorUnits(t1)).assertInt$0();
    },
    $signature: 12
  };
  A._EvaluateVisitor_visitForRule_closure13.prototype = {
    call$0() {
      var i, t3, t4, t5, t6, t7, t8, result, _this = this,
        t1 = _this.$this,
        t2 = _this.node,
        nodeWithSpan = t1._evaluate0$_expressionNode$1(t2.from);
      for (i = _this.from, t3 = _this._box_0, t4 = _this.direction, t5 = t2.variable, t6 = _this.fromNumber, t2 = t2.children; i !== t3.to; i += t4) {
        t7 = t1._evaluate0$_environment;
        t8 = t6.get$numeratorUnits(t6);
        t7.setLocalVariable$3(t5, A.SassNumber_SassNumber$withUnits0(i, t6.get$denominatorUnits(t6), t8), nodeWithSpan);
        result = t1._evaluate0$_handleReturn$2(t2, new A._EvaluateVisitor_visitForRule__closure1(t1));
        if (result != null)
          return result;
      }
      return null;
    },
    $signature: 39
  };
  A._EvaluateVisitor_visitForRule__closure1.prototype = {
    call$1(child) {
      return child.accept$1(this.$this);
    },
    $signature: 79
  };
  A._EvaluateVisitor_visitForwardRule_closure3.prototype = {
    call$1(module) {
      this.$this._evaluate0$_environment.forwardModule$2(module, this.node);
    },
    $signature: 66
  };
  A._EvaluateVisitor_visitForwardRule_closure4.prototype = {
    call$1(module) {
      this.$this._evaluate0$_environment.forwardModule$2(module, this.node);
    },
    $signature: 66
  };
  A._EvaluateVisitor_visitIfRule_closure1.prototype = {
    call$0() {
      var t1 = this.$this;
      return t1._evaluate0$_handleReturn$2(this._box_0.clause.children, new A._EvaluateVisitor_visitIfRule__closure1(t1));
    },
    $signature: 39
  };
  A._EvaluateVisitor_visitIfRule__closure1.prototype = {
    call$1(child) {
      return child.accept$1(this.$this);
    },
    $signature: 79
  };
  A._EvaluateVisitor__visitDynamicImport_closure1.prototype = {
    call$0() {
      var t3, t4, oldImporter, oldInDependency, loadsUserDefinedModules, children, t5, t6, t7, t8, t9, t10, environment, module, visitor,
        t1 = this.$this,
        t2 = this.$import,
        result = t1._evaluate0$_loadStylesheet$3$forImport(t2.urlString, t2.span, true),
        stylesheet = result.stylesheet,
        url = stylesheet.span.file.url;
      if (url != null) {
        t3 = t1._evaluate0$_activeModules;
        if (t3.containsKey$1(url)) {
          t2 = A.NullableExtension_andThen0(t3.$index(0, url), new A._EvaluateVisitor__visitDynamicImport__closure7(t1));
          throw A.wrapException(t2 == null ? t1._evaluate0$_exception$1("This file is already being loaded.") : t2);
        }
        t3.$indexSet(0, url, t2);
      }
      t2 = stylesheet._stylesheet1$_uses;
      t3 = type$.UnmodifiableListView_UseRule_2;
      t4 = new A.UnmodifiableListView(t2, t3);
      if (t4.get$length(t4) === 0) {
        t4 = new A.UnmodifiableListView(stylesheet._stylesheet1$_forwards, type$.UnmodifiableListView_ForwardRule_2);
        t4 = t4.get$length(t4) === 0;
      } else
        t4 = false;
      if (t4) {
        oldImporter = t1._evaluate0$_importer;
        t2 = t1._evaluate0$_assertInModule$2(t1._evaluate0$__stylesheet, "_stylesheet");
        oldInDependency = t1._evaluate0$_inDependency;
        t1._evaluate0$_importer = result.importer;
        t1._evaluate0$__stylesheet = stylesheet;
        t1._evaluate0$_inDependency = result.isDependency;
        t1.visitStylesheet$1(stylesheet);
        t1._evaluate0$_importer = oldImporter;
        t1._evaluate0$__stylesheet = t2;
        t1._evaluate0$_inDependency = oldInDependency;
        t1._evaluate0$_activeModules.remove$1(0, url);
        return;
      }
      t2 = new A.UnmodifiableListView(t2, t3);
      if (!t2.any$1(t2, new A._EvaluateVisitor__visitDynamicImport__closure8())) {
        t2 = new A.UnmodifiableListView(stylesheet._stylesheet1$_forwards, type$.UnmodifiableListView_ForwardRule_2);
        loadsUserDefinedModules = t2.any$1(t2, new A._EvaluateVisitor__visitDynamicImport__closure9());
      } else
        loadsUserDefinedModules = true;
      children = A._Cell$();
      t2 = t1._evaluate0$_environment;
      t3 = type$.String;
      t4 = type$.Module_Callable_2;
      t5 = type$.AstNode_2;
      t6 = A._setArrayType([], type$.JSArray_Module_Callable_2);
      t7 = t2._environment0$_variables;
      t7 = A._setArrayType(t7.slice(0), A._arrayInstanceType(t7));
      t8 = t2._environment0$_variableNodes;
      t8 = A._setArrayType(t8.slice(0), A._arrayInstanceType(t8));
      t9 = t2._environment0$_functions;
      t9 = A._setArrayType(t9.slice(0), A._arrayInstanceType(t9));
      t10 = t2._environment0$_mixins;
      t10 = A._setArrayType(t10.slice(0), A._arrayInstanceType(t10));
      environment = A.Environment$_0(A.LinkedHashMap_LinkedHashMap$_empty(t3, t4), A.LinkedHashMap_LinkedHashMap$_empty(t3, t5), A.LinkedHashMap_LinkedHashMap$_empty(t4, t5), t2._environment0$_importedModules, null, null, t6, t7, t8, t9, t10, t2._environment0$_content);
      t1._evaluate0$_withEnvironment$2(environment, new A._EvaluateVisitor__visitDynamicImport__closure10(t1, result, stylesheet, loadsUserDefinedModules, environment, children));
      module = environment.toDummyModule$0();
      t1._evaluate0$_environment.importForwards$1(module);
      if (loadsUserDefinedModules) {
        if (module.transitivelyContainsCss)
          t1._evaluate0$_combineCss$2$clone(module, module.transitivelyContainsExtensions).accept$1(t1);
        visitor = new A._ImportedCssVisitor1(t1);
        for (t2 = J.get$iterator$ax(children._readLocal$0()); t2.moveNext$0();)
          t2.get$current(t2).accept$1(visitor);
      }
      t1._evaluate0$_activeModules.remove$1(0, url);
    },
    $signature: 0
  };
  A._EvaluateVisitor__visitDynamicImport__closure7.prototype = {
    call$1(previousLoad) {
      return this.$this._evaluate0$_multiSpanException$3("This file is already being loaded.", "new load", A.LinkedHashMap_LinkedHashMap$_literal([previousLoad.get$span(previousLoad), "original load"], type$.FileSpan, type$.String));
    },
    $signature: 93
  };
  A._EvaluateVisitor__visitDynamicImport__closure8.prototype = {
    call$1(rule) {
      return rule.url.get$scheme() !== "sass";
    },
    $signature: 178
  };
  A._EvaluateVisitor__visitDynamicImport__closure9.prototype = {
    call$1(rule) {
      return rule.url.get$scheme() !== "sass";
    },
    $signature: 179
  };
  A._EvaluateVisitor__visitDynamicImport__closure10.prototype = {
    call$0() {
      var t7, t8, t9, _this = this,
        t1 = _this.$this,
        oldImporter = t1._evaluate0$_importer,
        t2 = t1._evaluate0$_assertInModule$2(t1._evaluate0$__stylesheet, "_stylesheet"),
        t3 = t1._evaluate0$_assertInModule$2(t1._evaluate0$__root, "_root"),
        t4 = t1._evaluate0$_assertInModule$2(t1._evaluate0$__parent, "__parent"),
        t5 = t1._evaluate0$_assertInModule$2(t1._evaluate0$__endOfImports, "_endOfImports"),
        oldOutOfOrderImports = t1._evaluate0$_outOfOrderImports,
        oldConfiguration = t1._evaluate0$_configuration,
        oldInDependency = t1._evaluate0$_inDependency,
        t6 = _this.result;
      t1._evaluate0$_importer = t6.importer;
      t7 = t1._evaluate0$__stylesheet = _this.stylesheet;
      t8 = _this.loadsUserDefinedModules;
      if (t8) {
        t9 = A.ModifiableCssStylesheet$0(t7.span);
        t1._evaluate0$__root = t9;
        t1._evaluate0$__parent = t1._evaluate0$_assertInModule$2(t9, "_root");
        t1._evaluate0$__endOfImports = 0;
        t1._evaluate0$_outOfOrderImports = null;
      }
      t1._evaluate0$_inDependency = t6.isDependency;
      t6 = new A.UnmodifiableListView(t7._stylesheet1$_forwards, type$.UnmodifiableListView_ForwardRule_2);
      if (!t6.get$isEmpty(t6))
        t1._evaluate0$_configuration = _this.environment.toImplicitConfiguration$0();
      t1.visitStylesheet$1(t7);
      t6 = t8 ? t1._evaluate0$_addOutOfOrderImports$0() : A._setArrayType([], type$.JSArray_ModifiableCssNode_2);
      _this.children._value = t6;
      t1._evaluate0$_importer = oldImporter;
      t1._evaluate0$__stylesheet = t2;
      if (t8) {
        t1._evaluate0$__root = t3;
        t1._evaluate0$__parent = t4;
        t1._evaluate0$__endOfImports = t5;
        t1._evaluate0$_outOfOrderImports = oldOutOfOrderImports;
      }
      t1._evaluate0$_configuration = oldConfiguration;
      t1._evaluate0$_inDependency = oldInDependency;
    },
    $signature: 1
  };
  A._EvaluateVisitor_visitIncludeRule_closure7.prototype = {
    call$0() {
      var t1 = this.node;
      return this.$this._evaluate0$_environment.getMixin$2$namespace(t1.name, t1.namespace);
    },
    $signature: 105
  };
  A._EvaluateVisitor_visitIncludeRule_closure8.prototype = {
    call$0() {
      return this.node.get$spanWithoutContent();
    },
    $signature: 30
  };
  A._EvaluateVisitor_visitIncludeRule_closure10.prototype = {
    call$1($content) {
      var t1 = this.$this;
      return new A.UserDefinedCallable0($content, t1._evaluate0$_environment.closure$0(), t1._evaluate0$_inDependency, type$.UserDefinedCallable_Environment_2);
    },
    $signature: 404
  };
  A._EvaluateVisitor_visitIncludeRule_closure9.prototype = {
    call$0() {
      var _this = this,
        t1 = _this.$this,
        t2 = t1._evaluate0$_environment,
        oldContent = t2._environment0$_content;
      t2._environment0$_content = _this.contentCallable;
      new A._EvaluateVisitor_visitIncludeRule__closure1(t1, _this.mixin, _this.nodeWithS