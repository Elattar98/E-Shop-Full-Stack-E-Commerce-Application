                 _this.assetManager.writeAllLicenses(_this.moduleCache.getAllModules(), compilation);
                            });
                        }
                    }
                });
            }
        }
        else if (typeof compiler.plugin !== 'undefined') {
            compiler.plugin('compilation', function (compilation) {
                if (typeof compilation.plugin !== 'undefined') {
                    compilation.plugin('optimize-chunk-assets', function (chunks, callback) {
                        _this.iterateChunks(compilation, chunks);
                        callback();
                    });
                }
            });
        }
    };
    WebpackCompilerHandler.prototype.iterateChunksForBanner = function (compilation) {
        var _this = this;
        // for webpack v4 we write banners in iterateChunks.
        // because of plugin hook ordering issues, it is done separately here for webpack v5.
        // it is important to note that renderBanner will not receive any modules in the second
        // argument due to plugin hook ordering issues in webpack v5.
        // For the banner to work in webpack v5 production mode, TerserPlugin must be configured in a specific way.
        // Please check the documentation of License Webpack Plugin for more details.
        if (typeof compilation.hooks.processAssets !== 'undefined') {
            // webpack v5
            compilation.hooks.processAssets.tap({
                name: 'LicenseWebpackPlugin',
                stage: WebpackCompilerHandler.PROCESS_ASSETS_STAGE_ADDITIONS
            }, function () {
                var e_1, _a;
                try {
                    for (var _b = __values(compilation.chunks), _c = _b.next(); !_c.done; _c = _b.next()) {
   