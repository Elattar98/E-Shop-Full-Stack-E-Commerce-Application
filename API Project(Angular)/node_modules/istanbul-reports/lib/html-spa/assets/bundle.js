
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              wasInKeyframes = t1._async_evaluate$_inKeyframes;
              t1._async_evaluate$_inKeyframes = false;
              $async$goto = 2;
              return A._asyncAwait($async$self.innerScope.call$1(callback), $async$call$1);
            case 2:
              // returning from await.
              t1._async_evaluate$_inKeyframes = wasInKeyframes;
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 32
  };
  A._EvaluateVisitor__scopeForAtRoot_closure9.prototype = {
    call$1($parent) {
      return type$.CssAtRule._is($parent);
    },
    $signature: 160
  };
  A._EvaluateVisitor__scopeForAtRoot_closure10.prototype = {
    call$1(callback) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, wasInUnknownAtRule;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              wasInUnknownAtRule = t1._async_evaluate$_inUnknownAtRule;
              t1._async_evaluate$_inUnknownAtRule = false;
              $async$goto = 2;
              return A._asyncAwait($async$self.innerScope.call$1(callback), $async$call$1);
            case 2:
              // returning from await.
              t1._async_evaluate$_inUnknownAtRule = wasInUnknownAtRule;
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 32
  };
  A._EvaluateVisitor_visitContentRule_closure0.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Null),
        $async$returnValue, $async$self = this, t1, t2, t3, _i;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.content.declaration.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;
            case 3:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $async$goto = 6;
              return A._asyncAwait(t1[_i].accept$1(t3), $async$call$0);
            case 6:
              // returning from await.
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  A._EvaluateVisitor_visitDeclaration_closure1.prototype = {
    call$1(value) {
      return this.$call$body$_EvaluateVisitor_visitDeclaration_closure(value);
    },
    $call$body$_EvaluateVisitor_visitDeclaration_closure(value) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.CssValue_Value),
        $async$returnValue, $async$self = this, $async$temp1;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$temp1 = A;
              $async$goto = 3;
              return A._asyncAwait(value.accept$1($async$self.$this), $async$call$1);
            case 3:
              // returning from await.
              $async$returnValue = new $async$temp1.CssValue($async$result, value.get$span(value), type$.CssValue_Value);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 448
  };
  A._EvaluateVisitor_visitDeclaration_closure2.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, t3, _i;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;
            case 2:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 4;
                break;
              }
              $async$goto = 5;
              return A._asyncAwait(t1[_i].accept$1(t3), $async$call$0);
            case 5:
              // returning from await.
            case 3:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 2;
              break;
            case 4:
              // after for
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  A._EvaluateVisitor_visitEachRule_closure2.prototype = {
    call$1(value) {
      var t1 = this.$this,
        t2 = this.nodeWithSpan;
      return t1._async_evaluate$_environment.setLocalVariable$3(B.JSArray_methods.get$first(this.node.variables), t1._async_evaluate$_withoutSlash$2(value, t2), t2);
    },
    $signature: 56
  };
  A._EvaluateVisitor_visitEachRule_closure3.prototype = {
    call$1(value) {
      return this.$this._async_evaluate$_setMultipleVariables$3(this.node.variables, value, this.nodeWithSpan);
    },
    $signature: 56
  };
  A._EvaluateVisitor_visitEachRule_closure4.prototype = {
    call$0() {
      var _this = this,
        t1 = _this.$this;
      return t1._async_evaluate$_handleReturn$2(_this.list.get$asList(), new A._EvaluateVisitor_visitEachRule__closure0(t1, _this.setVariables, _this.node));
    },
    $signature: 68
  };
  A._EvaluateVisitor_visitEachRule__closure0.prototype = {
    call$1(element) {
      var t1;
      this.setVariables.call$1(element);
      t1 = this.$this;
      return t1._async_evaluate$_handleReturn$2(this.node.children, new A._EvaluateVisitor_visitEachRule___closure0(t1));
    },
    $signature: 462
  };
  A._EvaluateVisitor_visitEachRule___closure0.prototype = {
    call$1(child) {
      return child.accept$1(this.$this);
    },
    $signature: 84
  };
  A._EvaluateVisitor_visitExtendRule_closure0.prototype = {
    call$0() {
      var t1 = this.targetText;
      return A.SelectorList_SelectorList$parse(A.trimAscii(t1.get$value(t1), true), false, true, this.$this._async_evaluate$_logger);
    },
    $signature: 44
  };
  A._EvaluateVisitor_visitAtRule_closure2.prototype = {
    call$1(value) {
      return this.$this._async_evaluate$_interpolationToValue$3$trim$warnForColor(value, true, true);
    },
    $signature: 472
  };
  A._EvaluateVisitor_visitAtRule_closure3.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t2, t3, _i, t1, styleRule;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              styleRule = t1._async_evaluate$_atRootExcludingStyleRule ? null : t1._async_evaluate$_styleRuleIgnoringAtRoot;
              $async$goto = styleRule == null || t1._async_evaluate$_inKeyframes ? 2 : 4;
              break;
            case 2:
              // then
              t2 = $async$self.children, t3 = t2.length, _i = 0;
            case 5:
              // for condition
              if (!(_i < t3)) {
                // goto after for
                $async$goto = 7;
                break;
              }
              $async$goto = 8;
              return A._asyncAwait(t2[_i].accept$1(t1), $async$call$0);
            case 8:
              // returning from await.
            case 6:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 5;
              break;
            case 7:
              // after for
              // goto join
              $async$goto = 3;
              break;
            case 4:
              // else
              $async$goto = 9;
              return A._asyncAwait(t1._async_evaluate$_withParent$2$3$scopeWhen(A.ModifiableCssStyleRule$(styleRule.selector, styleRule.span, styleRule.originalSelector), new A._EvaluateVisitor_visitAtRule__closure0(t1, $async$self.children), false, type$.ModifiableCssStyleRule, type$.Null), $async$call$0);
            case 9:
              // returning from await.
            case 3:
              // join
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  A._EvaluateVisitor_visitAtRule__closure0.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, t3, _i;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;
            case 2:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 4;
                break;
              }
              $async$goto = 5;
              return A._asyncAwait(t1[_i].accept$1(t3), $async$call$0);
            case 5:
              // returning from await.
            case 3:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 2;
              break;
            case 4:
              // after for
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  A._EvaluateVisitor_visitAtRule_closure4.prototype = {
    call$1(node) {
      return type$.CssStyleRule._is(node);
    },
    $signature: 8
  };
  A._EvaluateVisitor_visitForRule_closure4.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.SassNumber),
        $async$returnValue, $async$self = this;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait($async$self.node.from.accept$1($async$self.$this), $async$call$0);
            case 3:
              // returning from await.
              $async$returnValue = $async$result.assertNumber$0();
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 158
  };
  A._EvaluateVisitor_visitForRule_closure5.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.SassNumber),
        $async$returnValue, $async$self = this;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait($async$self.node.to.accept$1($async$self.$this), $async$call$0);
            case 3:
              // returning from await.
              $async$returnValue = $async$result.assertNumber$0();
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 158
  };
  A._EvaluateVisitor_visitForRule_closure6.prototype = {
    call$0() {
      return this.fromNumber.assertInt$0();
    },
    $signature: 12
  };
  A._EvaluateVisitor_visitForRule_closure7.prototype = {
    call$0() {
      var t1 = this.fromNumber;
      return this.toNumber.coerce$2(t1.get$numeratorUnits(t1), t1.get$denominatorUnits(t1)).assertInt$0();
    },
    $signature: 12
  };
  A._EvaluateVisitor_visitForRule_closure8.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_Value),
        $async$returnValue, $async$self = this, i, t3, t4, t5, t6, t7, t8, result, t1, t2, nodeWithSpan;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t2 = $async$self.node;
              nodeWithSpan = t1._async_evaluate$_expressionNode$1(t2.from);
              i = $async$self.from, t3 = $async$self._box_0, t4 = $async$self.direction, t5 = t2.variable, t6 = $async$self.fromNumber, t2 = t2.children;
            case 3:
              // for condition
              if (!(i !== t3.to)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              t7 = t1._async_evaluate$_environment;
              t8 = t6.get$numeratorUnits(t6);
              t7.setLocalVariable$3(t5, A.SassNumber_SassNumber$withUnits(i, t6.get$denominatorUnits(t6), t8), nodeWithSpan);
              $async$goto = 6;
              return A._asyncAwait(t1._async_evaluate$_handleReturn$2(t2, new A._EvaluateVisitor_visitForRule__closure0(t1)), $async$call$0);
            case 6:
              // returning from await.
              result = $async$result;
              if (result != null) {
                $async$returnValue = result;
                // goto return
                $async$goto = 1;
                break;
              }
            case 4:
              // for update
              i += t4;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 68
  };
  A._EvaluateVisitor_visitForRule__closure0.prototype = {
    call$1(child) {
      return child.accept$1(this.$this);
    },
    $signature: 84
  };
  A._EvaluateVisitor_visitForwardRule_closure1.prototype = {
    call$1(module) {
      this.$this._async_evaluate$_environment.forwardModule$2(module, this.node);
    },
    $signature: 124
  };
  A._EvaluateVisitor_visitForwardRule_closure2.prototype = {
    call$1(module) {
      this.$this._async_evaluate$_environment.forwardModule$2(module, this.node);
    },
    $signature: 124
  };
  A._EvaluateVisitor_visitIfRule_closure0.prototype = {
    call$0() {
      var t1 = this.$this;
      return t1._async_evaluate$_handleReturn$2(this._box_0.clause.children, new A._EvaluateVisitor_visitIfRule__closure0(t1));
    },
    $signature: 68
  };
  A._EvaluateVisitor_visitIfRule__closure0.prototype = {
    call$1(child) {
      return child.accept$1(this.$this);
    },
    $signature: 84
  };
  A._EvaluateVisitor__visitDynamicImport_closure0.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t3, t4, oldImporter, oldInDependency, loadsUserDefinedModules, children, t5, t6, t7, t8, t9, t10, environment, module, visitor, t1, t2, result, stylesheet, url;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t2 = $async$self.$import;
              $async$goto = 3;
              return A._asyncAwait(t1._async_evaluate$_loadStylesheet$3$forImport(t2.urlString, t2.span, true), $async$call$0);
            case 3:
              // returning from await.
              result = $async$result;
              stylesheet = result.stylesheet;
              url = stylesheet.span.file.url;
              if (url != null) {
                t3 = t1._async_evaluate$_activeModules;
                if (t3.containsKey$1(url)) {
                  t2 = A.NullableExtension_andThen(t3.$index(0, url), new A._EvaluateVisitor__visitDynamicImport__closure3(t1));
                  throw A.wrapException(t2 == null ? t1._async_evaluate$_exception$1("This file is already being loaded.") : t2);
                }
                t3.$indexSet(0, url, t2);
              }
              t2 = stylesheet._uses;
              t3 = type$.UnmodifiableListView_UseRule;
              t4 = new A.UnmodifiableListView(t2, t3);
              if (t4.get$length(t4) === 0) {
                t4 = new A.UnmodifiableListView(stylesheet._forwards, type$.UnmodifiableListView_ForwardRule);
                t4 = t4.get$length(t4) === 0;
              } else
                t4 = false;
              $async$goto = t4 ? 4 : 5;
              break;
            case 4:
              // then
              oldImporter = t1._async_evaluate$_importer;
              t2 = t1._async_evaluate$_assertInModule$2(t1._async_evaluate$__stylesheet, "_stylesheet");
              oldInDependency = t1._async_evaluate$_inDependency;
              t1._async_evaluate$_importer = result.importer;
              t1._async_evaluate$__stylesheet = stylesheet;
              t1._async_evaluate$_inDependency = result.isDependency;
              $async$goto = 6;
              return A._asyncAwait(t1.visitStylesheet$1(stylesheet), $async$call$0);
            case 6:
              // returning from await.
              t1._async_evaluate$_importer = oldImporter;
              t1._async_evaluate$__stylesheet = t2;
              t1._async_evaluate$_inDependency = oldInDependency;
              t1._async_evaluate$_activeModules.remove$1(0, url);
              // goto return
              $async$goto = 1;
              break;
            case 5:
              // join
              t2 = new A.UnmodifiableListView(t2, t3);
              if (!t2.any$1(t2, new A._EvaluateVisitor__visitDynamicImport__closure4())) {
                t2 = new A.UnmodifiableListView(stylesheet._forwards, type$.UnmodifiableListView_ForwardRule);
                loadsUserDefinedModules = t2.any$1(t2, new A._EvaluateVisitor__visitDynamicImport__closure5());
              } else
                loadsUserDefinedModules = true;
              children = A._Cell$();
              t2 = t1._async_evaluate$_environment;
              t3 = type$.String;
              t4 = type$.Module_AsyncCallable;
              t5 = type$.AstNode;
              t6 = A._setArrayType([], type$.JSArray_Module_AsyncCallable);
              t7 = t2._async_environment$_variables;
              t7 = A._setArrayType(t7.slice(0), A._arrayInstanceType(t7));
              t8 = t2._async_environment$_variableNodes;
              t8 = A._setArrayType(t8.slice(0), A._arrayInstanceType(t8));
              t9 = t2._async_environment$_functions;
              t9 = A._setArrayType(t9.slice(0), A._arrayInstanceType(t9));
              t10 = t2._async_environment$_mixins;
              t10 = A._setArrayType(t10.slice(0), A._arrayInstanceType(t10));
              environment = A.AsyncEnvironment$_(A.LinkedHashMap_LinkedHashMap$_empty(t3, t4), A.LinkedHashMap_LinkedHashMap$_empty(t3, t5), A.LinkedHashMap_LinkedHashMap$_empty(t4, t5), t2._async_environment$_importedModules, null, null, t6, t7, t8, t9, t10, t2._async_environment$_content);
              $async$goto = 7;
              return A._asyncAwait(t1._async_evaluate$_withEnvironment$1$2(environment, new A._EvaluateVisitor__visitDynamicImport__closure6(t1, result, stylesheet, loadsUserDefinedModules, environment, children), type$.Null), $async$call$0);
            case 7:
              // returning from await.
              module = environment.toDummyModule$0();
              t1._async_evaluate$_environment.importForwards$1(module);
              $async$goto = loadsUserDefinedModules ? 8 : 9;
              break;
            case 8:
              // then
              $async$goto = module.transitivelyContainsCss ? 10 : 11;
              break;
            case 10:
              // then
              $async$goto = 12;
              return A._asyncAwait(t1._async_evaluate$_combineCss$2$clone(module, module.transitivelyContainsExtensions).accept$1(t1), $async$call$0);
            case 12:
              // returning from await.
            case 11:
              // join
              visitor = new A._ImportedCssVisitor0(t1);
              for (t2 = J.get$iterator$ax(children._readLocal$0()); t2.moveNext$0();)
                t2.get$current(t2).accept$1(visitor);
            case 9:
              // join
              t1._async_evaluate$_activeModules.remove$1(0, url);
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 34
  };
  A._EvaluateVisitor__visitDynamicImport__closure3.prototype = {
    call$1(previousLoad) {
      return this.$this._async_evaluate$_multiSpanException$3("This file is already being loaded.", "new load", A.LinkedHashMap_LinkedHashMap$_literal([previousLoad.get$span(previousLoad), "original load"], type$.FileSpan, type$.String));
    },
    $signature: 87
  };
  A._EvaluateVisitor__visitDynamicImport__closure4.prototype = {
    call$1(rule) {
      return rule.url.get$scheme() !== "sass";
    },
    $signature: 154
  };
  A._EvaluateVisitor__visitDynamicImport__closure5.prototype = {
    call$1(rule) {
      return rule.url.get$scheme() !== "sass";
    },
    $signature: 153
  };
  A._EvaluateVisitor__visitDynamicImport__closure6.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t7, t8, t9, t1, oldImporter, t2, t3, t4, t5, oldOutOfOrderImports, oldConfiguration, oldInDependency, t6;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              oldImporter = t1._async_evaluate$_importer;
              t2 = t1._async_evaluate$_assertInModule$2(t1._async_evaluate$__stylesheet, "_stylesheet");
              t3 = t1._async_evaluate$_assertInModule$2(t1._async_evaluate$__root, "_root");
              t4 = t1._async_evaluate$_assertInModule$2(t1._async_evaluate$__parent, "__parent");
              t5 = t1._async_evaluate$_assertInModule$2(t1._async_evaluate$__endOfImports, "_endOfImports");
              oldOutOfOrderImports = t1._async_evaluate$_outOfOrderImports;
              oldConfiguration = t1._async_evaluate$_configuration;
              oldInDependency = t1._async_evaluate$_inDependency;
              t6 = $async$self.result;
              t1._async_evaluate$_importer = t6.importer;
              t7 = t1._async_evaluate$__stylesheet = $async$self.stylesheet;
              t8 = $async$self.loadsUserDefinedModules;
              if (t8) {
                t9 = A.ModifiableCssStylesheet$(t7.span);
                t1._async_evaluate$__root = t9;
                t1._async_evaluate$__parent = t1._async_evaluate$_assertInModule$2(t9, "_root");
                t1._async_evaluate$__endOfImports = 0;
                t1._async_evaluate$_outOfOrderImports = null;
              }
              t1._async_evaluate$_inDependency = t6.isDependency;
              t6 = new A.UnmodifiableListView(t7._forwards, type$.UnmodifiableListView_ForwardRule);
              if (!t6.get$isEmpty(t6))
                t1._async_evaluate$_configuration = $async$self.environment.toImplicitConfiguration$0();
              $async$goto = 2;
              return A._asyncAwait(t1.visitStylesheet$1(t7), $async$call$0);
            case 2:
              // returning from await.
              t6 = t8 ? t1._async_evaluate$_addOutOfOrderImports$0() : A._setArrayType([], type$.JSArray_ModifiableCssNode);
              $async$self.children._value = t6;
              t1._async_evaluate$_importer = oldImporter;
              t1._async_evaluate$__stylesheet = t2;
              if (t8) {
                t1._async_evaluate$__root = t3;
                t1._async_evaluate$__parent = t4;
                t1._async_evaluate$__endOfImports = t5;
                t1._async_evaluate$_outOfOrderImports = oldOutOfOrderImports;
              }
              t1._async_evaluate$_configuration = oldConfiguration;
              t1._async_evaluate$_inDependency = oldInDependency;
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  A._EvaluateVisitor_visitIncludeRule_closure3.prototype = {
    call$0() {
      var t1 = this.node;
      return this.$this._async_evaluate$_environment.getMixin$2$namespace(t1.name, t1.namespace);
    },
    $signature: 129
  };
  A._EvaluateVisitor_visitIncludeRule_closure4.prototype = {
    call$0() {
      return this.node.get$spanWithoutContent();
    },
    $signature: 30
  };
  A._EvaluateVisitor_visitIncludeRule_closure6.prototype = {
    call$1($content) {
      var t1 = this.$this;
      return new A.UserDefinedCallable($content, t1._async_evaluate$_environment.closure$0(), t1._async_evaluate$_inDependency, type$.UserDefinedCallable_AsyncEnvironment);
    },
    $signature: 502
  };
  A._EvaluateVisitor_visitIncludeRule_closure5.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              $async$goto = 2;
              return A._asyncAwait(t1._async_evaluate$_environment.withContent$2($async$self.contentCallable, new A._EvaluateVisitor_visitIncludeRule__closure0(t1, $async$self.mixin, $async$self.nodeWithSpan)), $async$call$0);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  A._EvaluateVisitor_visitIncludeRule__closure0.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              $async$goto = 2;
              return A._asyncAwait(t1._async_evaluate$_environment.asMixin$1(new A._EvaluateVisitor_visitIncludeRule___closure0(t1, $async$self.mixin, $async$self.nodeWithSpan)), $async$call$0);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 34
  };
  A._EvaluateVisitor_visitIncludeRule___closure0.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1, t2, t3, t4, t5, _i;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.mixin.declaration.children, t2 = t1.length, t3 = $async$self.$this, t4 = $async$self.nodeWithSpan, t5 = type$.nullable_Value, _i = 0;
            case 2:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 4;
                break;
              }
              $async$goto = 5;
              return A._asyncAwait(t3._async_evaluate$_addErrorSpan$1$2(t4, new A._EvaluateVisitor_visitIncludeRule____closure0(t3, t1[_i]), t5), $async$call$0);
            case 5:
              // returning from await.
            case 3:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 2;
              break;
            case 4:
              // after for
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 34
  };
  A._EvaluateVisitor_visitIncludeRule____closure0.prototype = {
    call$0() {
      return this.statement.accept$1(this.$this);
    },
    $signature: 68
  };
  A._EvaluateVisitor_visitMediaRule_closure2.prototype = {
    call$1(mediaQueries) {
      return this.$this._async_evaluate$_mergeMediaQueries$2(mediaQueries, this.queries);
    },
    $signature: 83
  };
  A._EvaluateVisitor_visitMediaRule_closure3.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t2 = $async$self.mergedQueries;
              if (t2 == null)
                t2 = $async$self.queries;
              $async$goto = 2;
              return A._asyncAwait(t1._async_evaluate$_withMediaQueries$1$2(t2, new A._EvaluateVisitor_visitMediaRule__closure0(t1, $async$self.node), type$.Null), $async$call$0);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  A._EvaluateVisitor_visitMediaRule__closure0.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t2, t3, _i, t1, styleRule;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              styleRule = t1._async_evaluate$_atRootExcludingStyleRule ? null : t1._async_evaluate$_styleRuleIgnoringAtRoot;
              $async$goto = styleRule == null ? 2 : 4;
              break;
            case 2:
              // then
              t2 = $async$self.node.children, t3 = t2.length, _i = 0;
            case 5:
              // for condition
              if (!(_i < t3)) {
                // goto after for
                $async$goto = 7;
                break;
              }
              $async$goto = 8;
              return A._asyncAwait(t2[_i].accept$1(t1), $async$call$0);
            case 8:
              // returning from await.
            case 6:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 5;
              break;
            case 7:
              // after for
              // goto join
              $async$goto = 3;
              break;
            case 4:
              // else
              $async$goto = 9;
              return A._asyncAwait(t1._async_evaluate$_withParent$2$3$scopeWhen(A.ModifiableCssStyleRule$(styleRule.selector, styleRule.span, styleRule.originalSelector), new A._EvaluateVisitor_visitMediaRule___closure0(t1, $async$self.node), false, type$.ModifiableCssStyleRule, type$.Null), $async$call$0);
            case 9:
              // returning from await.
            case 3:
              // join
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  A._EvaluateVisitor_visitMediaRule___closure0.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, t3, _i;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;
            case 2:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 4;
                break;
              }
              $async$goto = 5;
              return A._asyncAwait(t1[_i].accept$1(t3), $async$call$0);
            case 5:
              // returning from await.
            case 3:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 2;
              break;
            case 4:
              // after for
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  A._EvaluateVisitor_visitMediaRule_closure4.prototype = {
    call$1(node) {
      var t1;
      if (!type$.CssStyleRule._is(node))
        t1 = this.mergedQueries != null && type$.CssMediaRule._is(node);
      else
        t1 = true;
      return t1;
    },
    $signature: 8
  };
  A._EvaluateVisitor__visitMediaQueries_closure0.prototype = {
    call$0() {
      var t1 = A.SpanScanner$(this.resolved, null);
      return new A.MediaQueryParser(t1, this.$this._async_evaluate$_logger).parse$0();
    },
    $signature: 103
  };
  A._EvaluateVisitor_visitStyleRule_closure6.prototype = {
    call$0() {
      var t1 = this.selectorText;
      return A.KeyframeSelectorParser$(t1.get$value(t1), this.$this._async_evaluate$_logger).parse$0();
    },
    $signature: 46
  };
  A._EvaluateVisitor_visitStyleRule_closure7.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, t3, _i;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;
            case 2:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 4;
                break;
              }
              $async$goto = 5;
              return A._asyncAwait(t1[_i].accept$1(t3), $async$call$0);
            case 5:
              // returning from await.
            case 3:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 2;
              break;
            case 4:
              // after for
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  A._EvaluateVisitor_visitStyleRule_closure8.prototype = {
    call$1(node) {
      return type$.CssStyleRule._is(node);
    },
    $signature: 8
  };
  A._EvaluateVisitor_visitStyleRule_closure9.prototype = {
    call$0() {
      var _s11_ = "_stylesheet",
        t1 = this.selectorText,
        t2 = this.$this;
      return A.SelectorList_SelectorList$parse(t1.get$value(t1), !t2._async_evaluate$_assertInModule$2(t2._async_evaluate$__stylesheet, _s11_).plainCss, !t2._async_evaluate$_assertInModule$2(t2._async_evaluate$__stylesheet, _s11_).plainCss, t2._async_evaluate$_logger);
    },
    $signature: 44
  };
  A._EvaluateVisitor_visitStyleRule_closure10.prototype = {
    call$0() {
      var t1 = this._box_0.parsedSelector,
        t2 = this.$this,
        t3 = t2._async_evaluate$_styleRuleIgnoringAtRoot;
      t3 = t3 == null ? null : t3.originalSelector;
      return t1.resolveParentSelectors$2$implicitParent(t3, !t2._async_evaluate$_atRootExcludingStyleRule);
    },
    $signature: 44
  };
  A._EvaluateVisitor_visitStyleRule_closure11.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              $async$goto = 2;
              return A._asyncAwait(t1._async_evaluate$_withStyleRule$1$2($async$self.rule, new A._EvaluateVisitor_visitStyleRule__closure0(t1, $async$self.node), type$.Null), $async$call$0);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  A._EvaluateVisitor_visitStyleRule__closure0.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, t3, _i;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;
            case 2:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 4;
                break;
              }
              $async$goto = 5;
              return A._asyncAwait(t1[_i].accept$1(t3), $async$call$0);
            case 5:
              // returning from await.
            case 3:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 2;
              break;
            case 4:
              // after for
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  A._EvaluateVisitor_visitStyleRule_closure12.prototype = {
    call$1(node) {
      return type$.CssStyleRule._is(node);
    },
    $signature: 8
  };
  A._EvaluateVisitor_visitSupportsRule_closure1.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t2, t3, _i, t1, styleRule;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              styleRule = t1._async_evaluate$_atRootExcludingStyleRule ? null : t1._async_evaluate$_styleRuleIgnoringAtRoot;
              $async$goto = styleRule == null ? 2 : 4;
              break;
            case 2:
              // then
              t2 = $async$self.node.children, t3 = t2.length, _i = 0;
            case 5:
              // for condition
              if (!(_i < t3)) {
                // goto after for
                $async$goto = 7;
                break;
              }
              $async$goto = 8;
              return A._asyncAwait(t2[_i].accept$1(t1), $async$call$0);
            case 8:
              // returning from await.
            case 6:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 5;
              break;
            case 7:
              // after for
              // goto join
              $async$goto = 3;
              break;
            case 4:
              // else
              $async$goto = 9;
              return A._asyncAwait(t1._async_evaluate$_withParent$2$2(A.ModifiableCssStyleRule$(styleRule.selector, styleRule.span, styleRule.originalSelector), new A._EvaluateVisitor_visitSupportsRule__closure0(t1, $async$self.node), type$.ModifiableCssStyleRule, type$.Null), $async$call$0);
            case 9:
              // returning from await.
            case 3:
              // join
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  A._EvaluateVisitor_visitSupportsRule__closure0.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, t3, _i;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node.children, t2 = t1.length, t3 = $async$self.$this, _i = 0;
            case 2:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 4;
                break;
              }
              $async$goto = 5;
              return A._asyncAwait(t1[_i].accept$1(t3), $async$call$0);
            case 5:
              // returning from await.
            case 3:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 2;
              break;
            case 4:
              // after for
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  A._EvaluateVisitor_visitSupportsRule_closure2.prototype = {
    call$1(node) {
      return type$.CssStyleRule._is(node);
    },
    $signature: 8
  };
  A._EvaluateVisitor_visitVariableDeclaration_closure2.prototype = {
    call$0() {
      var t1 = this.override;
      this.$this._async_evaluate$_environment.setVariable$4$global(this.node.name, t1.value, t1.assignmentNode, true);
    },
    $signature: 1
  };
  A._EvaluateVisitor_visitVariableDeclaration_closure3.prototype = {
    call$0() {
      var t1 = this.node;
      return this.$this._async_evaluate$_environment.getVariable$2$namespace(t1.name, t1.namespace);
    },
    $signature: 35
  };
  A._EvaluateVisitor_visitVariableDeclaration_closure4.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = this.node;
      t1._async_evaluate$_environment.setVariable$5$global$namespace(t2.name, this.value, t1._async_evaluate$_expressionNode$1(t2.expression), t2.isGlobal, t2.namespace);
    },
    $signature: 1
  };
  A._EvaluateVisitor_visitUseRule_closure0.prototype = {
    call$1(module) {
      var t1 = this.node;
      this.$this._async_evaluate$_environment.addModule$3$namespace(module, t1, t1.namespace);
    },
    $signature: 124
  };
  A._EvaluateVisitor_visitWarnRule_closure0.prototype = {
    call$0() {
      return this.node.expression.accept$1(this.$this);
    },
    $signature: 59
  };
  A._EvaluateVisitor_visitWhileRule_closure0.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_Value),
        $async$returnValue, $async$self = this, t1, t2, t3, result;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node, t2 = t1.condition, t3 = $async$self.$this, t1 = t1.children;
            case 3:
              // for condition
              $async$goto = 5;
              return A._asyncAwait(t2.accept$1(t3), $async$call$0);
            case 5:
              // returning from await.
              if (!$async$result.get$isTruthy()) {
                // goto after for
                $async$goto = 4;
                break;
              }
              $async$goto = 6;
              return A._asyncAwait(t3._async_evaluate$_handleReturn$2(t1, new A._EvaluateVisitor_visitWhileRule__closure0(t3)), $async$call$0);
            case 6:
              // returning from await.
              result = $async$result;
              if (result != null) {
                $async$returnValue = result;
                // goto return
                $async$goto = 1;
                break;
              }
              // goto for condition
              $async$goto = 3;
              break;
            case 4:
              // after for
              $async$returnValue = null;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 68
  };
  A._EvaluateVisitor_visitWhileRule__closure0.prototype = {
    call$1(child) {
      return child.accept$1(this.$this);
    },
    $signature: 84
  };
  A._EvaluateVisitor_visitBinaryOperationExpression_closure0.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Value),
        $async$returnValue, $async$self = this, right, result, t1, t2, left, t3, $async$temp1;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node;
              t2 = $async$self.$this;
              $async$goto = 3;
              return A._asyncAwait(t1.left.accept$1(t2), $async$call$0);
            case 3:
              // returning from await.
              left = $async$result;
              t3 = t1.operator;
            case 4:
              // switch
              switch (t3) {
                case B.BinaryOperator_kjl:
                  // goto case
                  $async$goto = 6;
                  break;
                case B.BinaryOperator_or_or_1:
                  // goto case
                  $async$goto = 7;
                  break;
                case B.BinaryOperator_and_and_2:
                  // goto case
                  $async$goto = 8;
                  break;
                case B.BinaryOperator_YlX:
                  // goto case
                  $async$goto = 9;
                  break;
                case B.BinaryOperator_i5H:
                  // goto case
                  $async$goto = 10;
                  break;
                case B.BinaryOperator_AcR:
                  // goto case
                  $async$goto = 11;
                  break;
                case B.BinaryOperator_1da:
                  // goto case
                  $async$goto = 12;
                  break;
                case B.BinaryOperator_8qt:
                  // goto case
                  $async$goto = 13;
                  break;
                case B.BinaryOperator_33h:
                  // goto case
                  $async$goto = 14;
                  break;
                case B.BinaryOperator_AcR0:
                  // goto case
                  $async$goto = 15;
                  break;
                case B.BinaryOperator_iyO:
                  // goto case
                  $async$goto = 16;
                  break;
                case B.BinaryOperator_O1M:
                  // goto case
                  $async$goto = 17;
                  break;
                case B.BinaryOperator_RTB:
                  // goto case
                  $async$goto = 18;
                  break;
                case B.BinaryOperator_2ad:
                  // goto case
                  $async$goto = 19;
                  break;
                default:
                  // goto default
                  $async$goto = 20;
                  break;
              }
              break;
            case 6:
              // case
              $async$goto = 21;
              return A._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 21:
              // returning from await.
              right = $async$result;
              $async$returnValue = new A.SassString(A.serializeValue(left, false, true) + "=" + A.serializeValue(right, false, true), false);
              // goto return
              $async$goto = 1;
              break;
            case 7:
              // case
              $async$goto = left.get$isTruthy() ? 22 : 24;
              break;
            case 22:
              // then
              $async$result = left;
              // goto join
              $async$goto = 23;
              break;
            case 24:
              // else
              $async$goto = 25;
              return A._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 25:
              // returning from await.
            case 23:
              // join
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 8:
              // case
              $async$goto = left.get$isTruthy() ? 26 : 28;
              break;
            case 26:
              // then
              $async$goto = 29;
              return A._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 29:
              // returning from await.
              // goto join
              $async$goto = 27;
              break;
            case 28:
              // else
              $async$result = left;
            case 27:
              // join
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 9:
              // case
              $async$temp1 = left;
              $async$goto = 30;
              return A._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 30:
              // returning from await.
              $async$returnValue = $async$temp1.$eq(0, $async$result) ? B.SassBoolean_true : B.SassBoolean_false;
              // goto return
              $async$goto = 1;
              break;
            case 10:
              // case
              $async$temp1 = left;
              $async$goto = 31;
              return A._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 31:
              // returning from await.
              $async$returnValue = !$async$temp1.$eq(0, $async$result) ? B.SassBoolean_true : B.SassBoolean_false;
              // goto return
              $async$goto = 1;
              break;
            case 11:
              // case
              $async$temp1 = left;
              $async$goto = 32;
              return A._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 32:
              // returning from await.
              $async$returnValue = $async$temp1.greaterThan$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 12:
              // case
              $async$temp1 = left;
              $async$goto = 33;
              return A._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 33:
              // returning from await.
              $async$returnValue = $async$temp1.greaterThanOrEquals$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 13:
              // case
              $async$temp1 = left;
              $async$goto = 34;
              return A._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 34:
              // returning from await.
              $async$returnValue = $async$temp1.lessThan$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 14:
              // case
              $async$temp1 = left;
              $async$goto = 35;
              return A._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 35:
              // returning from await.
              $async$returnValue = $async$temp1.lessThanOrEquals$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 15:
              // case
              $async$temp1 = left;
              $async$goto = 36;
              return A._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 36:
              // returning from await.
              $async$returnValue = $async$temp1.plus$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 16:
              // case
              $async$temp1 = left;
              $async$goto = 37;
              return A._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 37:
              // returning from await.
              $async$returnValue = $async$temp1.minus$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 17:
              // case
              $async$temp1 = left;
              $async$goto = 38;
              return A._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 38:
              // returning from await.
              $async$returnValue = $async$temp1.times$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 18:
              // case
              $async$goto = 39;
              return A._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 39:
              // returning from await.
              right = $async$result;
              result = left.dividedBy$1(right);
              if (t1.allowsSlash && left instanceof A.SassNumber && right instanceof A.SassNumber) {
                $async$returnValue = type$.SassNumber._as(result).withSlash$2(left, right);
                // goto return
                $async$goto = 1;
                break;
              } else {
                if (left instanceof A.SassNumber && right instanceof A.SassNumber)
                  t2._async_evaluate$_warn$3$deprecation(string$.Using__o + A.S(new A._EvaluateVisitor_visitBinaryOperationExpression_closure_recommendation0().call$1(t1)) + " or calc(" + t1.toString$0(0) + string$.x29x0a_Morx20, t1.get$span(t1), true);
                $async$returnValue = result;
                // goto return
                $async$goto = 1;
                break;
              }
            case 19:
              // case
              $async$temp1 = left;
              $async$goto = 40;
              return A._asyncAwait(t1.right.accept$1(t2), $async$call$0);
            case 40:
              // returning from await.
              $async$returnValue = $async$temp1.modulo$1($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 20:
              // default
              throw A.wrapException(A.ArgumentError$("Unknown binary operator " + t3.toString$0(0) + ".", null));
            case 5:
              // after switch
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 59
  };
  A._EvaluateVisitor_visitBinaryOperationExpression_closure_recommendation0.prototype = {
    call$1(expression) {
      if (expression instanceof A.BinaryOperationExpression && expression.operator === B.BinaryOperator_RTB)
        return "math.div(" + A.S(this.call$1(expression.left)) + ", " + A.S(this.call$1(expression.right)) + ")";
      else if (expression instanceof A.ParenthesizedExpression)
        return expression.expression.toString$0(0);
      else
        return expression.toString$0(0);
    },
    $signature: 135
  };
  A._EvaluateVisitor_visitVariableExpression_closure0.prototype = {
    call$0() {
      var t1 = this.node;
      return this.$this._async_evaluate$_environment.getVariable$2$namespace(t1.name, t1.namespace);
    },
    $signature: 35
  };
  A._EvaluateVisitor_visitUnaryOperationExpression_closure0.prototype = {
    call$0() {
      var _this = this,
        t1 = _this.node.operator;
      switch (t1) {
        case B.UnaryOperator_j2w:
          return _this.operand.unaryPlus$0();
        case B.UnaryOperator_U4G:
          return _this.operand.unaryMinus$0();
        case B.UnaryOperator_zDx:
          return new A.SassString("/" + A.serializeValue(_this.operand, false, true), false);
        case B.UnaryOperator_not_not:
          return _this.operand.unaryNot$0();
        default:
          throw A.wrapException(A.StateError$("Unknown unary operator " + t1.toString$0(0) + "."));
      }
    },
    $signature: 33
  };
  A._EvaluateVisitor__visitCalculationValue_closure0.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Object),
        $async$returnValue, $async$self = this, t1, t2, t3, $async$temp1, $async$temp2, $async$temp3;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t2 = $async$self.node;
              t3 = $async$self.inMinMax;
              $async$temp1 = A;
              $async$temp2 = t1._async_evaluate$_binaryOperatorToCalculationOperator$1(t2.operator);
              $async$goto = 3;
              return A._asyncAwait(t1._async_evaluate$_visitCalculationValue$2$inMinMax(t2.left, t3), $async$call$0);
            case 3:
              // returning from await.
              $async$temp3 = $async$result;
              $async$goto = 4;
              return A._asyncAwait(t1._async_evaluate$_visitCalculationValue$2$inMinMax(t2.right, t3), $async$call$0);
            case 4:
              // returning from await.
              $async$returnValue = $async$temp1.SassCalculation_operateInternal($async$temp2, $async$temp3, $async$result, t3, !t1._async_evaluate$_inSupportsDeclaration);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 152
  };
  A._EvaluateVisitor_visitListExpression_closure0.prototype = {
    call$1(expression) {
      return expression.accept$1(this.$this);
    },
    $signature: 511
  };
  A._EvaluateVisitor_visitFunctionExpression_closure1.prototype = {
    call$0() {
      var t1 = this.node;
      return this.$this._async_evaluate$_getFunction$2$namespace(A.stringReplaceAllUnchecked(t1.originalName, "_", "-"), t1.namespace);
    },
    $signature: 129
  };
  A._EvaluateVisitor_visitFunctionExpression_closure2.prototype = {
    call$0() {
      var t1 = this.node;
      return this.$this._async_evaluate$_runFunctionCallable$3(t1.$arguments, this._box_0.$function, t1);
    },
    $signature: 59
  };
  A._EvaluateVisitor_visitInterpolatedFunctionExpression_closure0.prototype = {
    call$0() {
      var t1 = this.node;
      return this.$this._async_evaluate$_runFunctionCallable$3(t1.$arguments, this.$function, t1);
    },
    $signature: 59
  };
  A._EvaluateVisitor__runUserDefinedCallable_closure0.prototype = {
    call$0() {
      var _this = this,
        t1 = _this.$this,
        t2 = _this.callable,
        t3 = _this.V;
      return t1._async_evaluate$_withEnvironment$1$2(t2.environment.closure$0(), new A._EvaluateVisitor__runUserDefinedCallable__closure0(t1, _this.evaluated, t2, _this.nodeWithSpan, _this.run, t3), t3);
    },
    $signature() {
      return this.V._eval$1("Future<0>()");
    }
  };
  A._EvaluateVisitor__runUserDefinedCallable__closure0.prototype = {
    call$0() {
      var _this = this,
        t1 = _this.$this,
        t2 = _this.V;
      return t1._async_evaluate$_environment.scope$1$1(new A._EvaluateVisitor__runUserDefinedCallable___closure0(t1, _this.evaluated, _this.callable, _this.nodeWithSpan, _this.run, t2), t2);
    },
    $signature() {
      return this.V._eval$1("Future<0>()");
    }
  };
  A._EvaluateVisitor__runUserDefinedCallable___closure0.prototype = {
    call$0() {
      return this.$call$body$_EvaluateVisitor__runUserDefinedCallable___closure(this.V);
    },
    $call$body$_EvaluateVisitor__runUserDefinedCallable___closure($async$type) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter($async$type),
        $async$returnValue, $async$self = this, declaredArguments, t7, minLength, t8, i, argument, t9, value, t10, t11, restArgument, rest, argumentList, result, t1, t2, t3, t4, t5, t6, $async$temp1;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t2 = $async$self.evaluated;
              t3 = t2.positional;
              t4 = t2.named;
              t5 = $async$self.callable.declaration.$arguments;
              t6 = $async$self.nodeWithSpan;
              t1._async_evaluate$_verifyArguments$4(t3.length, t4, t5, t6);
              declaredArguments = t5.$arguments;
              t7 = declaredArguments.length;
              minLength = Math.min(t3.length, t7);
              for (t8 = t2.positionalNodes, i = 0; i < minLength; ++i)
                t1._async_evaluate$_environment.setLocalVariable$3(declaredArguments[i].name, t3[i], t8[i]);
              i = t3.length, t8 = t2.namedNodes;
            case 3:
              // for condition
              if (!(i < t7)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              argument = declaredArguments[i];
              t9 = argument.name;
              value = t4.remove$1(0, t9);
              $async$goto = value == null ? 6 : 7;
              break;
            case 6:
              // then
              t10 = argument.defaultValue;
              $async$temp1 = t1;
              $async$goto = 8;
              return A._asyncAwait(t10.accept$1(t1), $async$call$0);
            case 8:
              // returning from await.
              value = $async$temp1._async_evaluate$_withoutSlash$2($async$result, t1._async_evaluate$_expressionNode$1(t10));
            case 7:
              // join
              t10 = t1._async_evaluate$_environment;
              t11 = t8.$index(0, t9);
              if (t11 == null) {
                t11 = argument.defaultValue;
                t11.toString;
                t11 = t1._async_evaluate$_expressionNode$1(t11);
              }
              t10.setLocalVariable$3(t9, value, t11);
            case 4:
              // for update
              ++i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              restArgument = t5.restArgument;
              if (restArgument != null) {
                rest = t3.length > t7 ? B.JSArray_methods.sublist$1(t3, t7) : B.List_empty5;
                t2 = t2.separator;
                argumentList = A.SassArgumentList$(rest, t4, t2 === B.ListSeparator_undecided_null ? B.ListSeparator_kWM : t2);
                t1._async_evaluate$_environment.setLocalVariable$3(restArgument, argumentList, t6);
              } else
                argumentList = null;
              $async$goto = 9;
              return A._asyncAwait($async$self.run.call$0(), $async$call$0);
            case 9:
              // returning from await.
              result = $async$result;
              if (argumentList == null) {
                $async$returnValue = result;
                // goto return
                $async$goto = 1;
                break;
              }
              t2 = t4.__js_helper$_length;
              if (t2 === 0) {
                $async$returnValue = result;
                // goto return
                $async$goto = 1;
                break;
              }
              if (argumentList._wereKeywordsAccessed) {
                $async$returnValue = result;
                // goto return
                $async$goto = 1;
                break;
              }
              t3 = A._instanceType(t4)._eval$1("LinkedHashMapKeyIterable<1>");
              throw A.wrapException(A.MultiSpanSassRuntimeException$("No " + A.pluralize("argument", t2, null) + " named " + A.toSentence(A.MappedIterable_MappedIterable(new A.LinkedHashMapKeyIterable(t4, t3), new A._EvaluateVisitor__runUserDefinedCallable____closure0(), t3._eval$1("Iterable.E"), type$.Object), "or") + ".", t6.get$span(t6), "invocation", A.LinkedHashMap_LinkedHashMap$_literal([t5.get$spanWithName(), "declaration"], type$.FileSpan, type$.String), t1._async_evaluate$_stackTrace$1(t6.get$span(t6))));
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature() {
      return this.V._eval$1("Future<0>()");
    }
  };
  A._EvaluateVisitor__runUserDefinedCallable____closure0.prototype = {
    call$1($name) {
      return "$" + $name;
    },
    $signature: 5
  };
  A._EvaluateVisitor__runFunctionCallable_closure0.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Value),
        $async$returnValue, $async$self = this, t1, t2, t3, t4, _i, $returnValue;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.callable.declaration, t2 = t1.children, t3 = t2.length, t4 = $async$self.$this, _i = 0;
            case 3:
              // for condition
              if (!(_i < t3)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $async$goto = 6;
              return A._asyncAwait(t2[_i].accept$1(t4), $async$call$0);
            case 6:
              // returning from await.
              $returnValue = $async$result;
              if ($returnValue instanceof A.Value) {
                $async$returnValue = $returnValue;
                // goto return
                $async$goto = 1;
                break;
              }
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              throw A.wrapException(t4._async_evaluate$_exception$2("Function finished without @return.", t1.span));
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 59
  };
  A._EvaluateVisitor__runBuiltInCallable_closure1.prototype = {
    call$0() {
      return this.overload.verify$2(this.evaluated.positional.length, this.namedSet);
    },
    $signature: 0
  };
  A._EvaluateVisitor__runBuiltInCallable_closure2.prototype = {
    call$1($name) {
      return "$" + $name;
    },
    $signature: 5
  };
  A._EvaluateVisitor__evaluateArguments_closure3.prototype = {
    call$1(value) {
      return value;
    },
    $signature: 36
  };
  A._EvaluateVisitor__evaluateArguments_closure4.prototype = {
    call$1(value) {
      return this.$this._async_evaluate$_withoutSlash$2(value, this.restNodeForSpan);
    },
    $signature: 36
  };
  A._EvaluateVisitor__evaluateArguments_closure5.prototype = {
    call$2(key, value) {
      var _this = this,
        t1 = _this.restNodeForSpan;
      _this.named.$indexSet(0, key, _this.$this._async_evaluate$_withoutSlash$2(value, t1));
      _this.namedNodes.$indexSet(0, key, t1);
    },
    $signature: 95
  };
  A._EvaluateVisitor__evaluateArguments_closure6.prototype = {
    call$1(value) {
      return value;
    },
    $signature: 36
  };
  A._EvaluateVisitor__evaluateMacroArguments_closure3.prototype = {
    call$1(value) {
      var t1 = this.restArgs;
      return new A.ValueExpression(value, t1.get$span(t1));
    },
    $signature: 51
  };
  A._EvaluateVisitor__evaluateMacroArguments_closure4.prototype = {
    call$1(value) {
      var t1 = this.restArgs;
      return new A.ValueExpression(this.$this._async_evaluate$_withoutSlash$2(value, this.restNodeForSpan), t1.get$span(t1));
    },
    $signature: 51
  };
  A._EvaluateVisitor__evaluateMacroArguments_closure5.prototype = {
    call$2(key, value) {
      var _this = this,
        t1 = _this.restArgs;
      _this.named.$indexSet(0, key, new A.ValueExpression(_this.$this._async_evaluate$_withoutSlash$2(value, _this.restNodeForSpan), t1.get$span(t1)));
    },
    $signature: 95
  };
  A._EvaluateVisitor__evaluateMacroArguments_closure6.prototype = {
    call$1(value) {
      var t1 = this.keywordRestArgs;
      return new A.ValueExpression(this.$this._async_evaluate$_withoutSlash$2(value, this.keywordRestNodeForSpan), t1.get$span(t1));
    },
    $signature: 51
  };
  A._EvaluateVisitor__addRestMap_closure0.prototype = {
    call$2(key, value) {
      var t2, _this = this,
        t1 = _this.$this;
      if (key instanceof A.SassString)
        _this.values.$indexSet(0, key._string$_text, _this.convert.call$1(t1._async_evaluate$_withoutSlash$2(value, _this.expressionNode)));
      else {
        t2 = _this.nodeWithSpan;
        throw A.wrapException(t1._async_evaluate$_exception$2(string$.Variab_ + key.toString$0(0) + " is not a string in " + _this.map.toString$0(0) + ".", t2.get$span(t2)));
      }
    },
    $signature: 52
  };
  A._EvaluateVisitor__verifyArguments_closure0.prototype = {
    call$0() {
      return this.$arguments.verify$2(this.positional, new A.MapKeySet(this.named, type$.MapKeySet_String));
    },
    $signature: 0
  };
  A._EvaluateVisitor_visitStringExpression_closure0.prototype = {
    call$1(value) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.String),
        $async$returnValue, $async$self = this, t1, result;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (typeof value == "string") {
                $async$returnValue = value;
                // goto return
                $async$goto = 1;
                break;
              }
              type$.Expression._as(value);
              t1 = $async$self.$this;
              $async$goto = 3;
              return A._asyncAwait(value.accept$1(t1), $async$call$1);
            case 3:
              // returning from await.
              result = $async$result;
              $async$returnValue = result instanceof A.SassString ? result._string$_text : t1._async_evaluate$_serialize$3$quote(result, value, false);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 92
  };
  A._EvaluateVisitor_visitCssAtRule_closure1.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, t3, t4;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node.children, t1 = new A.ListIterator(t1, t1.get$length(t1)), t2 = $async$self.$this, t3 = A._instanceType(t1)._precomputed1;
            case 2:
              // for condition
              if (!t1.moveNext$0()) {
                // goto after for
                $async$goto = 3;
                break;
              }
              t4 = t1.__internal$_current;
              $async$goto = 4;
              return A._asyncAwait((t4 == null ? t3._as(t4) : t4).accept$1(t2), $async$call$0);
            case 4:
              // returning from await.
              // goto for condition
              $async$goto = 2;
              break;
            case 3:
              // after for
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  A._EvaluateVisitor_visitCssAtRule_closure2.prototype = {
    call$1(node) {
      return type$.CssStyleRule._is(node);
    },
    $signature: 8
  };
  A._EvaluateVisitor_visitCssKeyframeBlock_closure1.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, t3, t4;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node.children, t1 = new A.ListIterator(t1, t1.get$length(t1)), t2 = $async$self.$this, t3 = A._instanceType(t1)._precomputed1;
            case 2:
              // for condition
              if (!t1.moveNext$0()) {
                // goto after for
                $async$goto = 3;
                break;
              }
              t4 = t1.__internal$_current;
              $async$goto = 4;
              return A._asyncAwait((t4 == null ? t3._as(t4) : t4).accept$1(t2), $async$call$0);
            case 4:
              // returning from await.
              // goto for condition
              $async$goto = 2;
              break;
            case 3:
              // after for
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  A._EvaluateVisitor_visitCssKeyframeBlock_closure2.prototype = {
    call$1(node) {
      return type$.CssStyleRule._is(node);
    },
    $signature: 8
  };
  A._EvaluateVisitor_visitCssMediaRule_closure2.prototype = {
    call$1(mediaQueries) {
      return this.$this._async_evaluate$_mergeMediaQueries$2(mediaQueries, this.node.queries);
    },
    $signature: 83
  };
  A._EvaluateVisitor_visitCssMediaRule_closure3.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              t2 = $async$self.mergedQueries;
              if (t2 == null)
                t2 = $async$self.node.queries;
              $async$goto = 2;
              return A._asyncAwait(t1._async_evaluate$_withMediaQueries$1$2(t2, new A._EvaluateVisitor_visitCssMediaRule__closure0(t1, $async$self.node), type$.Null), $async$call$0);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  A._EvaluateVisitor_visitCssMediaRule__closure0.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t2, t3, t4, t1, styleRule;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              styleRule = t1._async_evaluate$_atRootExcludingStyleRule ? null : t1._async_evaluate$_styleRuleIgnoringAtRoot;
              $async$goto = styleRule == null ? 2 : 4;
              break;
            case 2:
              // then
              t2 = $async$self.node.children, t2 = new A.ListIterator(t2, t2.get$length(t2)), t3 = A._instanceType(t2)._precomputed1;
            case 5:
              // for condition
              if (!t2.moveNext$0()) {
                // goto after for
                $async$goto = 6;
                break;
              }
              t4 = t2.__internal$_current;
              $async$goto = 7;
              return A._asyncAwait((t4 == null ? t3._as(t4) : t4).accept$1(t1), $async$call$0);
            case 7:
              // returning from await.
              // goto for condition
              $async$goto = 5;
              break;
            case 6:
              // after for
              // goto join
              $async$goto = 3;
              break;
            case 4:
              // else
              $async$goto = 8;
              return A._asyncAwait(t1._async_evaluate$_withParent$2$3$scopeWhen(A.ModifiableCssStyleRule$(styleRule.selector, styleRule.span, styleRule.originalSelector), new A._EvaluateVisitor_visitCssMediaRule___closure0(t1, $async$self.node), false, type$.ModifiableCssStyleRule, type$.Null), $async$call$0);
            case 8:
              // returning from await.
            case 3:
              // join
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  A._EvaluateVisitor_visitCssMediaRule___closure0.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, t3, t4;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node.children, t1 = new A.ListIterator(t1, t1.get$length(t1)), t2 = $async$self.$this, t3 = A._instanceType(t1)._precomputed1;
            case 2:
              // for condition
              if (!t1.moveNext$0()) {
                // goto after for
                $async$goto = 3;
                break;
              }
              t4 = t1.__internal$_current;
              $async$goto = 4;
              return A._asyncAwait((t4 == null ? t3._as(t4) : t4).accept$1(t2), $async$call$0);
            case 4:
              // returning from await.
              // goto for condition
              $async$goto = 2;
              break;
            case 3:
              // after for
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  A._EvaluateVisitor_visitCssMediaRule_closure4.prototype = {
    call$1(node) {
      var t1;
      if (!type$.CssStyleRule._is(node))
        t1 = this.mergedQueries != null && type$.CssMediaRule._is(node);
      else
        t1 = true;
      return t1;
    },
    $signature: 8
  };
  A._EvaluateVisitor_visitCssStyleRule_closure1.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              $async$goto = 2;
              return A._asyncAwait(t1._async_evaluate$_withStyleRule$1$2($async$self.rule, new A._EvaluateVisitor_visitCssStyleRule__closure0(t1, $async$self.node), type$.Null), $async$call$0);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  A._EvaluateVisitor_visitCssStyleRule__closure0.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, t3, t4;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node.children, t1 = new A.ListIterator(t1, t1.get$length(t1)), t2 = $async$self.$this, t3 = A._instanceType(t1)._precomputed1;
            case 2:
              // for condition
              if (!t1.moveNext$0()) {
                // goto after for
                $async$goto = 3;
                break;
              }
              t4 = t1.__internal$_current;
              $async$goto = 4;
              return A._asyncAwait((t4 == null ? t3._as(t4) : t4).accept$1(t2), $async$call$0);
            case 4:
              // returning from await.
              // goto for condition
              $async$goto = 2;
              break;
            case 3:
              // after for
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  A._EvaluateVisitor_visitCssStyleRule_closure2.prototype = {
    call$1(node) {
      return type$.CssStyleRule._is(node);
    },
    $signature: 8
  };
  A._EvaluateVisitor_visitCssSupportsRule_closure1.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t2, t3, t4, t1, styleRule;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              styleRule = t1._async_evaluate$_atRootExcludingStyleRule ? null : t1._async_evaluate$_styleRuleIgnoringAtRoot;
              $async$goto = styleRule == null ? 2 : 4;
              break;
            case 2:
              // then
              t2 = $async$self.node.children, t2 = new A.ListIterator(t2, t2.get$length(t2)), t3 = A._instanceType(t2)._precomputed1;
            case 5:
              // for condition
              if (!t2.moveNext$0()) {
                // goto after for
                $async$goto = 6;
                break;
              }
              t4 = t2.__internal$_current;
              $async$goto = 7;
              return A._asyncAwait((t4 == null ? t3._as(t4) : t4).accept$1(t1), $async$call$0);
            case 7:
              // returning from await.
              // goto for condition
              $async$goto = 5;
              break;
            case 6:
              // after for
              // goto join
              $async$goto = 3;
              break;
            case 4:
              // else
              $async$goto = 8;
              return A._asyncAwait(t1._async_evaluate$_withParent$2$2(A.ModifiableCssStyleRule$(styleRule.selector, styleRule.span, styleRule.originalSelector), new A._EvaluateVisitor_visitCssSupportsRule__closure0(t1, $async$self.node), type$.ModifiableCssStyleRule, type$.Null), $async$call$0);
            case 8:
              // returning from await.
            case 3:
              // join
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  A._EvaluateVisitor_visitCssSupportsRule__closure0.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, t2, t3, t4;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.node.children, t1 = new A.ListIterator(t1, t1.get$length(t1)), t2 = $async$self.$this, t3 = A._instanceType(t1)._precomputed1;
            case 2:
              // for condition
              if (!t1.moveNext$0()) {
                // goto after for
                $async$goto = 3;
                break;
              }
              t4 = t1.__internal$_current;
              $async$goto = 4;
              return A._asyncAwait((t4 == null ? t3._as(t4) : t4).accept$1(t2), $async$call$0);
            case 4:
              // returning from await.
              // goto for condition
              $async$goto = 2;
              break;
            case 3:
              // after for
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 2
  };
  A._EvaluateVisitor_visitCssSupportsRule_closure2.prototype = {
    call$1(node) {
      return type$.CssStyleRule._is(node);
    },
    $signature: 8
  };
  A._EvaluateVisitor__performInterpolation_closure0.prototype = {
    call$1(value) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.String),
        $async$returnValue, $async$self = this, t1, result, t2, t3;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if (typeof value == "string") {
                $async$returnValue = value;
                // goto return
                $async$goto = 1;
                break;
              }
              type$.Expression._as(value);
              t1 = $async$self.$this;
              $async$goto = 3;
              return A._asyncAwait(value.accept$1(t1), $async$call$1);
            case 3:
              // returning from await.
              result = $async$result;
              if ($async$self.warnForColor && result instanceof A.SassColor && $.$get$namesByColor().containsKey$1(result)) {
                t2 = A.Interpolation$(A._setArrayType([""], type$.JSArray_Object), $async$self.interpolation.span);
                t3 = $.$get$namesByColor();
                t1._async_evaluate$_warn$2(string$.You_pr + A.S(t3.$index(0, result)) + string$.x20in_in + result.toString$0(0) + string$.x2c_whicw + A.S(t3.$index(0, result)) + string$.x22x29__If + new A.BinaryOperationExpression(B.BinaryOperator_AcR0, new A.StringExpression(t2, true), value, false).toString$0(0) + "'.", value.get$span(value));
              }
              $async$returnValue = t1._async_evaluate$_serialize$3$quote(result, value, false);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 92
  };
  A._EvaluateVisitor__serialize_closure0.prototype = {
    call$0() {
      return A.serializeValue(this.value, false, this.quote);
    },
    $signature: 29
  };
  A._EvaluateVisitor__expressionNode_closure0.prototype = {
    call$0() {
      var t1 = this.expression;
      return this.$this._async_evaluate$_environment.getVariableNode$2$namespace(t1.name, t1.namespace);
    },
    $signature: 150
  };
  A._EvaluateVisitor__withoutSlash_recommendation0.prototype = {
    call$1(number) {
      var asSlash = number.asSlash;
      if (asSlash != null)
        return "math.div(" + A.S(this.call$1(asSlash.item1)) + ", " + A.S(this.call$1(asSlash.item2)) + ")";
      else
        return A.serializeValue(number, true, true);
    },
    $signature: 148
  };
  A._EvaluateVisitor__stackFrame_closure0.prototype = {
    call$1(url) {
      var t1 = this.$this._async_evaluate$_importCache;
      t1 = t1 == null ? null : t1.humanize$1(url);
      return t1 == null ? url : t1;
    },
    $signature: 90
  };
  A._EvaluateVisitor__stackTrace_closure0.prototype = {
    call$1(tuple) {
      return this.$this._async_evaluate$_stackFrame$2(tuple.item1, J.get$span$z(tuple.item2));
    },
    $signature: 182
  };
  A._ImportedCssVisitor0.prototype = {
    visitCssAtRule$1(node) {
      var t1 = node.isChildless ? null : new A._ImportedCssVisitor_visitCssAtRule_closure0();
      this._async_evaluate$_visitor._async_evaluate$_addChild$2$through(node, t1);
    },
    visitCssComment$1(node) {
      return this._async_evaluate$_visitor._async_evaluate$_addChild$1(node);
    },
    visitCssDeclaration$1(node) {
    },
    visitCssImport$1(node) {
      var t2,
        _s13_ = "_endOfImports",
        t1 = this._async_evaluate$_visitor;
      if (t1._async_evaluate$_assertInModule$2(t1._async_evaluate$__parent, "__parent") !== t1._async_evaluate$_assertInModule$2(t1._async_evaluate$__root, "_root"))
        t1._async_evaluate$_addChild$1(node);
      else if (t1._async_evaluate$_assertInModule$2(t1._async_evaluate$__endOfImports, _s13_) === J.get$length$asx(t1._async_evaluate$_assertInModule$2(t1._async_evaluate$__root, "_root").children._collection$_source)) {
        t1._async_evaluate$_addChild$1(node);
        t1._async_evaluate$__endOfImports = t1._async_evaluate$_assertInModule$2(t1._async_evaluate$__endOfImports, _s13_) + 1;
      } else {
        t2 = t1._async_evaluate$_outOfOrderImports;
        (t2 == null ? t1._async_evaluate$_outOfOrderImports = A._setArrayType([], type$.JSArray_ModifiableCssImport) : t2).push(node);
      }
    },
    visitCssKeyframeBlock$1(node) {
    },
    visitCssMediaRule$1(node) {
      var t1 = this._async_evaluate$_visitor,
        mediaQueries = t1._async_evaluate$_mediaQueries;
      t1._async_evaluate$_addChild$2$through(node, new A._ImportedCssVisitor_visitCssMediaRule_closure0(mediaQueries == null || t1._async_evaluate$_mergeMediaQueries$2(mediaQueries, node.queries) != null));
    },
    visitCssStyleRule$1(node) {
      return this._async_evaluate$_visitor._async_evaluate$_addChild$2$through(node, new A._ImportedCssVisitor_visitCssStyleRule_closure0());
    },
    visitCssStylesheet$1(node) {
      var t1, t2, t3;
      for (t1 = node.children, t1 = new A.ListIterator(t1, t1.get$length(t1)), t2 = A._instanceType(t1)._precomputed1; t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        (t3 == null ? t2._as(t3) : t3).accept$1(this);
      }
    },
    visitCssSupportsRule$1(node) {
      return this._async_evaluate$_visitor._async_evaluate$_addChild$2$through(node, new A._ImportedCssVisitor_visitCssSupportsRule_closure0());
    }
  };
  A._ImportedCssVisitor_visitCssAtRule_closure0.prototype = {
    call$1(node) {
      return type$.CssStyleRule._is(node);
    },
    $signature: 8
  };
  A._ImportedCssVisitor_visitCssMediaRule_closure0.prototype = {
    call$1(node) {
      var t1;
      if (!type$.CssStyleRule._is(node))
        t1 = this.hasBeenMerged && type$.CssMediaRule._is(node);
      else
        t1 = true;
      return t1;
    },
    $signature: 8
  };
  A._ImportedCssVisitor_visitCssStyleRule_closure0.prototype = {
    call$1(node) {
      return type$.CssStyleRule._is(node);
    },
    $signature: 8
  };
  A._ImportedCssVisitor_visitCssSupportsRule_closure0.prototype = {
    call$1(node) {
      return type$.CssStyleRule._is(node);
    },
    $signature: 8
  };
  A.EvaluateResult.prototype = {};
  A._EvaluationContext0.prototype = {
    get$currentCallableSpan() {
      var callableNode = this._async_evaluate$_visitor._async_evaluate$_callableNode;
      if (callableNode != null)
        return callableNode.get$span(callableNode);
      throw A.wrapException(A.StateError$(string$.No_Sasc));
    },
    warn$2$deprecation(_, message, deprecation) {
      var t1 = this._async_evaluate$_visitor,
        t2 = t1._async_evaluate$_importSpan;
      if (t2 == null) {
        t2 = t1._async_evaluate$_callableNode;
        t2 = t2 == null ? null : t2.get$span(t2);
      }
      t1._async_evaluate$_warn$3$deprecation(message, t2 == null ? this._async_evaluate$_defaultWarnNodeWithSpan.span : t2, deprecation);
    },
    $isEvaluationContext: 1
  };
  A._ArgumentResults0.prototype = {};
  A._LoadedStylesheet0.prototype = {};
  A._CloneCssVisitor.prototype = {
    visitCssAtRule$1(node) {
      var t1 = node.isChildless,
        rule = A.ModifiableCssAtRule$(node.name, node.span, t1, node.value);
      return t1 ? rule : this._visitChildren$2(rule, node);
    },
    visitCssComment$1(node) {
      return new A.ModifiableCssComment(node.text, node.span);
    },
    visitCssDeclaration$1(node) {
      return A.ModifiableCssDeclaration$(node.name, node.value, node.span, node.parsedAsCustomProperty, node.valueSpanForMap);
    },
    visitCssImport$1(node) {
      return new A.ModifiableCssImport(node.url, node.modifiers, node.span);
    },
    visitCssKeyframeBlock$1(node) {
      return this._visitChildren$2(A.ModifiableCssKeyframeBlock$(node.selector, node.span), node);
    },
    visitCssMediaRule$1(node) {
      return this._visitChildren$2(A.ModifiableCssMediaRule$(node.queries, node.span), node);
    },
    visitCssStyleRule$1(node) {
      var newSelector = this._oldToNewSelectors.$index(0, node.selector);
      if (newSelector == null)
        throw A.wrapException(A.StateError$(string$.The_Ex));
      return this._visitChildren$2(A.ModifiableCssStyleRule$(newSelector, node.span, node.originalSelector), node);
    },
    visitCssStylesheet$1(node) {
      return this._visitChildren$2(A.ModifiableCssStylesheet$(node.get$span(node)), node);
    },
    visitCssSupportsRule$1(node) {
      return this._visitChildren$2(A.ModifiableCssSupportsRule$(node.condition, node.span), node);
    },
    _visitChildren$1$2(newParent, oldParent) {
      var t1, t2, newChild;
      for (t1 = J.get$iterator$ax(oldParent.get$children(oldParent)); t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        newChild = t2.accept$1(this);
        newChild.isGroupEnd = t2.get$isGroupEnd();
        newParent.addChild$1(newChild);
      }
      return newParent;
    },
    _visitChildren$2(newParent, oldParent) {
      return this._visitChildren$1$2(newParent, oldParent, type$.ModifiableCssParentNode);
    }
  };
  A.Evaluator.prototype = {};
  A._EvaluateVisitor.prototype = {
    _EvaluateVisitor$6$functions$importCache$logger$nodeImporter$quietDeps$sourceMap(functions, importCache, logger, nodeImporter, quietDeps, sourceMap) {
      var t2, metaModule, t3, _i, module, $function, t4, _this = this,
        _s20_ = "$name, $module: null",
        _s9_ = "sass:meta",
        t1 = type$.JSArray_BuiltInCallable,
        metaFunctions = A._setArrayType([A.BuiltInCallable$function("global-variable-exists", _s20_, new A._EvaluateVisitor_closure(_this), _s9_), A.BuiltInCallable$function("variable-exists", "$name", new A._EvaluateVisitor_closure0(_this), _s9_), A.BuiltInCallable$function("function-exists", _s20_, new A._EvaluateVisitor_closure1(_this), _s9_), A.BuiltInCallable$function("mixin-exists", _s20_, new A._EvaluateVisitor_closure2(_this), _s9_), A.BuiltInCallable$function("content-exists", "", new A._EvaluateVisitor_closure3(_this), _s9_), A.BuiltInCallable$function("module-variables", "$module", new A._EvaluateVisitor_closure4(_this), _s9_), A.BuiltInCallable$function("module-functions", "$module", new A._EvaluateVisitor_closure5(_this), _s9_), A.BuiltInCallable$function("get-function", "$name, $css: false, $module: null", new A._EvaluateVisitor_closure6(_this), _s9_), A.BuiltInCallable$function("call", "$function, $args...", new A._EvaluateVisitor_closure7(_this), _s9_)], t1),
        metaMixins = A._setArrayType([A.BuiltInCallable$mixin("load-css", "$url, $with: null", new A._EvaluateVisitor_closure8(_this), _s9_)], t1);
      t1 = type$.BuiltInCallable;
      t2 = A.List_List$of($.$get$global(), true, t1);
      B.JSArray_methods.addAll$1(t2, $.$get$local());
      B.JSArray_methods.addAll$1(t2, metaFunctions);
      metaModule = A.BuiltInModule$("meta", t2, metaMixins, null, t1);
      for (t1 = A.List_List$of($.$get$coreModules(), true, type$.BuiltInModule_BuiltInCallable), t1.push(metaModule), t2 = t1.length, t3 = _this._builtInModules, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        module = t1[_i];
        t3.$indexSet(0, module.url, module);
      }
      t1 = A._setArrayType([], type$.JSArray_Callable);
      B.JSArray_methods.addAll$1(t1, $.$get$globalFunctions());
      B.JSArray_methods.addAll$1(t1, metaFunctions);
      for (t2 = t1.length, t3 = _this._builtInFunctions, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        $function = t1[_i];
        t4 = J.get$name$x($function);
        t3.$indexSet(0, A.stringReplaceAllUnchecked(t4, "_", "-"), $function);
      }
    },
    run$2(_, importer, node) {
      var t1 = type$.nullable_Object;
      return A.runZoned(new A._EvaluateVisitor_run_closure(this, node, importer), A.LinkedHashMap_LinkedHashMap$_literal([B.Symbol__evaluationContext, new A._EvaluationContext(this, node)], t1, t1), type$.EvaluateResult);
    },
    runExpression$2(importer, expression) {
      var t1 = type$.nullable_Object;
      return A.runZoned(new A._EvaluateVisitor_runExpression_closure(this, importer, expression), A.LinkedHashMap_LinkedHashMap$_literal([B.Symbol__evaluationContext, new A._EvaluationContext(this, expression)], t1, t1), type$.Value);
    },
    runStatement$2(importer, statement) {
      var t1 = type$.nullable_Object;
      return A.runZoned(new A._EvaluateVisitor_runStatement_closure(this, importer, statement), A.LinkedHashMap_LinkedHashMap$_literal([B.Symbol__evaluationContext, new A._EvaluationContext(this, statement)], t1, t1), type$.void);
    },
    _assertInModule$1$2(value, $name) {
      if (value != null)
        return value;
      throw A.wrapException(A.StateError$("Can't access " + $name + " outside of a module."));
    },
    _assertInModule$2(value, $name) {
      return this._assertInModule$1$2(value, $name, type$.dynamic);
    },
    _withFakeStylesheet$1$3(importer, nodeWithSpan, callback) {
      var t1, _this = this,
        oldImporter = _this._importer;
      _this._importer = importer;
      _this.__stylesheet = A.Stylesheet$(B.List_empty10, nodeWithSpan.get$span(nodeWithSpan));
      try {
        t1 = callback.call$0();
        return t1;
      } finally {
        _this._importer = oldImporter;
        _this.__stylesheet = null;
      }
    },
    _withFakeStylesheet$3(importer, nodeWithSpan, callback) {
      return this._withFakeStylesheet$1$3(importer, nodeWithSpan, callback, type$.dynamic);
    },
    _loadModule$7$baseUrl$configuration$namesInErrors(url, stackFrame, nodeWithSpan, callback, baseUrl, configuration, namesInErrors) {
      var t1, t2, _this = this,
        builtInModule = _this._builtInModules.$index(0, url);
      if (builtInModule != null) {
        if (configuration instanceof A.ExplicitConfiguration) {
          t1 = namesInErrors ? "Built-in module " + url.toString$0(0) + " can't be configured." : "Built-in modules can't be configured.";
          t2 = configuration.nodeWithSpan;
          throw A.wrapException(_this._evaluate$_exception$2(t1, t2.get$span(t2)));
        }
        _this._addExceptionSpan$2(nodeWithSpan, new A._EvaluateVisitor__loadModule_closure(callback, builtInModule));
        return;
      }
      _this._withStackFrame$3(stackFrame, nodeWithSpan, new A._EvaluateVisitor__loadModule_closure0(_this, url, nodeWithSpan, baseUrl, namesInErrors, configuration, callback));
    },
    _loadModule$5$configuration(url, stackFrame, nodeWithSpan, callback, configuration) {
      return this._loadModule$7$baseUrl$configuration$namesInErrors(url, stackFrame, nodeWithSpan, callback, null, configuration, false);
    },
    _loadModule$4(url, stackFrame, nodeWithSpan, callback) {
      return this._loadModule$7$baseUrl$configuration$namesInErrors(url, stackFrame, nodeWithSpan, callback, null, null, false);
    },
    _execute$5$configuration$namesInErrors$nodeWithSpan(importer, stylesheet, configuration, namesInErrors, nodeWithSpan) {
      var currentConfiguration, message, t2, existingSpan, configurationSpan, environment, css, extensionStore, module, _this = this,
        url = stylesheet.span.file.url,
        t1 = _this._modules,
        alreadyLoaded = t1.$index(0, url);
      if (alreadyLoaded != null) {
        t1 = configuration == null;
        currentConfiguration = t1 ? _this._configuration : configuration;
        if (currentConfiguration instanceof A.ExplicitConfiguration) {
          message = namesInErrors ? $.$get$context().prettyUri$1(url) + string$.x20was_a : string$.This_mw;
          t2 = _this._moduleNodes.$index(0, url);
          existingSpan = t2 == null ? null : J.get$span$z(t2);
          if (t1) {
            t1 = currentConfiguration.nodeWithSpan;
            configurationSpan = t1.get$span(t1);
          } else
            configurationSpan = null;
          t1 = A.LinkedHashMap_LinkedHashMap$_empty(type$.FileSpan, type$.String);
          if (existingSpan != null)
            t1.$indexSet(0, existingSpan, "original load");
          if (configurationSpan != null)
            t1.$indexSet(0, configurationSpan, "configuration");
          throw A.wrapException(t1.get$isEmpty(t1) ? _this._evaluate$_exception$1(message) : _this._multiSpanException$3(message, "new load", t1));
        }
        return alreadyLoaded;
      }
      environment = A.Environment$();
      css = A._Cell$();
      extensionStore = A.ExtensionStore$();
      _this._withEnvironment$2(environment, new A._EvaluateVisitor__execute_closure(_this, importer, stylesheet, extensionStore, configuration, css));
      module = environment.toModule$2(css._readLocal$0(), extensionStore);
      if (url != null) {
        t1.$indexSet(0, url, module);
        if (nodeWithSpan != null)
          _this._moduleNodes.$indexSet(0, url, nodeWithSpan);
      }
      return module;
    },
    _execute$2(importer, stylesheet) {
      return this._execute$5$configuration$namesInErrors$nodeWithSpan(importer, stylesheet, null, false, null);
    },
    _addOutOfOrderImports$0() {
      var t1, t2, _this = this, _s5_ = "_root",
        _s13_ = "_endOfImports",
        outOfOrderImports = _this._outOfOrderImports;
      if (outOfOrderImports == null)
        return _this._assertInModule$2(_this.__root, _s5_).children;
      t1 = _this._assertInModule$2(_this.__root, _s5_).children;
      t1 = A.List_List$of(A.SubListIterable$(t1, 0, A.checkNotNullable(_this._assertInModule$2(_this.__endOfImports, _s13_), "count", type$.int), t1.$ti._eval$1("ListMixin.E")), true, type$.ModifiableCssNode);
      B.JSArray_methods.addAll$1(t1, outOfOrderImports);
      t2 = _this._assertInModule$2(_this.__root, _s5_).children;
      B.JSArray_methods.addAll$1(t1, A.SubListIterable$(t2, _this._assertInModule$2(_this.__endOfImports, _s13_), null, t2.$ti._eval$1("ListMixin.E")));
      return t1;
    },
    _combineCss$2$clone(root, clone) {
      var selectors, unsatisfiedExtension, sortedModules, t1, imports, css, t2, t3, statements, index, _this = this;
      if (!B.JSArray_methods.any$1(root.get$upstream(), new A._EvaluateVisitor__combineCss_closure())) {
        selectors = root.get$extensionStore().get$simpleSelectors();
        unsatisfiedExtension = A.firstOrNull(root.get$extensionStore().extensionsWhereTarget$1(new A._EvaluateVisitor__combineCss_closure0(selectors)));
        if (unsatisfiedExtension != null)
          _this._throwForUnsatisfiedExtension$1(unsatisfiedExtension);
        return root.get$css(root);
      }
      sortedModules = _this._topologicalModules$1(root);
      if (clone) {
        t1 = sortedModules.$ti._eval$1("MappedListIterable<ListMixin.E,Module<Callable>>");
        sortedModules = A.List_List$of(new A.MappedListIterable(sortedModules, new A._EvaluateVisitor__combineCss_closure1(), t1), true, t1._eval$1("ListIterable.E"));
      }
      _this._extendModules$1(sortedModules);
      t1 = type$.JSArray_CssNode;
      imports = A._setArrayType([], t1);
      css = A._setArrayType([], t1);
      for (t1 = J.get$reversed$ax(sortedModules), t1 = new A.ListIterator(t1, t1.get$length(t1)), t2 = A._instanceType(t1)._precomputed1; t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        if (t3 == null)
          t3 = t2._as(t3);
        t3 = t3.get$css(t3);
        statements = t3.get$children(t3);
        index = _this._indexAfterImports$1(statements);
        t3 = J.getInterceptor$ax(statements);
        B.JSArray_methods.addAll$1(imports, t3.getRange$2(statements, 0, index));
        B.JSArray_methods.addAll$1(css, t3.getRange$2(statements, index, t3.get$length(statements)));
      }
      t1 = B.JSArray_methods.$add(imports, css);
      t2 = root.get$css(root);
      return new A.CssStylesheet(new A.UnmodifiableListView(t1, type$.UnmodifiableListView_CssNode), t2.get$span(t2));
    },
    _combineCss$1(root) {
      return this._combineCss$2$clone(root, false);
    },
    _extendModules$1(sortedModules) {
      var t1, t2, originalSelectors, $self, t3, t4, _i, upstream, url,
        downstreamExtensionStores = A.LinkedHashMap_LinkedHashMap$_empty(type$.Uri, type$.List_ExtensionStore),
        unsatisfiedExtensions = new A._LinkedIdentityHashSet(type$._LinkedIdentityHashSet_Extension);
      for (t1 = J.get$iterator$ax(sortedModules); t1.moveNext$0();) {
        t2 = t1.get$current(t1);
        originalSelectors = t2.get$extensionStore().get$simpleSelectors().toSet$0(0);
        unsatisfiedExtensions.addAll$1(0, t2.get$extensionStore().extensionsWhereTarget$1(new A._EvaluateVisitor__extendModules_closure(originalSelectors)));
        $self = downstreamExtensionStores.$index(0, t2.get$url(t2));
        t3 = t2.get$extensionStore().get$addExtensions();
        if ($self != null)
          t3.call$1($self);
        t3 = t2.get$extensionStore();
        if (t3.get$isEmpty(t3))
          continue;
        for (t3 = t2.get$upstream(), t4 = t3.length, _i = 0; _i < t3.length; t3.length === t4 || (0, A.throwConcurrentModificationError)(t3), ++_i) {
          upstream = t3[_i];
          url = upstream.get$url(upstream);
          if (url == null)
            continue;
          J.add$1$ax(downstreamExtensionStores.putIfAbsent$2(url, new A._EvaluateVisitor__extendModules_closure0()), t2.get$extensionStore());
        }
        unsatisfiedExtensions.removeAll$1(t2.get$extensionStore().extensionsWhereTarget$1(originalSelectors.get$contains(originalSelectors)));
      }
      if (unsatisfiedExtensions._collection$_length !== 0)
        this._throwForUnsatisfiedExtension$1(unsatisfiedExtensions.get$first(unsatisfiedExtensions));
    },
    _throwForUnsatisfiedExtension$1(extension) {
      throw A.wrapException(A.SassException$(string$.The_ta + extension.target.toString$0(0) + ' !optional" to avoid this error.', extension.span));
    },
    _topologicalModules$1(root) {
      var t1 = type$.Module_Callable,
        sorted = A.QueueList$(null, t1);
      new A._EvaluateVisitor__topologicalModules_visitModule(A.LinkedHashSet_LinkedHashSet$_empty(t1), sorted).call$1(root);
      return sorted;
    },
    _indexAfterImports$1(statements) {
      var t1, t2, t3, lastImport, i, statement;
      for (t1 = J.getInterceptor$asx(statements), t2 = type$.CssComment, t3 = type$.CssImport, lastImport = -1, i = 0; i < t1.get$length(statements); ++i) {
        statement = t1.$index(statements, i);
        if (t3._is(statement))
          lastImport = i;
        else if (!t2._is(statement))
          break;
      }
      return lastImport + 1;
    },
    visitStylesheet$1(node) {
      var t1, t2, _i;
      for (t1 = node.children, t2 = t1.length, _i = 0; _i < t2; ++_i)
        t1[_i].accept$1(this);
      return null;
    },
    visitAtRootRule$1(node) {
      var t1, grandparent, root, innerCopy, t2, outerCopy, t3, copy, _this = this,
        _s8_ = "__parent",
        unparsedQuery = node.query,
        query = unparsedQuery != null ? _this._adjustParseError$2(unparsedQuery, new A._EvaluateVisitor_visitAtRootRule_closure(_this, _this._performInterpolation$2$warnForColor(unparsedQuery, true))) : B.AtRootQuery_UsS,
        $parent = _this._assertInModule$2(_this.__parent, _s8_),
        included = A._setArrayType([], type$.JSArray_ModifiableCssParentNode);
      for (t1 = type$.CssStylesheet; !t1._is($parent); $parent = grandparent) {
        if (!query.excludes$1($parent))
          included.push($parent);
        grandparent = $parent._parent;
        if (grandparent == null)
          throw A.wrapException(A.StateError$(string$.CssNod));
      }
      root = _this._trimIncluded$1(included);
      if (root === _this._assertInModule$2(_this.__parent, _s8_)) {
        _this._environment.scope$1$2$when(new A._EvaluateVisitor_visitAtRootRule_closure0(_this, node), node.hasDeclarations, type$.Null);
        return null;
      }
      if (included.length !== 0) {
        innerCopy = B.JSArray_methods.get$first(included).copyWithoutChildren$0();
        for (t1 = A.SubListIterable$(included, 1, null, type$.ModifiableCssParentNode), t1 = new A.ListIterator(t1, t1.get$length(t1)), t2 = A._instanceType(t1)._precomputed1, outerCopy = innerCopy; t1.moveNext$0(); outerCopy = copy) {
          t3 = t1.__internal$_current;
          copy = (t3 == null ? t2._as(t3) : t3).copyWithoutChildren$0();
          copy.addChild$1(outerCopy);
        }
        root.addChild$1(outerCopy);
      } else
        innerCopy = root;
      _this._scopeForAtRoot$4(node, innerCopy, query, included).call$1(new A._EvaluateVisitor_visitAtRootRule_closure1(_this, node));
      return null;
    },
    _trimIncluded$1(nodes) {
      var $parent, t1, innermostContiguous, i, t2, grandparent, root, _this = this, _null = null, _s5_ = "_root",
        _s22_ = " to be an ancestor of ";
      if (nodes.length === 0)
        return _this._assertInModule$2(_this.__root, _s5_);
      $parent = _this._assertInModule$2(_this.__parent, "__parent");
      for (t1 = nodes.length, innermostContiguous = _null, i = 0; i < t1; ++i, $parent = grandparent) {
        for (; t2 = nodes[i], $parent !== t2; innermostContiguous = _null, $parent = grandparent) {
          grandparent = $parent._parent;
          if (grandparent == null)
            throw A.wrapException(A.ArgumentError$("Expected " + t2.toString$0(0) + _s22_ + _this.toString$0(0) + ".", _null));
        }
        if (innermostContiguous == null)
          innermostContiguous = i;
        grandparent = $parent._parent;
        if (grandparent == null)
          throw A.wrapException(A.ArgumentError$("Expected " + t2.toString$0(0) + _s22_ + _this.toString$0(0) + ".", _null));
      }
      if ($parent !== _this._assertInModule$2(_this.__root, _s5_))
        return _this._assertInModule$2(_this.__root, _s5_);
      innermostContiguous.toString;
      root = nodes[innermostContiguous];
      B.JSArray_methods.removeRange$2(nodes, innermostContiguous, nodes.length);
      return root;
    },
    _scopeForAtRoot$4(node, newParent, query, included) {
      var _this = this,
        scope = new A._EvaluateVisitor__scopeForAtRoot_closure(_this, newParent, node),
        t1 = query._all || query._at_root_query$_rule;
      if (t1 !== query.include)
        scope = new A._EvaluateVisitor__scopeForAtRoot_closure0(_this, scope);
      if (_this._mediaQueries != null && query.excludesName$1("media"))
        scope = new A._EvaluateVisitor__scopeForAtRoot_closure1(_this, scope);
      if (_this._inKeyframes && query.excludesName$1("keyframes"))
        scope = new A._EvaluateVisitor__scopeForAtRoot_closure2(_this, scope);
      return _this._inUnknownAtRule && !B.JSArray_methods.any$1(included, new A._EvaluateVisitor__scopeForAtRoot_closure3()) ? new A._EvaluateVisitor__scopeForAtRoot_closure4(_this, scope) : scope;
    },
    visitContentBlock$1(node) {
      return A.throwExpression(A.UnsupportedError$(string$.Evalua));
    },
    visitContentRule$1(node) {
      var $content = this._environment._content;
      if ($content == null)
        return null;
      this._runUserDefinedCallable$1$4(node.$arguments, $content, node, new A._EvaluateVisitor_visitContentRule_closure(this, $content), type$.Null);
      return null;
    },
    visitDebugRule$1(node) {
      var value = node.expression.accept$1(this),
        t1 = value instanceof A.SassString ? value._string$_text : A.serializeValue(value, true, true);
      this._evaluate$_logger.debug$2(0, t1, node.span);
      return null;
    },
    visitDeclaration$1(node) {
      var t1, $name, t2, cssValue, t3, t4, children, oldDeclarationName, _this = this, _null = null;
      if ((_this._atRootExcludingStyleRule ? _null : _this._styleRuleIgnoringAtRoot) == null && !_this._inUnknownAtRule && !_this._inKeyframes)
        throw A.wrapException(_this._evaluate$_exception$2(string$.Declarm, node.span));
      t1 = node.name;
      $name = _this._interpolationToValue$2$warnForColor(t1, true);
      t2 = _this._declarationName;
      if (t2 != null)
        $name = new A.CssValue(t2 + "-" + A.S($name.value), $name.span, type$.CssValue_String);
      t2 = node.value;
      cssValue = A.NullableExtension_andThen(t2, new A._EvaluateVisitor_visitDeclaration_closure(_this));
      t3 = cssValue != null;
      if (t3)
        t4 = !cssValue.get$value(cssValue).get$isBlank() || cssValue.get$value(cssValue).get$asList().length === 0;
      else
        t4 = false;
      if (t4) {
        t3 = _this._assertInModule$2(_this.__parent, "__parent");
        t1 = B.JSString_methods.startsWith$1(t1.get$initialPlain(), "--");
        if (_this._sourceMap) {
          t2 = A.NullableExtension_andThen(t2, _this.get$_expressionNode());
          t2 = t2 == null ? _null : J.get$span$z(t2);
        } else
          t2 = _null;
        t3.addChild$1(A.ModifiableCssDeclaration$($name, cssValue, node.span, t1, t2));
      } else if (J.startsWith$1$s($name.value, "--") && t3)
        throw A.wrapException(_this._evaluate$_exception$2("Custom property values may not be empty.", cssValue.get$span(cssValue)));
      children = node.children;
      if (children != null) {
        oldDeclarationName = _this._declarationName;
        _this._declarationName = $name.value;
        _this._environment.scope$1$2$when(new A._EvaluateVisitor_visitDeclaration_closure0(_this, children), node.hasDeclarations, type$.Null);
        _this._declarationName = oldDeclarationName;
      }
      return _null;
    },
    visitEachRule$1(node) {
      var _this = this,
        t1 = node.list,
        list = t1.accept$1(_this),
        nodeWithSpan = _this._expressionNode$1(t1),
        setVariables = node.variables.length === 1 ? new A._EvaluateVisitor_visitEachRule_closure(_this, node, nodeWithSpan) : new A._EvaluateVisitor_visitEachRule_closure0(_this, node, nodeWithSpan);
      return _this._environment.scope$1$2$semiGlobal(new A._EvaluateVisitor_visitEachRule_closure1(_this, list, setVariables, node), true, type$.nullable_Value);
    },
    _setMultipleVariables$3(variables, value, nodeWithSpan) {
      var i,
        list = value.get$asList(),
        t1 = variables.length,
        minLength = Math.min(t1, list.length);
      for (i = 0; i < minLength; ++i)
        this._environment.setLocalVariable$3(variables[i], this._withoutSlash$2(list[i], nodeWithSpan), nodeWithSpan);
      for (i = minLength; i < t1; ++i)
        this._environment.setLocalVariable$3(variables[i], B.C__SassNull, nodeWithSpan);
    },
    visitErrorRule$1(node) {
      throw A.wrapException(this._evaluate$_exception$2(J.toString$0$(node.expression.accept$1(this)), node.span));
    },
    visitExtendRule$1(node) {
      var targetText, t1, t2, t3, _i, t4, _this = this,
        styleRule = _this._atRootExcludingStyleRule ? null : _this._styleRuleIgnoringAtRoot;
      if (styleRule == null || _this._declarationName != null)
        throw A.wrapException(_this._evaluate$_exception$2(string$.x40exten, node.span));
      targetText = _this._interpolationToValue$2$warnForColor(node.selector, true);
      for (t1 = _this._adjustParseError$2(targetText, new A._EvaluateVisitor_visitExtendRule_closure(_this, targetText)).components, t2 = t1.length, t3 = type$.CompoundSelector, _i = 0; _i < t2; ++_i) {
        t4 = t1[_i].components;
        if (t4.length !== 1 || !(B.JSArray_methods.get$first(t4) instanceof A.CompoundSelector))
          throw A.wrapException(A.SassFormatException$("complex selectors may not be extended.", targetText.span));
        t4 = t3._as(B.JSArray_methods.get$first(t4)).components;
        if (t4.length !== 1)
          throw A.wrapException(A.SassFormatException$(string$.compou + B.JSArray_methods.join$1(t4, ", ") + string$.x60_inst, targetText.span));
        _this._assertInModule$2(_this.__extensionStore, "_extensionStore").addExtension$4(styleRule.selector, B.JSArray_methods.get$first(t4), node, _this._mediaQueries);
      }
      return null;
    },
    visitAtRule$1(node) {
      var $name, value, children, wasInKeyframes, wasInUnknownAtRule, _this = this;
      if (_this._declarationName != null)
        throw A.wrapException(_this._evaluate$_exception$2(string$.At_rul, node.span));
      $name = _this._interpolationToValue$1(node.name);
      value = A.NullableExtension_andThen(node.value, new A._EvaluateVisitor_visitAtRule_closure(_this));
      children = node.children;
      if (children == null) {
        _this._assertInModule$2(_this.__parent, "__parent").addChild$1(A.ModifiableCssAtRule$($name, node.span, true, value));
        return null;
      }
      wasInKeyframes = _this._inKeyframes;
      wasInUnknownAtRule = _this._inUnknownAtRule;
      if (A.unvendor($name.value) === "keyframes")
        _this._inKeyframes = true;
      else
        _this._inUnknownAtRule = true;
      _this._withParent$2$4$scopeWhen$through(A.ModifiableCssAtRule$($name, node.span, false, value), new A._EvaluateVisitor_visitAtRule_closure0(_this, children), node.hasDeclarations, new A._EvaluateVisitor_visitAtRule_closure1(), type$.ModifiableCssAtRule, type$.Null);
      _this._inUnknownAtRule = wasInUnknownAtRule;
      _this._inKeyframes = wasInKeyframes;
      return null;
    },
    visitForRule$1(node) {
      var _this = this, t1 = {},
        t2 = node.from,
        fromNumber = _this._addExceptionSpan$2(t2, new A._EvaluateVisitor_visitForRule_closure(_this, node)),
        t3 = node.to,
        toNumber = _this._addExceptionSpan$2(t3, new A._EvaluateVisitor_visitForRule_closure0(_this, node)),
        from = _this._addExceptionSpan$2(t2, new A._EvaluateVisitor_visitForRule_closure1(fromNumber)),
        to = t1.to = _this._addExceptionSpan$2(t3, new A._EvaluateVisitor_visitForRule_closure2(toNumber, fromNumber)),
        direction = from > to ? -1 : 1;
      if (from === (!node.isExclusive ? t1.to = to + direction : to))
        return null;
      return _this._environment.scope$1$2$semiGlobal(new A._EvaluateVisitor_visitForRule_closure3(t1, _this, node, from, direction, fromNumber), true, type$.nullable_Value);
    },
    visitForwardRule$1(node) {
      var newConfiguration, t4, _i, variable, $name, _this = this,
        _s8_ = "@forward",
        oldConfiguration = _this._configuration,
        adjustedConfiguration = oldConfiguration.throughForward$1(node),
        t1 = node.configuration,
        t2 = t1.length,
        t3 = node.url;
      if (t2 !== 0) {
        newConfiguration = _this._addForwardConfiguration$2(adjustedConfiguration, node);
        _this._loadModule$5$configuration(t3, _s8_, node, new A._EvaluateVisitor_visitForwardRule_closure(_this, node), newConfiguration);
        t3 = type$.String;
        t4 = A.LinkedHashSet_LinkedHashSet$_empty(t3);
        for (_i = 0; _i < t2; ++_i) {
          variable = t1[_i];
          if (!variable.isGuarded)
            t4.add$1(0, variable.name);
        }
        _this._removeUsedConfiguration$3$except(adjustedConfiguration, newConfiguration, t4);
        t3 = A.LinkedHashSet_LinkedHashSet$_empty(t3);
        for (_i = 0; _i < t2; ++_i)
          t3.add$1(0, t1[_i].name);
        for (t1 = newConfiguration._values, t2 = J.toList$0$ax(t1.get$keys(t1)), t4 = t2.length, _i = 0; _i < t2.length; t2.length === t4 || (0, A.throwConcurrentModificationError)(t2), ++_i) {
          $name = t2[_i];
          if (!t3.contains$1(0, $name))
            if (!t1.get$isEmpty(t1))
              t1.remove$1(0, $name);
        }
        _this._assertConfigurationIsEmpty$1(newConfiguration);
      } else {
        _this._configuration = adjustedConfiguration;
        _this._loadModule$4(t3, _s8_, node, new A._EvaluateVisitor_visitForwardRule_closure0(_this, node));
        _this._configuration = oldConfiguration;
      }
      return null;
    },
    _addForwardConfiguration$2(configuration, node) {
      var t2, t3, _i, variable, t4, t5, variableNodeWithSpan,
        t1 = configuration._values,
        newValues = A.LinkedHashMap_LinkedHashMap$of(new A.UnmodifiableMapView(t1, type$.UnmodifiableMapView_String_ConfiguredValue), type$.String, type$.ConfiguredValue);
      for (t2 = node.configuration, t3 = t2.length, _i = 0; _i < t3; ++_i) {
        variable = t2[_i];
        if (variable.isGuarded) {
          t4 = variable.name;
          t5 = t1.get$isEmpty(t1) ? null : t1.remove$1(0, t4);
          if (t5 != null && !t5.value.$eq(0, B.C__SassNull)) {
            newValues.$indexSet(0, t4, t5);
            continue;
          }
        }
        t4 = variable.expression;
        variableNodeWithSpan = this._expressionNode$1(t4);
        newValues.$indexSet(0, variable.name, new A.ConfiguredValue(this._withoutSlash$2(t4.accept$1(this), variableNodeWithSpan), variable.span, variableNodeWithSpan));
      }
      if (configuration instanceof A.ExplicitConfiguration || t1.get$isEmpty(t1))
        return new A.ExplicitConfiguration(node, newValues);
      else
        return new A.Configuration(newValues);
    },
    _removeUsedConfiguration$3$except(upstream, downstream, except) {
      var t1, t2, t3, t4, _i, $name;
      for (t1 = upstream._values, t2 = J.toList$0$ax(t1.get$keys(t1)), t3 = t2.length, t4 = downstream._values, _i = 0; _i < t2.length; t2.length === t3 || (0, A.throwConcurrentModificationError)(t2), ++_i) {
        $name = t2[_i];
        if (except.contains$1(0, $name))
          continue;
        if (!t4.containsKey$1($name))
          if (!t1.get$isEmpty(t1))
            t1.remove$1(0, $name);
      }
    },
    _assertConfigurationIsEmpty$2$nameInError(configuration, nameInError) {
      var t1, entry;
      if (!(configuration instanceof A.ExplicitConfiguration))
        return;
      t1 = configuration._values;
      if (t1.get$isEmpty(t1))
        return;
      t1 = t1.get$entries(t1);
      entry = t1.get$first(t1);
      t1 = nameInError ? "$" + A.S(entry.key) + string$.x20was_n : string$.This_v;
      throw A.wrapException(this._evaluate$_exception$2(t1, entry.value.configurationSpan));
    },
    _assertConfigurationIsEmpty$1(configuration) {
      return this._assertConfigurationIsEmpty$2$nameInError(configuration, false);
    },
    visitFunctionRule$1(node) {
      var t1 = this._environment,
        t2 = t1.closure$0(),
        t3 = this._inDependency,
        t4 = t1._functions,
        index = t4.length - 1,
        t5 = node.name;
      t1._functionIndices.$indexSet(0, t5, index);
      J.$indexSet$ax(t4[index], t5, new A.UserDefinedCallable(node, t2, t3, type$.UserDefinedCallable_Environment));
      return null;
    },
    visitIfRule$1(node) {
      var t1, t2, _i, clauseToCheck, _box_0 = {};
      _box_0.clause = node.lastClause;
      for (t1 = node.clauses, t2 = t1.length, _i = 0; _i < t2; ++_i) {
        clauseToCheck = t1[_i];
        if (clauseToCheck.expression.accept$1(this).get$isTruthy()) {
          _box_0.clause = clauseToCheck;
          break;
        }
      }
      t1 = _box_0.clause;
      if (t1 == null)
        return null;
      return this._environment.scope$1$3$semiGlobal$when(new A._EvaluateVisitor_visitIfRule_closure(_box_0, this), true, t1.hasDeclarations, type$.nullable_Value);
    },
    visitImportRule$1(node) {
      var t1, t2, t3, t4, t5, t6, _i, $import, t7, result, $self, t8, _this = this,
        _s8_ = "__parent",
        _s5_ = "_root",
        _s13_ = "_endOfImports";
      for (t1 = node.imports, t2 = t1.length, t3 = type$.CssValue_String, t4 = _this.get$_interpolationToValue(), t5 = type$.StaticImport, t6 = type$.JSArray_ModifiableCssImport, _i = 0; _i < t2; ++_i) {
        $import = t1[_i];
        if ($import instanceof A.DynamicImport)
          _this._visitDynamicImport$1($import);
        else {
          t5._as($import);
          t7 = $import.url;
          result = _this._performInterpolation$2$warnForColor(t7, false);
          $self = $import.modifiers;
          t8 = $self == null ? null : t4.call$1($self);
          node = new A.ModifiableCssImport(new A.CssValue(result, t7.span, t3), t8, $import.span);
          if (_this._assertInModule$2(_this.__parent, _s8_) !== _this._assertInModule$2(_this.__root, _s5_))
            _this._assertInModule$2(_this.__parent, _s8_).addChild$1(node);
          else if (_this._assertInModule$2(_this.__endOfImports, _s13_) === J.get$length$asx(_this._assertInModule$2(_this.__root, _s5_).children._collection$_source)) {
            t7 = _this._assertInModule$2(_this.__root, _s5_);
            node._parent = t7;
            t7 = t7._children;
            node._indexInParent = t7.length;
            t7.push(node);
            _this.__endOfImports = _this._assertInModule$2(_this.__endOfImports, _s13_) + 1;
          } else {
            t7 = _this._outOfOrderImports;
            (t7 == null ? _this._outOfOrderImports = A._setArrayType([], t6) : t7).push(node);
          }
        }
      }
      return null;
    },
    _visitDynamicImport$1($import) {
      return this._withStackFrame$3("@import", $import, new A._EvaluateVisitor__visitDynamicImport_closure(this, $import));
    },
    _loadStylesheet$4$baseUrl$forImport(url, span, baseUrl, forImport) {
      var importCache, tuple, isDependency, stylesheet, result, error, stackTrace, error0, stackTrace0, message, t1, t2, t3, t4, exception, message0, _this = this,
        _s11_ = "_stylesheet";
      baseUrl = baseUrl;
      try {
        _this._importSpan = span;
        importCache = _this._evaluate$_importCache;
        if (importCache != null) {
          if (baseUrl == null)
            baseUrl = _this._assertInModule$2(_this.__stylesheet, _s11_).span.file.url;
          tuple = J.canonicalize$4$baseImporter$baseUrl$forImport$x(importCache, A.Uri_parse(url), _this._importer, baseUrl, forImport);
          if (tuple != null) {
            isDependency = _this._inDependency || tuple.item1 !== _this._importer;
            t1 = tuple.item1;
            t2 = tuple.item2;
            t3 = tuple.item3;
            t4 = _this._quietDeps && isDependency;
            stylesheet = importCache.importCanonical$4$originalUrl$quiet(t1, t2, t3, t4);
            if (stylesheet != null) {
              _this._loadedUrls.add$1(0, tuple.item2);
              t1 = tuple.item1;
              return new A._LoadedStylesheet(stylesheet, t1, isDependency);
            }
          }
        } else {
          t1 = baseUrl;
          result = _this._importLikeNode$3(url, t1 == null ? _this._assertInModule$2(_this.__stylesheet, _s11_).span.file.url : t1, forImport);
          if (result != null) {
            t1 = _this._loadedUrls;
            A.NullableExtension_andThen(result.stylesheet.span.file.url, t1.get$add(t1));
            return result;
          }
        }
        if (B.JSString_methods.startsWith$1(url, "package:") && true)
          throw A.wrapException(string$.x22packa);
        else
          throw A.wrapException("Can't find stylesheet to import.");
      } catch (exception) {
        t1 = A.unwrapException(exception);
        if (t1 instanceof A.SassException) {
          error = t1;
          stackTrace = A.getTraceFromException(exception);
          t1 = error;
          t2 = J.getInterceptor$z(t1);
          A.throwWithTrace(_this._evaluate$_exception$2(error._span_exception$_message, A.SourceSpanException.prototype.get$span.call(t2, t1)), stackTrace);
        } else {
          error0 = t1;
          stackTrace0 = A.getTraceFromException(exception);
          message = null;
          try {
            message = A._asString(J.get$message$x(error0));
          } catch (exception) {
            message0 = J.toString$0$(error0);
            message = message0;
          }
          A.throwWithTrace(_this._evaluate$_exception$1(message), stackTrace0);
        }
      } finally {
        _this._importSpan = null;
      }
    },
    _loadStylesheet$3$baseUrl(url, span, baseUrl) {
      return this._loadStylesheet$4$baseUrl$forImport(url, span, baseUrl, false);
    },
    _loadStylesheet$3$forImport(url, span, forImport) {
      return this._loadStylesheet$4$baseUrl$forImport(url, span, null, forImport);
    },
    _importLikeNode$3(originalUrl, previous, forImport) {
      var _this = this,
        result = _this._nodeImporter.loadRelative$3(originalUrl, previous, forImport),
        isDependency = _this._inDependency,
        contents = result.get$item1(),
        url = result.get$item2(),
        t1 = url.startsWith$1(0, "file") ? A.Syntax_forPath(url) : B.Syntax_SCSS;
      return new A._LoadedStylesheet(A.Stylesheet_Stylesheet$parse(contents, t1, _this._quietDeps && isDependency ? $.$get$Logger_quiet() : _this._evaluate$_logger, url), null, isDependency);
    },
    visitIncludeRule$1(node) {
      var nodeWithSpan, t1, _this = this,
        _s37_ = "Mixin doesn't accept a content block.",
        mixin = _this._addExceptionSpan$2(node, new A._EvaluateVisitor_visitIncludeRule_closure(_this, node));
      if (mixin == null)
        throw A.wrapException(_this._evaluate$_exception$2("Undefined mixin.", node.span));
      nodeWithSpan = new A._FakeAstNode(new A._EvaluateVisitor_visitIncludeRule_closure0(node));
      if (mixin instanceof A.BuiltInCallable) {
        if (node.content != null)
          throw A.wrapException(_this._evaluate$_exception$2(_s37_, node.span));
        _this._runBuiltInCallable$3(node.$arguments, mixin, nodeWithSpan);
      } else if (type$.UserDefinedCallable_Environment._is(mixin)) {
        t1 = node.content;
        if (t1 != null && !type$.MixinRule._as(mixin.declaration).get$hasContent())
          throw A.wrapException(A.MultiSpanSassRuntimeException$(_s37_, node.get$spanWithoutContent(), "invocation", A.LinkedHashMap_LinkedHashMap$_literal([mixin.declaration.$arguments.get$spanWithName(), "declaration"], type$.FileSpan, type$.String), _this._evaluate$_stackTrace$1(node.get$spanWithoutContent())));
        _this._runUserDefinedCallable$1$4(node.$arguments, mixin, nodeWithSpan, new A._EvaluateVisitor_visitIncludeRule_closure1(_this, A.NullableExtension_andThen(t1, new A._EvaluateVisitor_visitIncludeRule_closure2(_this)), mixin, nodeWithSpan), type$.Null);
      } else
        throw A.wrapException(A.UnsupportedError$("Unknown callable type " + mixin.toString$0(0) + "."));
      return null;
    },
    visitMixinRule$1(node) {
      var t1 = this._environment,
        t2 = t1.closure$0(),
        t3 = this._inDependency,
        t4 = t1._mixins,
        index = t4.length - 1,
        t5 = node.name;
      t1._mixinIndices.$indexSet(0, t5, index);
      J.$indexSet$ax(t4[index], t5, new A.UserDefinedCallable(node, t2, t3, type$.UserDefinedCallable_Environment));
      return null;
    },
    visitLoudComment$1(node) {
      var t1, _this = this,
        _s8_ = "__parent",
        _s13_ = "_endOfImports";
      if (_this._inFunction)
        return null;
      if (_this._assertInModule$2(_this.__parent, _s8_) === _this._assertInModule$2(_this.__root, "_root") && _this._assertInModule$2(_this.__endOfImports, _s13_) === J.get$length$asx(_this._assertInModule$2(_this.__root, "_root").children._collection$_source))
        _this.__endOfImports = _this._assertInModule$2(_this.__endOfImports, _s13_) + 1;
      t1 = node.text;
      _this._assertInModule$2(_this.__parent, _s8_).addChild$1(new A.ModifiableCssComment(_this._performInterpolation$1(t1), t1.span));
      return null;
    },
    visitMediaRule$1(node) {
      var queries, mergedQueries, t1, _this = this;
      if (_this._declarationName != null)
        throw A.wrapException(_this._evaluate$_exception$2(string$.Media_, node.span));
      queries = _this._visitMediaQueries$1(node.query);
      mergedQueries = A.NullableExtension_andThen(_this._mediaQueries, new A._EvaluateVisitor_visitMediaRule_closure(_this, queries));
      t1 = mergedQueries == null;
      if (!t1 && J.get$isEmpty$asx(mergedQueries))
        return null;
      t1 = t1 ? queries : mergedQueries;
      _this._withParent$2$4$scopeWhen$through(A.ModifiableCssMediaRule$(t1, node.span), new A._EvaluateVisitor_visitMediaRule_closure0(_this, mergedQueries, queries, node), node.hasDeclarations, new A._EvaluateVisitor_visitMediaRule_closure1(mergedQueries), type$.ModifiableCssMediaRule, type$.Null);
      return null;
    },
    _visitMediaQueries$1(interpolation) {
      return this._adjustParseError$2(interpolation, new A._EvaluateVisitor__visitMediaQueries_closure(this, this._performInterpolation$2$warnForColor(interpolation, true)));
    },
    _mergeMediaQueries$2(queries1, queries2) {
      var t1, t2, t3, t4, t5, result,
        queries = A._setArrayType([], type$.JSArray_CssMediaQuery);
      for (t1 = J.get$iterator$ax(queries1), t2 = J.getInterceptor$ax(queries2), t3 = type$.MediaQuerySuccessfulMergeResult; t1.moveNext$0();) {
        t4 = t1.get$current(t1);
        for (t5 = t2.get$iterator(queries2); t5.moveNext$0();) {
          result = t4.merge$1(t5.get$current(t5));
          if (result === B._SingletonCssMediaQueryMergeResult_empty)
            continue;
          if (result === B._SingletonCssMediaQueryMergeResult_unrepresentable)
            return null;
          queries.push(t3._as(result).query);
        }
      }
      return queries;
    },
    visitReturnRule$1(node) {
      var t1 = node.expression;
      return this._withoutSlash$2(t1.accept$1(this), t1);
    },
    visitSilentComment$1(node) {
      return null;
    },
    visitStyleRule$1(node) {
      var t2, selectorText, rule, oldAtRootExcludingStyleRule, _this = this,
        _s8_ = "__parent",
        t1 = {};
      if (_this._declarationName != null)
        throw A.wrapException(_this._evaluate$_exception$2(string$.Style_, node.span));
      t2 = node.selector;
      selectorText = _this._interpolationToValue$3$trim$warnForColor(t2, true, true);
      if (_this._inKeyframes) {
        _this._withParent$2$4$scopeWhen$through(A.ModifiableCssKeyframeBlock$(new A.CssValue(A.List_List$unmodifiable(_this._adjustParseError$2(t2, new A._EvaluateVisitor_visitStyleRule_closure(_this, selectorText)), type$.String), t2.span, type$.CssValue_List_String), node.span), new A._EvaluateVisitor_visitStyleRule_closure0(_this, node), node.hasDeclarations, new A._EvaluateVisitor_visitStyleRule_closure1(), type$.ModifiableCssKeyframeBlock, type$.Null);
        return null;
      }
      t1.parsedSelector = _this._adjustParseError$2(t2, new A._EvaluateVisitor_visitStyleRule_closure2(_this, selectorText));
      t1.parsedSelector = _this._addExceptionSpan$2(t2, new A._EvaluateVisitor_visitStyleRule_closure3(t1, _this));
      rule = A.ModifiableCssStyleRule$(_this._assertInModule$2(_this.__extensionStore, "_extensionStore").addSelector$3(t1.parsedSelector, t2.span, _this._mediaQueries), node.span, t1.parsedSelector);
      oldAtRootExcludingStyleRule = _this._atRootExcludingStyleRule;
      t1 = _this._atRootExcludingStyleRule = false;
      _this._withParent$2$4$scopeWhen$through(rule, new A._EvaluateVisitor_visitStyleRule_closure4(_this, rule, node), node.hasDeclarations, new A._EvaluateVisitor_visitStyleRule_closure5(), type$.ModifiableCssStyleRule, type$.Null);
      _this._atRootExcludingStyleRule = oldAtRootExcludingStyleRule;
      if ((oldAtRootExcludingStyleRule ? null : _this._styleRuleIgnoringAtRoot) == null) {
        t1 = _this._assertInModule$2(_this.__parent, _s8_).children;
        t1 = !t1.get$isEmpty(t1);
      }
      if (t1) {
        t1 = _this._assertInModule$2(_this.__parent, _s8_).children;
        t1.get$last(t1).isGroupEnd = true;
      }
      return null;
    },
    visitSupportsRule$1(node) {
      var t1, _this = this;
      if (_this._declarationName != null)
        throw A.wrapException(_this._evaluate$_exception$2(string$.Suppor, node.span));
      t1 = node.condition;
      _this._withParent$2$4$scopeWhen$through(A.ModifiableCssSupportsRule$(new A.CssValue(_this._visitSupportsCondition$1(t1), t1.get$span(t1), type$.CssValue_String), node.span), new A._EvaluateVisitor_visitSupportsRule_closure(_this, node), node.hasDeclarations, new A._EvaluateVisitor_visitSupportsRule_closure0(), type$.ModifiableCssSupportsRule, type$.Null);
      return null;
    },
    _visitSupportsCondition$1(condition) {
      var t1, oldInSupportsDeclaration, t2, t3, _this = this;
      if (condition instanceof A.SupportsOperation) {
        t1 = condition.operator;
        return _this._parenthesize$2(condition.left, t1) + " " + t1 + " " + _this._parenthesize$2(condition.right, t1);
      } else if (condition instanceof A.SupportsNegation)
        return "not " + _this._parenthesize$1(condition.condition);
      else if (condition instanceof A.SupportsInterpolation) {
        t1 = condition.expression;
        return _this._evaluate$_serialize$3$quote(t1.accept$1(_this), t1, false);
      } else if (condition instanceof A.SupportsDeclaration) {
        oldInSupportsDeclaration = _this._inSupportsDeclaration;
        _this._inSupportsDeclaration = true;
        t1 = condition.name;
        t1 = _this._evaluate$_serialize$3$quote(t1.accept$1(_this), t1, true);
        t2 = condition.get$isCustomProperty() ? "" : " ";
        t3 = condition.value;
        t3 = _this._evaluate$_serialize$3$quote(t3.accept$1(_this), t3, true);
        _this._inSupportsDeclaration = oldInSupportsDeclaration;
        return "(" + t1 + ":" + t2 + t3 + ")";
      } else if (condition instanceof A.SupportsFunction)
        return _this._performInterpolation$1(condition.name) + "(" + _this._performInterpolation$1(condition.$arguments) + ")";
      else if (condition instanceof A.SupportsAnything)
        return "(" + _this._performInterpolation$1(condition.contents) + ")";
      else
        throw A.wrapException(A.ArgumentError$("Unknown supports condition type " + A.getRuntimeType(condition).toString$0(0) + ".", null));
    },
    _parenthesize$2(condition, operator) {
      var t1;
      if (!(condition instanceof A.SupportsNegation))
        if (condition instanceof A.SupportsOperation)
          t1 = operator == null || operator !== condition.operator;
        else
          t1 = false;
      else
        t1 = true;
      if (t1)
        return "(" + this._visitSupportsCondition$1(condition) + ")";
      else
        return this._visitSupportsCondition$1(condition);
    },
    _parenthesize$1(condition) {
      return this._parenthesize$2(condition, null);
    },
    visitVariableDeclaration$1(node) {
      var t1, value, _this = this, _null = null;
      if (node.isGuarded) {
        if (node.namespace == null && _this._environment._variables.length === 1) {
          t1 = _this._configuration._values;
          t1 = t1.get$isEmpty(t1) ? _null : t1.remove$1(0, node.name);
     