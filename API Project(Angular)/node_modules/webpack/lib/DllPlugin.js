$2(_this._evaluate0$__root, _s5_).children._collection$_source)) {
        _this._evaluate0$_assertInModule$2(_this._evaluate0$__root, _s5_).addChild$1(modifiableNode);
        _this._evaluate0$__endOfImports = _this._evaluate0$_assertInModule$2(_this._evaluate0$__endOfImports, _s13_) + 1;
      } else {
        t1 = _this._evaluate0$_outOfOrderImports;
        (t1 == null ? _this._evaluate0$_outOfOrderImports = A._setArrayType([], type$.JSArray_ModifiableCssImport_2) : t1).push(modifiableNode);
      }
    },
    visitCssKeyframeBlock$1(node) {
      this._evaluate0$_withParent$2$4$scopeWhen$through(A.ModifiableCssKeyframeBlock$0(node.selector, node.span), new A._EvaluateVisitor_visitCssKeyframeBlock_closure3(this, node), false, new A._EvaluateVisitor_visitCssKeyframeBlock_closure4(), type$.ModifiableCssKeyframeBlock_2, type$.Null);
    },
    visitCssMediaRule$1(node) {
      var mergedQueries, t1, _this = this;
      if (_this._evaluate0$_declarationName != null)
        throw A.wrapException(_this._evaluate0$_exception$2(string$.Media_, node.span));
      mergedQueries = A.NullableExtension_andThen0(_this._evaluate0$_mediaQueries, new A._EvaluateVisitor_visitCssMediaRule_closure5(_this, node));
      t1 = mergedQueries == null;
      if (!t1 && J.get$isEmpty$asx(mergedQueries))
        return;
      t1 = t1 ? node.queries : mergedQueries;
      _this._evaluate0$_withParent$2$4$scopeWhen$through(A.ModifiableCssMediaRule$0(t1, node.span), new A._EvaluateVisitor_visitCssMediaRule_closure6(_this, mergedQueries, node), false, new A._EvaluateVisitor_visitCssMediaRule_closure7(mergedQueries), type$.ModifiableCssMediaRule_2, type$.Null);
    },
    visitCssStyleRule$1(node) {
 