(t[e]).forEach((function(r){n.push(t[e][r])}))})),n}(s()(t=s()(n=[]).call(n,Rn(k.parameters))).call(t,Rn(I.parameters)));T.forEach((function(e){var t,n,o=b[e.in];if("body"===e.in&&e.schema&&e.schema.properties&&(t=y),void 0===(t=e&&e.name&&y[e.name]))t=e&&e.name&&y[s()(n="".concat(e.in,".")).call(n,e.name)];else if(function(e,t){return P()(t).call(t,(function(t){return t.name===e}))}(e.name,T).length>1){var a;console.warn(s()(a="Parameter '".concat(e.name,"' is ambiguous because the defined spec has more than one parameter with the name: '")).call(a,e.name,"' and the passed-in parameter values did not define an 'in' value."))}if(null!==t){if(void 0!==e.default&&void 0===t&&(t=e.default),void 0===t&&e.required&&!e.allowEmptyValue)throw new Error("Required parameter ".concat(e.name," is not provided"));if(w&&e.schema&&"object"===e.schema.type&&"string"==typeof t)try{t=JSON.parse(t)}catch(e){throw new Error("Could not parse object parameter value string as JSON")}o&&o({req:E,parameter:e,value:t,operation:k,spec:r})}}));var N=me()(me()({},e),{},{operation:k});if((E=w?Tn(N,E):Nn(N,E)).cookies&&j()(E.cookies).length){var R=j()(E.