/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
/// <amd-module name="@angular/compiler-cli/src/ngtsc/diagnostics/src/error_code" />
/**
 * @publicApi
 */
export declare enum ErrorCode {
    DECORATOR_ARG_NOT_LITERAL = 1001,
    DECORATOR_ARITY_WRONG = 1002,
    DECORATOR_NOT_CALLED = 1003,
    DECORATOR_ON_ANONYMOUS_CLASS = 1004,
    DECORATOR_UNEXPECTED = 1005,
    /**
     * This error code indicates that there are incompatible decorators on a type or a class field.
     */
    DECORATOR_COLLISION = 1006,
    VALUE_HAS_WRONG_TYPE = 1010,
    VALUE_NOT_LITERAL = 1011,
    COMPONENT_MISSING_TEMPLATE = 2001,
    PIPE_MISSING_NAME = 2002,
    PARAM_MISSING_TOKEN = 2003,
    DIRECTIVE_MISSING_SELECTOR = 2004,
    /** Raised when an undecorated class is passed in as a provider to a module or a directive. */
    UNDECORATED_PROVIDER = 2005,
    /**
     * Raised when a Directive inherits its constructor from a base class without an Angular
     * decorator.
     */
    DIRECTIVE_INHERITS_UNDECORATED_CTOR = 2006,
    /**
     * Raised when an undecorated class that is using Angular features
     * has been discovered.
     */
    UNDECORATED_CLASS_USING_ANGULAR_FEATURES = 2007,
    /**
     * Raised when an component cannot resolve an external resource, such as a template or a style
     * sheet.
     */
    COMPONENT_RESOURCE_NOT_FOUND = 2008,
    /**
     * Raised when a component uses `ShadowDom` view encapsulation, but its selector
     * does not match the shadow DOM tag name requirements.
     */
    COMPONENT_INVALID_SHADOW_DOM_SELECTOR = 2009,
    /**
     * Raised when a component has `imports` but is not marked as `standalone: true`.
     */
    COMPONENT_NOT_STANDALONE = 2010,
    /**
     * Raised when a type in the `imports` of a component is a directive or pipe