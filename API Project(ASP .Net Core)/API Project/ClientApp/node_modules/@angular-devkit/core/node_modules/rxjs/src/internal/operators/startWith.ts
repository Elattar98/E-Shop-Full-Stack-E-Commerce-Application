rt function isClassProperty(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeClassProperty)
  declare export function assertClassProperty(node: ?Object, opts?: ?Object): void
  declare export function isClassAccessorProperty(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeClassAccessorProperty)
  declare export function assertClassAccessorProperty(node: ?Object, opts?: ?Object): void
  declare export function isClassPrivateProperty(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeClassPrivateProperty)
  declare export function assertClassPrivateProperty(node: ?Object, opts?: ?Object): void
  declare export function isClassPrivateMethod(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeClassPrivateMethod)
  declare export function assertClassPrivateMethod(node: ?Object, opts?: ?Object): void
  declare export function isPrivateName(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodePrivateName)
  declare export function assertPrivateName(node: ?Object, opts?: ?Object): void
  declare export function isStaticBlock(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeStaticBlock)
  declare export function assertStaticBlock(node: ?Object, opts?: ?Object): void
  declare export function isAnyTypeAnnotation(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeAnyTypeAnnotation)
  declare export function assertAnyTypeAnnotation(node: ?Object, opts?: ?Object): void
  declare export function isArrayTypeAnnotation(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeArrayTypeAnnotation)
  declare export function assertArrayTypeAnnotation(node: ?Object, opts?: ?Object): void
  declare export function isBooleanTypeAnnotation(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeBooleanTypeAnnotation)
  declare export function assertBooleanTypeAnnotation(node: ?Object, opts?: ?Object): void
  declare export function isBooleanLiteralTypeAnnotation(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeBooleanLiteralTypeAnnotation)
  declare export function assertBooleanLiteralTypeAnnotation(node: ?Object, opts?: ?Object): void
  declare export function isNullLiteralTypeAnnotation(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeNullLiteralTypeAnnotation)
  declare export function assertNullLiteralTypeAnnotation(node: ?Object, opts?: ?Object): void
  declare export function isClassImplements(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeClassImplements)
  declare export function assertClassImplements(node: ?Object, opts?: ?Object): void
  declare export function isDeclareClass(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeDeclareClass)
  declare export function assertDeclareClass(node: ?Object, opts?: ?Object): void
  declare export function isDeclareFunction(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeDeclareFunction)
  declare export function assertDeclareFunction(node: ?Object, opts?: ?Object): void
  declare export function isDeclareInterface(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeDeclareInterface)
  declare export function assertDeclareInterface(node: ?Object, opts?: ?Object): void
  declare export function isDeclareModule(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeDeclareModule)
  declare export function assertDeclareModule(node: ?Object, opts?: ?Object): void
  declare export function isDeclareModuleExports(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeDeclareModuleExports)
  declare export function assertDeclareModuleExports(node: ?Object, opts?: ?Object): void
  declare export function isDeclareTypeAlias(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeDeclareTypeAlias)
  declare export function assertDeclareTypeAlias(node: ?Object, opts?: ?Object): void
  declare export function isDeclareOpaqueType(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeDeclareOpaqueType)
  declare export function assertDeclareOpaqueType(node: ?Object, opts?: ?Object): void
  declare export function isDeclareVariable(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeDeclareVariable)
  declare export function ass