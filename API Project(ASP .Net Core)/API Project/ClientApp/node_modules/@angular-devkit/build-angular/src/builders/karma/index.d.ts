   pair = t2[_i];
        t4 = pair.item1;
        keyValue = t4.accept$1(this);
        valueValue = pair.item2.accept$1(this);
        if (map.$index(0, keyValue) != null) {
          t1 = keyNodes.$index(0, keyValue);
          oldValueSpan = t1 == null ? null : t1.get$span(t1);
          t1 = J.getInterceptor$z(t4);
          t2 = t1.get$span(t4);
          t3 = A.LinkedHashMap_LinkedHashMap$_empty(type$.FileSpan, type$.String);
          if (oldValueSpan != null)
            t3.$indexSet(0, oldValueSpan, "first key");
          throw A.wrapException(A.MultiSpanSassRuntimeException$0("Duplicate key.", t2, "second key", t3, this._evaluate0$_stackTrace$1(t1.get$span(t4))));
        }
        map.$indexSet(0, keyValue, valueValue);
        keyNodes.$indexSet(0, keyValue, t4);
      }
      return new A.SassMap0(A.ConstantMap_ConstantMap$from(map, t1, t1));
    },
    visitFunctionExpression$1(node) {
      var oldInFunction, result, _this = this, t1 = {},
        $function = _this._evaluate0$_addExceptionSpan$2(node, new A._EvaluateVisitor_visitFunctionExpression_closure3(_this, node));
      t1.$function = $function;
      if ($function == null) {
        if (node.namespace != null)