vigations(this.transitions);\n\n    this.processNavigations();\n  }\n\n  private setupNavigations(transitions: Observable<NavigationTransition>):\n      Observable<NavigationTransition> {\n    const eventsSubject = (this.events as Subject<Event>);\n    return transitions.pipe(\n               filter(t => t.id !== 0),\n\n               // Extract URL\n               map(t =>\n                       ({...t, extractedUrl: this.urlHandlingStrategy.extract(t.rawUrl)} as\n                        NavigationTransition)),\n\n               // Using switchMap so we cancel executing navigations when a new one comes in\n               switchMap(overallTransitionState => {\n                 let completed = false;\n                 let errored = false;\n                 return of(overallTransitionState)\n                     .pipe(\n                         // Store the Navigation object\n                         tap(t => {\n                           this.currentNavigation = {\n                             id: t.id,\n             