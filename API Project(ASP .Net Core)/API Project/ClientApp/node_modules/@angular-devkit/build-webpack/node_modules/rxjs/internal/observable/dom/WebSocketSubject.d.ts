e: ?Object, opts?: ?Object): void
  declare export function isTSConstructSignatureDeclaration(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeTSConstructSignatureDeclaration)
  declare export function assertTSConstructSignatureDeclaration(node: ?Object, opts?: ?Object): void
  declare export function isTSPropertySignature(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeTSPropertySignature)
  declare export function assertTSPropertySignature(node: ?Object, opts?: ?Object): void
  declare export function isTSMethodSignature(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeTSMethodSignature)
  declare export function assertTSMethodSignature(node: ?Object, opts?: ?Object): void
  declare export function isTSIndexSignature(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeTSIndexSignature)
  declare export function assertTSIndexSignature(node: ?Object, opts?: ?Object): void
  declare export function isTSAnyKeyword(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeTSAnyKeyword)
  declare export function assertTSAnyKeyword(node: ?Object, opts?: ?Object): void
  declare export function isTSBooleanKeyword(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeTSBooleanKeyword)
  declare export function assertTSBooleanKeyword(node: ?Object, opts?: ?Object): void
  declare export function isTSBigIntKeyword(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeTSBigIntKeyword)
  declare export function assertTSBigIntKeyword(node: ?Object, opts?: ?Object): void
  declare export function isTSIntrinsicKeyword(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeTSIntrinsicKeyword)
  declare export function assertTSIntrinsicKeyword(node: ?Object, opts?: ?Object): void
  declare export function isTSNeverKeyword(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeTSNeverKeyword)
  declare export function assertTSNeverKeyword(node: ?Object, opts?: ?Object): void
  declare export function isTSNullKeyword(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeTSNullKeyword)
  declare export function assertTSNullKeyword(node: ?Object, opts?: ?Object): void
  declare export function isTSNumberKeyword(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeTSNumberKeyword)
  declare export function assertTSNumberKeyword(node: ?Object, opts?: ?Object): void
  declare export function isTSObjectKeyword(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeTSObjectKeyword)
  declare export function assertTSObjectKeyword(node: ?Object, opts?: ?Object): void
  declare export function isTSStringKeyword(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeTSStringKeyword)
  declare export function assertTSStringKeyword(node: ?Object, opts?: ?Object): void
  declare export function isTSSymbolKeyword(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeTSSymbolKeyword)
  declare export function assertTSSymbolKeyword(node: ?Object, opts?: ?Object): void
  declare export function isTSUndefinedKeyword(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeTSUndefinedKeyword)
  declare export function assertTSUndefinedKeyword(node: ?Object, opts?: ?Object): void
  declare export function isTSUnknownKeyword(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeTSUnknownKeyword)
  declare export function assertTSUnknownKeyword(node: ?Object, opts?: ?Object): void
  declare export function isTSVoidKeyword(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeTSVoidKeyword)
  declare export function assertTSVoidKeyword(node: ?Object, opts?: ?Object): void
  declare export function isTSThisType(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeTSThisType)
  declare export function assertTSThisType(node: ?Object, opts?: ?Object): void
  declare export function isTSFunctionType(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeTSFunctionType)
  declare export function assertTSFunctionType(node: ?Object, opts?: ?Object): void
  declare export function isTSConstructorType(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeTSConstructorType)
  declare export function assertTSConstructorType(node: ?Object, opts?: ?Object): void
  declare export function isTSTypeReference(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeTSTypeReference)
  declare export function assertTSTypeReference(node: ?Object, opts?: ?Object): void
  declare export function isTSTypePredicate(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeTSTypePredicate)
  declare export function assertTSTypePredicate(node: ?Object, opts?: ?Object): void
  declare export function isTSTypeQuery(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeTSTypeQuery)
  declare export function assertTSTypeQuery(node: ?Object, opts?: ?Object): void
  declare export function isTSTypeLiteral(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeTSTypeLiteral)
  declare export function assertTSTypeLiteral(node: ?Object, opts?: ?Object): void
  declare export function isTSArrayType(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeTSArrayType)
  declare export function assertTSArrayType(node: ?Object, opts?: ?Object): void
  declare export function isTSTupleType(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeTSTupleType)
  declare export function assertTSTupleType(node: ?Object, opts?: ?Object): void
  declare export function isTSOptionalType(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeTSOptionalType)
  declare export function assertTSOptionalType(node: ?Object, opts?: ?Object): void
  declare export function isTSRestType(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeTSRestType)
  declare export function assertTSRestType(node: ?Object, opts?: ?Object): void
  declare export function isTSNamedTupleMember(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeTSNamedTupleMember)
  declare export function assertTSNamedTupleMember(node: ?Object, opts?: ?Object): void
  declare export function isTSUnionType(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeTSUnionType)
  declare export function assertTSUnionType(node: ?Object, opts?: ?Object): void
  declare export function isTSIntersectionType(node: ?Object, opts?: ?Object): boolean %checks (node instanceof BabelNodeTSInte