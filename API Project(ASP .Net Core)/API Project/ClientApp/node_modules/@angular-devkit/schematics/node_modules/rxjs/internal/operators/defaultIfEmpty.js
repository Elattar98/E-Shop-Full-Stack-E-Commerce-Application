, t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {
        t4 = t3.get$current(t3);
        t2.$indexSet(0, new A.SassString0(t4.key, true), t4.value);
      }
      return new A.SassMap0(A.ConstantMap_ConstantMap$from(t2, t1, t1));
    },
    $signature: 40
  };
  A._EvaluateVisitor_closure25.prototype = {
    call$1($arguments) {
      var t2, t3, t4,
        t1 = J.$index$asx($arguments, 0).assertString$1("module")._string0$_text,
        module = this.$this._evaluate0$_environment._environment0$_modules.$index(0, t1);
      if (module == null)
        throw A.wrapException('There is no module with namespace "' + t1 + '".');
      t1 = type$.Value_2;
      t2 = A.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      for (t3 = module.get$functions(module), t3 = t3.get$entries(t3), t3 = t3.get$iterator(t3); t3.moveNext$0();) {
        t4 = t3.get$current(t3);
        t2.$indexSet(0, new A.SassString0(t4.key, true), new A.SassFunction0(t4.value));
      }
      return new A.SassMap0(A.ConstantMap_ConstantMap$from(t2, t1, t1));
    },
    $signature: 40
  };
  A._EvaluateVisitor_closure26.prototype = {
    call$1($arguments) {
      var module, callable, t2,
        t1 = J.getInterceptor$asx($arguments),
        $name = t1.$index($arguments, 0).assertString$1("name"),
        css = t1.$index($arguments, 1).get$isTruthy();
      t1 = t1.$index($arguments, 2).get$realNull();
      module = t1 == null ? null : t1.assertString$1("module");
      if (css && module != null)
        throw A.wrapException(string$.x24css_a);
      if (css)
        callable = new A.PlainCssCallable0($name._string0$_text);
      else {
        t1 = this.$this;
        t2 = t1._evaluate0$_callableNode;
        t2.toString;
        callable = t1._evaluate0$_addExceptionSpan$2(t2, new A._EvaluateVisitor__closure7(t1, $name, module));
      }
      if (callable != null)
        return new A.SassFunction0(callable);
      throw A.wrapException("Function not found: " + $name.toString$0(0));
    },
    $signature: 162
  };
  A._EvaluateVisitor__closure7.prototype = {