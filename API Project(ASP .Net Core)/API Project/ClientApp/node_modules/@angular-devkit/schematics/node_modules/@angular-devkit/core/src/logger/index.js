/// <amd-module name="@angular/compiler-cli/linker/src/ast/ast_value" />
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import * as o from '@angular/compiler';
import { AstHost, Range } from './ast_host';
/**
 * Represents only those types in `T` that are object types.
 */
declare type ObjectType<T> = Extract<T, object>;
/**
 * Represents the value type of an object literal.
 */
declare type ObjectValueType<T> = T extends Record<string, infer R> ? R : never;
/**
 * Represents the value type of an array literal.
 */
declare type ArrayValueType<T> = T extends Array<infer R> ? R : never;
/**
 * Ensures that `This` has its generic type `Actual` conform to the expected generic type in
 * `Expected`, to disallow calling a method if the generic type does not conform.
 */
declare type ConformsTo<This, Actual, Expected> = Actual extends Expected ? This : never;
/**
 * Ensures that `This` is an `AstValue` whose generic type conforms to `Expected`, to disallow
 * calling a method if the value's type does not conform.
 */
declare type