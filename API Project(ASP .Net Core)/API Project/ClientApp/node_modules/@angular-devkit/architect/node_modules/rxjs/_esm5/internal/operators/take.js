/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define("@angular/core/schematics/utils/template_ast_visitor", ["require", "exports"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TemplateAstVisitor = void 0;
    /**
     * A base class that can be used to implement a Render3 Template AST visitor.
     * This class is used instead of the `NullVisitor` found within the `@angular/compiler` because
     * the `NullVisitor` requires a deep import which is no longer supported with the ESM bundled
     * packages as of v13.
     * Schematics are also currently required to be CommonJS to support execution within the Angular
     * CLI. As a result, the ESM `@angular/compiler` package must be loaded via a native dynamic import.
     * Using a dynamic import makes classes extending from classes present in `@angular/compiler`
     * complicated due to the class not being present at module evaluation time. The classes using a
     * base class found within `@angular/compiler` must be wrapped in a factory to allow the class value
     * to be accessible at runtime after the dynamic import has comple