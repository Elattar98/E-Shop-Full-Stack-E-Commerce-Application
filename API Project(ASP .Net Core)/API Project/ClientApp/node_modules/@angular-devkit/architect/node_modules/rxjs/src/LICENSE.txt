 selectors.",
          "default": "app",
          "alias": "p"
        },
        "style": {
          "description": "The file extension or preprocessor to use for style files.",
          "type": "string",
          "default": "css",
          "enum": [
            "css",
            "scss",
            "sass",
            "less"
          ]
        },
        "skipTests": {
          "description": "Do not create \"spec.ts\" test files for the application.",
          "type": "boolean",
          "default": false,
          "alias": "S"
        },
        "skipPackageJson": {
          "type": "boolean",
          "default": false,
          "description": "Do not add dependencies to the \"package.json\" file."
        },
        "minimal": {
          "description": "Create a bare-bones project without any testing frameworks. (Use for learning purposes only.)",
          "type": "boolean",
          "default": false
        },
        "skipInstall": {
          "description": "Skip installing dependency packages.",
          "type": "boolean",
          "default": false
        },
        "strict": {
          "description": "Creates an application with stricter bundle budgets settings.",
          "type": "boolean",
          "default": true
        }
      }
    },
    "SchematicsAngularClassSchema": {
      "title": "Angular Class Options Schema",
      "type": "object",
      "description": "Creates a new, generic class definition in the given or default project.",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the new class.",
          "$default": {
            "$source": "argv",
            "index": 0
          }
        },
        "path": {
          "type": "string",
          "format": "path",
          "$default": {
            "$source": "workingDirectory"
          },
          "description": "The path at which to create the class, relative to the workspace root.",
          "visible": false
        },
        "project": {
          "type": "string",
          "description": "The name of the project.",
          "$default": {
            "$source": "projectName"
          }
        },
        "skipTests": {
          "type": "boolean",
          "description": "Do not create \"spec.ts\" test files for the new class.",
          "default": false
        },
        "type": {
          "type": "string",
          "description": "Adds a developer-defined type to the filename, in the format \"name.type.ts\"."
        }
      }
    },
    "SchematicsAngularComponentSchema": {
      "title": "Angular Component Options Schema",
      "type": "object",
      "description": "Creates a new, generic component definition in the given or default project.",
      "additionalProperties": false,
      "properties": {
        "path": {
          "type": "string",
          "format": "path",
          "$default": {
            "$source": "workingDirectory"
          },
          "description": "The path at which to create the component file, relative to the current workspace. Default is a folder with the same name as the component in the project root.",
          "visible": false
        },
        "project": {
          "type": "string",
          "description": "The name of the project.",
          "$default": {
            "$source": "projectName"
          }
        },
        "name": {
          "type": "string",
          "description": "The name of the component.",
          "$default": {
            "$source": "argv",
            "index": 0
          }
        },
        "displayBlock": {
          "description": "Specifies if the style will contain `:host { display: block; }`.",
          "type": "boolean",
          "default": false,
          "alias": "b"
        },
        "inlineStyle": {
          "description": "Include styles inline in the component.ts file. Only CSS styles can be included inline. By default, an external styles file is created and referenced in the component.ts file.",
          "type": "boolean",
          "default": false,
          "alias": "s"
        },
        "inlineTemplate": {
          "description": "Include template inline in the component.ts file. By default, an external template file is created and referenced in the component.ts file.",
          "type": "boolean",
          "default": false,
          "alias": "t"
        },
        "standalone": {
          "description": "Whether the generated component is standalone.",
          "type": "boolean",
          "default": false
        },
        "viewEncapsulation": {
          "description": "The view encapsulation strategy to use in the new component.",
          "enum": [
            "Emulated",
            "None",
            "ShadowDom"
          ],
          "type": "string",
          "alias": "v"
        },
        "changeDetection": {
          "description": "The change detection strategy to use in the new component.",
          "enum": [
            "Default",
            "OnPush"
          ],
          "type": "string",
          "default": "Default",
          "alias": "c"
        },
        "prefix": {
          "type": "string",
          "description": "The prefix to apply to the generated component selector.",
          "alias": "p",
          "oneOf": [
            {
              "maxLength": 0
            },
            {
              "minLength": 1,
              "format": "html-selector"
            }
          ]
        },
        "style": {
          "description": "The file extension or preprocessor to use for style files, or 'none' to skip generating the style file.",
          "type": "string",
          "default": "css",
          "enum": [
            "css",
            "scss",
            "sass",
            "less",
            "none"
          ]
        },
        "type": {
          "type": "string",
          "description": "Adds a developer-defined type to the filename, in the format \"name.type.ts\".",
          "default": "Component"
        },
        "skipTests": {
          "type": "boolean",
          "description": "Do not create \"spec.ts\" test files for the new component.",
          "default": false
        },
        "flat": {
          "type": "boolean",
          "description": "Create the new files at the top level of the current project.",
          "default": false
        },
        "skipImport": {
          "type": "boolean",
          "description": "Do not import this component into the owning NgModule.",
          "default": false
        },
        "selector": {
          "type": "string",
          "format": "html-selector",
          "description": "The HTML selector to use for this component."
        },
        "skipSelector": {
          "type": "boolean",
          "default": false,
          "description": "Specifies if the component should have a selector or not."
        },
        "module": {
          "type": "string",
          "description": "The declaring NgModule.",
          "alias": "m"
        },
        "export": {
          "type": "boolean",
          "default": false,
          "description": "The declaring NgModule exports this component."
        }
      }
    },
    "SchematicsAngularDirectiveSchema": {
      "title": "Angular Directive Options Schema",
      "type": "object",
      "description": "Creates a new, generic directive definition in the given or default project.",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the new directive.",
          "$default": {
            "$source": "argv",
            "index": 0
          }
        },
        "path": {
          "type": "string",
          "format": "path",
          "$default": {
            "$source": "workingDirectory"
          },
          "description": "The path at which to create the interface that defines the directive, relative to the workspace root.",
          "visible": false
        },
        "project": {
          "type": "string",
          "description": "The name of the project.",
          "$default": {
            "$source": "projectName"
          }
        },
        "prefix": {
          "type": "string",
          "description": "A prefix to apply to generated selectors.",
          "alias": "p",
          "oneOf": [
            {
              "maxLength": 0
            },
            {
              "minLength": 1,
              "format": "html-selector"
            }
          ]
        },
        "skipTests": {
          "type": "boolean",
          "description": "Do not create \"spec.ts\" test files for the new class.",
          "default": false
        },
        "skipImport": {
          "type": "boolean",
          "description": "Do not import this directive into the owning NgModule.",
          "default": false
        },
        "selector": {
          "type": "string",
          "format": "html-selector",
          "description": "The HTML selector to use for this directive."
        },
        "standalone": {
          "description": "Whether the generated directive is standalone.",
          "type": "boolean",
          "default": false
        },
        "flat": {
          "type": "boolean",
          "description": "When true (the default), creates the new files at the top level of the current project.",
          "default": true
        },
        "module": {
          "type": "string",
          "description": "The declaring NgModule.",
          "alias": "m"
        },
        "export": {
          "type": "boolean",
          "default": false,
          "description": "The declaring NgModule exports this directive."
        }
      }
    },
    "SchematicsAngularEnumSchema": {
      "title": "Angular Enum Options Schema",
      "type": "object",
      "description": "Generates a new, generic enum definition for the given or default project.",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the enum.",
          "$default": {
            "$source": "argv",
            "index": 0
          }
        },
        "path": {
          "type": "string",
          "format": "path",
          "$default": {
            "$source": "workingDirectory"
          },
          "description": "The path at which to create the enum definition, relative to the current workspace.",
          "visible": false
        },
        "project": {
          "type": "string",
          "description": "The name of the project in which to create the enum. Default is the configured default project for the workspace.",
          "$default": {
            "$source": "projectName"
          }
        },
        "type": {
          "type": "string",
          "description": "Adds a developer-defined type to the filename, in the format \"name.type.ts\"."
        }
      }
    },
    "SchematicsAngularGuardSchema": {
      "tit