pe": "boolean",
                  "description": "Output source maps used for error reporting tools.",
                  "default": false
                },
                "vendor": {
                  "type": "boolean",
                  "description": "Resolve vendor packages source maps.",
                  "default": false
                }
              },
              "additionalProperties": false
            },
            {
              "type": "boolean"
            }
          ]
        },
        "deployUrl": {
          "type": "string",
          "description": "URL where files will be deployed.",
          "deprecated": true
        },
        "verbose": {
          "type": "boolean",
          "description": "Adds more details to output logging.",
          "default": false
        },
        "progress": {
          "type": "boolean",
          "description": "Log progress to the console while building.",
          "default": true
        },
        "i18nMissingTranslation": {
          "type": "string",
          "description": "How to handle missing translations for i18n.",
          "enum": [
            "warning",
            "error",
            "ignore"
          ],
          "default": "warning"
        },
        "i18nDuplicateTranslation": {
          "type": "string",
          "description": "How to handle duplicate translations for i18n.",
          "enum": [
            "warning",
            "error",
            "ignore"
          ],
          "default": "warning"
        },
        "localize": {
          "description": "Translate the bundles in one or more locales.",
          "oneOf": [
            {
              "type": "boolean",
              "description": "Translate all locales."
            },
            {
              "type": "array",
              "description": "List of locales ID's to translate.",
              "minItems": 1,
              "items": {
                "type": "string",
                "pattern": "^[a-zA-Z]{2,3}(-[a-zA-Z]{4})?(-([a-zA-Z]{2}|[0-9]{3}))?(-[a-zA-Z]{5,8})?(-x(-[a-zA-Z0-9]{1,8})+)?$"
              }
            }
          ]
        },
        "outputHashing": {
          "type": "string",
          "description": "Define the output filename cache-busting hashing mode.",
          "default": "none",
          "enum": [
            "none",
            "all",
            "media",
            "bundles"
          ]
        },
        "deleteOutputPath": {
          "type": "boolean",
          "description": "Delete the output path before building.",
          "default": true
        },
        "preserveSymlinks": {
          "type": "boolean",
          "description": "Do not use the real path when resolving modules. If unset then will default to `true` if NodeJS option --preserve-symlinks is set."
        },
        "extractLicenses": {
          "type": "boolean",
          "description": "Extract all licenses in a separate file, in the case of production builds only.",
          "default": true
        },
        "namedChunks": {
          "type": "boolean",
          "description": "Use file name for lazy loaded chunks.",
          "default": false
        },
        "bundleDependencies": {
          "description": "Which external dependencies to bundle into the bundle. By default, all of node_modules will be bundled.",
          "default": true,
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "string",
              "enum": [
                "none",
                "all"
              ]
            }
          ]
        },
        "externalDependencies": {
          "description": "Exclude the listed external dependencies from being bundled into the bundle. Instead, the created bundle relies on these dependencies to be available during runtime.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        },
        "statsJson": {
          "type": "boolean",
          "description": "Generates a 'stats.json' file which can be analyzed using tools such as 'webpack-bundle-analyzer'.",
          "default": false
        },
        "watch": {
          "type": "boolean",
          "description": "Run build when files change.",
          "default": false
        },
        "poll": {
          "type": "number",
          "description": "Enable and define the file watching poll time period in milliseconds."
        }
      },
      "additionalProperties": false,
      "definitions": {
        "fileReplacement": {
          "oneOf": [
            {
              "type": "object",
              "properties": {
                "src": {
                  "type": "string",
                  "pattern": "\\.(([cm]?j|t)sx?|json)$"
                },
                "replaceWith": {
                  "type": "string",
                  "pattern": "\\.(([cm]?j|t)sx?|json)$"
                }
              },
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "replace": {
                  "type": "string",
                  "pattern": "\\.(([cm]?j|t)sx?|json)$"
                },
                "with": {
                  "type": "string",
                  "pattern": "\\.(([cm]?j|t)sx?|json)$"
                }
              },
              "additionalProperties": false
            }
          ]
        }
      }
    },
    "AngularDevkitBuildAngularBuildersNgPackagrSchema": {
      "title": "ng-packagr Target",
      "description": "ng-packagr target options for Build Archite