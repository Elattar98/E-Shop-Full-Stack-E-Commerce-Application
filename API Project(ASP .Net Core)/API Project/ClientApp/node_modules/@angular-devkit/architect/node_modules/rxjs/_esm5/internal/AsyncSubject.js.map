re `ts.SourceFile`s between the
 * source and typing programs that are created for a single program.
 */
export declare class EntryPointFileCache {
    private fs;
    private sharedFileCache;
    private processSourceText;
    private readonly sfCache;
    constructor(fs: ReadonlyFileSystem, sharedFileCache: SharedFileCache, processSourceText: (sourceText: string) => string);
    /**
     * Returns and caches a parsed `ts.SourceFile` for the provided `fileName`. If the `fileName` is
     * cached in the shared file cache, that result is used. Otherwise, the source file is cached
     * internally. This method returns `undefined` if the requested file does not exist.
     *
     * @param fileName The path of the file to retrieve a source file for.
     * @param languageVersion The language version to use for parsing the file.
     */
    getCachedSourceFile(fileName: string, languageVersion: ts.ScriptTarget): ts.SourceFile | undefined;
}
/**
 * Creates a `ts.ModuleResolutionCache` that uses the provided filesystem for path operations.
 *
 * @param fs The filesystem to use for path operations.
 */
export declare function createModuleResolutionCache(fs: Re