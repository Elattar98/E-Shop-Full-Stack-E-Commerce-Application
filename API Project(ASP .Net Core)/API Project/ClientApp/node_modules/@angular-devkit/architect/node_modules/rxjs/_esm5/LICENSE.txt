t.",
          "$default": {
            "$source": "projectName"
          }
        },
        "implements": {
          "type": "array",
          "description": "Specifies which interfaces to implement.",
          "uniqueItems": true,
          "minItems": 1,
          "items": {
            "enum": [
              "CanActivate",
              "CanActivateChild",
              "CanDeactivate",
              "CanLoad"
            ],
            "type": "string"
          },
          "default": [
            "CanActivate"
          ]
        }
      }
    },
    "SchematicsAngularInterceptorSchema": {
      "title": "Angular Interceptor Options Schema",
      "type": "object",
      "additionalProperties": false,
      "description": "Creates a new, generic interceptor definition in the given or default project.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the interceptor.",
          "$default": {
            "$source": "argv",
            "index": 0
          }
        },
        "path": {
          "type": "string",
          "format": "path",
          "$default": {
            "$source": "workingDirectory"
          },
          "description": "The path at which to create the interceptor, relative to the workspace root.",
          "visible": false
        },
        "project": {
          "type": "string",
          "description": "The name of the project.",
          "$default": {
            "$source": "projectName"
          }
        },
        "flat": {
          "type": "boolean",
          "default": true,
          "description": "When true (the default), creates files at the top level of the project."
        },
        "skipTests": {
          "type": "boolean",
          "description": "Do not create \"spec.ts\" test files for the new interceptor.",
          "default": false
        }
      }
    },
    "SchematicsAngularInterfaceSchema": {
      "title": "Angular Interface Options Schema",
      "type": "object",
      "additionalProperties": false,
      "description": "Creates a new, generic interface definition in the given or default project.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the interface.",
          "$default": {
            "$source": "argv",
            "index": 0
          }
        },
        "path": {
          "type": "string",
          "format": "path",
          "$default": {
            "$source": "workingDirectory"
          },
          "description": "The path at which to create the interface, relative to the workspace root.",
          "visible": false
        },
        "project": {
          "type": "string",
          "description": "The name of the project.",
          "$default": {
            "$source": "projectName"
          }
        },
        "prefix": {
          "type": "string",
          "description": "A prefix to apply to generated selectors."
        },
        "type": {
          "type": "string",
          "description": "Adds a developer-defined type to the filename, in the format \"name.type.ts\".",
          "$default": {
            "$source": "argv",
            "index": 1
          }
        }
      }
    },
    "SchematicsAngularLibrarySchema": {
      "title": "Library Options Schema",
      "type": "object",
      "description": "Creates a new, generic library project in the current workspace.",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the library.",
          "pattern": "^(?:@[a-zA-Z0-9-*~][a-zA-Z0-9-*._~]*/)?[a-zA-Z0-9-~][a-zA-Z0-9-._~]*$",
          "$default": {
            "$source": "argv",
            "index": 0
          }
        },
        "entryFile": {
          "type": "string",
          "format": "path",
          "description": "The path at which to create the library's public API file, relative to the workspace root.",
          "default": "public-api"
        },
        "prefix": {
          "type": "string",
          "format": "html-selector",
          "description": "A prefix to apply to generated selectors.",
          "default": "lib",
          "alias": "p"
        },
        "skipPackageJson": {
          "type": "boolean",
          "default": false,
          "description": "Do not add dependencies to the \"package.json\" file. "
        },
        "skipInstall": {
          "description": "Do not install dependency packages.",
          "type": "boolean",
          "default": false
        },
        "skipTsConfig": {
          "type": "boolean",
          "default": false,
          "description": "Do not update \"tsconfig.json\" to add a path mapping for the new library. The path mapping is needed to use the library in an app, but can be disabled here to simplify development."
        }
      }
    },
    "SchematicsAngularPipeSchema": {
      "title": "Angular Pipe Options Schema",
      "type": "object",
      "additionalProperties": false,
      "description": "Creates a new, generic pipe definition in the given or default project.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the pipe.",
          "$default": {
            "$source": "argv",
            "index": 0
          }
        },
        "path": {
          "type": "string",
          "format": "path",
          "$default": {
            "$source": "workingDirectory"
          },
          "description": "The path at which to create the pipe, relative to the workspace root.",
          "visible": false
        },
        "project": {
          "type": "string",
          "description": "The name of the project.",
          "$default": {
            "$source": "projectName"
          }
        },
        "flat": {
          "type": "boolean",
          "default": true,
          "description": "When true (the default) creates files at the top level of the project."
        },
        "skipTests": {
          "type": "boolean",
          "description": "Do not create \"spec.ts\" test files for the new pipe.",
          "default": false
        },
        "skipImport": {
          "type": "boolean",
          "default": false,
          "description": "Do not import this pipe into the owning NgModule."
        },
        "standalone": {
          "description": "Whether the generated pipe is standalone.",
          "type": "boolean",
          "default": false
        },
        "module": {
          "type": "string",
          "description": "The declaring NgModule.",
          "alias": "m"
        },
        "export": {
          "type": "boolean",
          "default": false,
          "description": "The declaring NgModule exports this pipe."
        }
      }
    },
    "SchematicsAngularNgNewSchema": {
      "title": "Angular Ng New Options Schema",
      "type": "object",
      "description": "Creates a new project by combining the workspace and application schematics.",
      "additionalProperties": false,
      "properties": {
        "directory": {
          "type": "string",
          "description": "The directory name to create the workspace in."
        },
        "name": {
          "description": "The name of the new workspace and initial project.",
          "type": "string",
          "$default": {
            "$source": "argv",
            "index": 0
          }
        },
        "skipInstall": {
          "description": "Do not install dependency packages.",
          "type": "boolean",
          "default": false
        },
        "linkCli": {
          "description": "Link the CLI to the global version (internal development only).",
          "type": "boolean",
          "default": false,
          "visible": false
        },
        "skipGit": {
          "description": "Do not initialize a git repository.",
          "type": "boolean",
          "default": false,
          "alias": "g"
        },
        "commit": {
          "description": "Initial git repository commit information.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "email": {
                  "type": "string",
                  "format": "email"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          ],
          "default": true
        },
        "newProjectRoot": {
          "description": "The path where new projects will be created, relative to the new workspace root.",
          "type": "string",
          "default": "projects"
        },
        "inlineStyle": {
          "description": "Include styles inline in the component TS file. By default, an external styles file is created and referenced in the component TypeScript file.",
          "type": "boolean",
          "alias": "s"
        },
        "inlineTemplate": {
          "description": "Include template inline in the component TS file. By default, an external template file is created and referenced in the component TypeScript file.",
          "type": "boolean",
          "alias": "t"
        },
        "viewEncapsulation": {
          "description": "The view encapsulation strategy to use in the initial project.",
          "enum": [
            "Emulated",
            "None",
            "ShadowDom"
          ],
          "type": "string"
        },
        "version": {
          "type": "string",
          "description": "The version of the Angular CLI to use.",
          "visible": false,
          "$default": {
            "$source": "ng-cli-version"
          }
        },
        "routing": {
          "type": "boolean",
          "description": "Generate a routing module for the initial project."
        },
        "prefix": {
          "type": "string",
          "format": "html-selector",
          "description": "The prefix to apply to generated selectors for the initial project.",
          "minLength": 1,
          "default": "app",
          "alias": "p"
        },
        "style": {
          "description": "The file extension or preprocessor to use for style files.",
          "type": "string",
          "enum": [
            "css",
            "scss",
            "sass",
            "less"
          ]
        },
        "skipTests": {
          "description": "Do not generate \"spec.ts\" test files for the new project.",
          "type": "boolean",
          "default": false,
          "alias": "S"
        },
        "createApplication": {
          "description": "Create a new initial application project in the 'src' folder of the new workspace. When false, creates an empty workspace with no initial application. You can then use the generate application command so that all applications are created in the projects folder.",
          "type