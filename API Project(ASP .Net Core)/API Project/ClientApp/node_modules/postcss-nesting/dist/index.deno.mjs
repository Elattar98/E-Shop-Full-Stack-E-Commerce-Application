ithMediaQueries$2(t2, new A._EvaluateVisitor_visitMediaRule__closure1(t1, _this.node));
    },
    $signature: 1
  };
  A._EvaluateVisitor_visitMediaRule__closure1.prototype = {
    call$0() {
      var t2, t3, _i,
        t1 = this.$this,
        styleRule = t1._evaluate0$_atRootExcludingStyleRule ? null : t1._evaluate0$_styleRuleIgnoringAtRoot;
      if (styleRule == null)
        for (t2 = this.node.children, t3 = t2.length, _i = 0; _i < t3; ++_i)
          t2[_i].accept$1(t1);
      else
        t1._evaluate0$_withParent$2$3$scopeWhen(A.ModifiableCssStyleRule$0(styleRule.selector, styleRule.span, styleRule.originalSelector), new A._EvaluateVisitor_visitMediaRule___closure1(t1, this.node), false, type$.ModifiableCssStyleRule_2, type$.Null);
    },
    $signature: 1
  };
  A._EvaluateVisitor_visitMediaRule___closure1.prototype = {
    call$0() {
      var t1, t2, t3, _i;
      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)
        t1[_i].accept$1(t3);
    },
    $signature: 1
  };
  A._EvaluateVisitor_visitMediaRule_closure7.prototype = {
    call$1(node) {
      var t1;
      if (!type$.CssStyleRule_2._is(node))
        t1 = this.mergedQueries != null && type$.CssMediaRule_2._is(node);
      else
        t1 = true;
      return t1;
    },
    $signature: 7
  };
  A._EvaluateVisitor__visitMediaQueries_closure1.prototype = {
    call$0() {
      var t1 = A.SpanScanner$(this.resolved, null);
      return new A.MediaQueryParser0(t1, this.$this._evaluate0$_logger).parse$0();
    },
    $signature: 113
  };
  A._EvaluateVisitor_visitStyleRule_closure13.prototype = {
    call$0() {
      return A.KeyframeSelectorParser$0(this.selectorText.value, this.$this._evaluate0$_logger).parse$0();
    },
    $signature: 46
  };
  A._EvaluateVisitor_visitStyleRule_closure14.prototype = {
    call$0() {
      var t1, t2, t3, _i;
      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)
        t1[_i].accept$1(t3);
    },
    $signature: 1
  };
  A._EvaluateVisitor_visitStyleRule_closure15.prototype = {
    call$1(node) {
      return type$.CssStyleRule_2._is(node);
    },
    $signature: 7
  };
  A._EvaluateVisitor_visitStyleRule_closure16.prototype = {
    call$0() {
      var _s11_ = "_stylesheet",
        t1 = this.$this;
      return A.SelectorList_SelectorList$parse0(this.selectorText.value, !t1._evaluate0$_assertInModule$2(t1._evaluate0$__stylesheet, _s11_).plainCss, !t1._evaluate0$_assertInModule$2(t1._evaluate0$__stylesheet, _s11_).plainCss, t1._evaluate0$_logger);
    },
    $signature: 45
  };
  A._EvaluateVisitor_visitStyleRule_closure17.prototype = {
    call$0() {
      var t1 = this._box_0.parsedSelector,
        t2 = this.$this,
        t3 = t2._evaluate0$_styleRuleIgnoringAtRoot;
      t3 = t3 == null ? null : t3.originalSelector;
      return t1.resolveParentSelectors$2$implicitParent(t3, !t2._evaluate0$_atRootExcludingStyleRule);
    },
    $signature: 45
  };
  A._EvaluateVisitor_visitStyleRule_closure18.prototype = {
    call$0() {
      var t1 = this.$this;
      t1._evaluate0$_withStyleRule$2(this.rule, new A._EvaluateVisitor_visitStyleRule__closure1(t1, this.node));
    },
    $signature: 1
  };
  A._EvaluateVisitor_visitStyleRule__closure1.prototype = {
    call$0() {
      var t1, t2, t3, _i;
      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)
        t1[_i].accept$1(t3);
    },
    $signature: 1
  };
  A._EvaluateVisitor_visitStyleRule_closure19.prototype = {
    call$1(node) {
      return type$.CssStyleRule_2._is(node);
    },
    $signature: 7
  };
  A._EvaluateVisitor_visitSupportsRule_closure3.prototype = {
    call$0() {
      var t2, t3, _i,
        t1 = this.$this,
        styleRule = t1._evaluate0$_atRootExcludingStyleRule ? null : t1._evaluate0$_styleRuleIgnoringAtRoot;
      if (styleRule == null)
        for (t2 = this.node.children, t3 = t2.length, _i = 0; _i < t3; ++_i)
          t2[_i].accept$1(t1);
      else
        t1._evaluate0$_withParent$2$2(A.ModifiableCssStyleRule$0(styleRule.selector, styleRule.span, styleRule.originalSelector), new A._EvaluateVisitor_visitSupportsRule__closure1(t1, this.node), type$.ModifiableCssStyleRule_2, type$.Null);
    },
    $signature: 1
  };
  A._EvaluateVisitor_visitSupportsRule__closure1.prototype = {
    call$0() {
      var t1, t2, t3, _i;
      for (t1 = this.node.children, t2 = t1.length, t3 = this.$this, _i = 0; _i < t2; ++_i)
        t1[_i].accept$1(t3);
    },
    $signature: 1
  };
  A._EvaluateVisitor_visitSupportsRule_closure4.prototype = {
    call$1(node) {
      return type$.CssStyleRule_2._is(node);
    },
    $signature: 7
  };
  A._EvaluateVisitor_visitVariableDeclaration_closure5.prototype = {
    call$0() {
      var t1 = this.override;
      this.$this._evaluate0$_environment.setVariable$4$global(this.node.name, t1.value, t1.assignmentNode, true);
    },
    $signature: 1
  };
  A._EvaluateVisitor_visitVariableDeclaration_closure6.prototype = {
    call$0() {
      var t1 = this.node;
      return this.$this._evaluate0$_environment.getVariable$2$namespace(t1.name, t1.namespace);
    },
    $signature: 39
  };
  A._EvaluateVisitor_visitVariableDeclaration_closure7.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = this.node;
      t1._evaluate0$_environment.setVariable$5$global$namespace(t2.name, this.value, t1._evaluate0$_expressionNode$1(t2.expression), t2.isGlobal, t2.namespace);
    },
    $signature: 1
  };
  A._EvaluateVisitor_visitUseRule_closure1.prototype = {
    call$1(module) {
      var t1 = this.node;
      this.$this._evaluate0$_environment.addModule$3$namespace(module, t1, t1.namespace);
    },
    $signature: 66
  };
  A._EvaluateVisitor_visitWarnRule_closure1.prototype = {
    call$0() {
      return this.node.expression.accept$1(this.$this);
    },
    $signature: 47
  };
  A._EvaluateVisitor_visitWhileRule_closure1.prototype = {
    call$0() {
      var t1, t2, t3, result;
      for (t1 = this.node, t2 = t1.condition, t3 = this.$this, t1 = t1.children; t2.accept$1(t3).get$isTruthy();) {
        result = t3._evaluate0$_handleReturn$2(t1, new A._EvaluateVisitor_visitWhileRule__closure1(t3));
        if (result != null)
          return result;
      }
      return null;
    },
    $signature: 39
  };
  A._EvaluateVisitor_visitWhileRule__closure1.prototype = {
    call$1(child) {
      return child.accept$1(this.$this);
    },
    $signature: 79
  };
  A._EvaluateVisitor_visitBinaryOperationExpression_closure1.prototype = {
    call$0() {
      var right, result,
        t1 = this.node,
        t2 = this.$this,
        left = t1.left.accept$1(t2),
        t3 = t1.operator;
      switch (t3) {
        case B.BinaryOperator_kjl0:
          right = t1.right.accept$1(t2);
          return new A.SassString0(A.serializeValue0(left, false, true) + "=" + A.serializeValue0(right, false, true), false);
        case B.BinaryOperator_or_or_10:
          return left.get$isTruthy() ? left : t1.right.accept$1(t2);
        case B.BinaryOperator_and_and_20:
          return left.get$isTruthy() ? t1.right.accept$1(t2) : left;
        case B.BinaryOperator_YlX0:
          return left.$eq(0, t1.right.accept$1(t2)) ? B.SassBoolean_true0 : B.SassBoolean_false0;
        case B.BinaryOperator_i5H0:
          return !left.$eq(0, t1.right.accept$1(t2)) ? B.SassBoolean_true0 : B.SassBoolean_false0;
        case B.BinaryOperator_AcR1:
          return left.greaterThan$1(t1.right.accept$1(t2));
        case B.BinaryOperator_1da0:
          return left.greaterThanOrEquals$1(t1.right.accept$1(t2));
        case B.BinaryOperator_8qt0:
          return left.lessThan$1(t1.right.accept$1(t2));
        case B.BinaryOperator_33h0:
          return left.lessThanOrEquals$1(t1.right.accept$1(t2));
        case B.BinaryOperator_AcR2:
          return left.plus$1(t1.right.accept$1(t2));
        case B.BinaryOperator_iyO0:
          return left.minus$1(t1.right.accept$1(t2));
        case B.BinaryOperator_O1M0:
          return left.times$1(t1.right.accept$1(t2));
        case B.BinaryOperator_RTB0:
          right = t1.right.accept$1(t2);
          result = left.dividedBy$1(right);
          if (t1.allowsSlash && left instanceof A.SassNumber0 && right instanceof A.SassNumber0)
            return type$.SassNumber_2._as(result).withSlash$2(left, right);
          else {
            if (left instanceof A.SassNumber0 && right instanceof A.SassNumber0)
              t2._evaluate0$_warn$3$deprecation(string$.Using__o + A.S(new A._EvaluateVisitor_visitBinaryOperationExpression_closure_recommendation1().call$1(t1)) + " or calc(" + t1.toString$0(0) + string$.x29x0a_Morx20, t1.get$span(t1), true);
            return result;
          }
        case B.BinaryOperator_2ad0:
          return left.modulo$1(t1.right.accept$1(t2));
        default:
          throw A.wrapException(A.ArgumentError$("Unknown binary operator " + t3.toString$0(0) + ".", null));
      }
    },
    $signature: 47
  };
  A._EvaluateVisitor_visitBinaryOperationExpression_closure_recommendation1.prototype = {
    call$1(expression) {
      if (expression instanceof A.BinaryOperationExpression0 && expression.operator === B.BinaryOperator_RTB0)
        return "math.div(" + A.S(this.call$1(expression.left)) + ", " + A.S(this.call$1(expression.right)) + ")";
      else if (expression instanceof A.ParenthesizedExpression0)
        return expression.expression.toString$0(0);
      else
        return expression.toString$0(0);
    },
    $signature: 122
  };
  A._EvaluateVisitor_visitVariableExpression_closure1.prototype = {
    call$0() {
      var t1 = this.node;
      return this.$this._evaluate0$_environment.getVariable$2$namespace(t1.name, t1.namespace);
    },
    $signature: 39
  };
  A._EvaluateVisitor_visitUnaryOperationExpression_closure1.prototype = {
    call$0() {
      var _this = this,
        t1 = _this.node.operator;
      switch (t1) {
        case B.UnaryOperator_j2w0:
          return _this.operand.unaryPlus$0();
        case B.UnaryOperator_U4G0:
          return _this.operand.unaryMinus$0();
        case B.UnaryOperator_zDx0:
          return new A.SassString0("/" + A.serializeValue0(_this.operand, false, true), false);
        case B.UnaryOperator_not_not0:
          return _this.operand.unaryNot$0();
        default:
          throw A.wrapException(A.StateError$("Unknown unary operator " + t1.toString$0(0) + "."));
      }
    },
    $signature: 47
  };
  A._EvaluateVisitor__visitCalculationValue_closure1.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = this.node,
        t3 = this.inMinMax;
      return A.SassCalculation_operateInternal0(t1._evaluate0$_binaryOperatorToCalculationOperator$1(t2.operator), t1._evaluate0$_visitCalculationValue$2$inMinMax(t2.left, t3), t1._evaluate0$_visitCalculationValue$2$inMinMax(t2.right, t3), t3, !t1._evaluate0$_inSupportsDeclaration);
    },
    $signature: 88
  };
  A._EvaluateVisitor_visitListExpression_closure1.prototype = {
    call$1(expression) {
      return expression.accept$1(this.$this);
    },
    $signature: 405
  };
  A._EvaluateVisitor_visitFunctionExpression_closure3.prototype = {
    call$0() {
      var t1 = this.node;
      return this.$this._evaluate0$_getFunction$2$namespace(A.stringReplaceAllUnchecked(t1.originalName, "_", "-"), t1.namespace);
    },
    $signature: 105
  };
  A._EvaluateVisitor_visitFunctionExpression_closure4.prototype = {
    call$0() {
      var t1 = this.node;
      return this.$this._evaluate0$_runFunctionCallable$3(t1.$arguments, this._box_0.$function, t1);
    },
    $signature: 47
  };
  A._EvaluateVisitor_visitInterpolatedFunctionExpression_closure1.prototype = {
    call$0() {
      var t1 = this.node;
      return this.$this._evaluate0$_runFunctionCallable$3(t1.$arguments, this.$function, t1);
    },
    $signature: 47
  };
  A._EvaluateVisitor__runUserDefinedCallable_closure1.prototype = {
    call$0() {
      var _this = this,
        t1 = _this.$this,
        t2 = _this.callable;
      return t1._evaluate0$_withEnvironment$2(t2.environment.closure$0(), new A._EvaluateVisitor__runUserDefinedCallable__closure1(t1, _this.evaluated, t2, _this.nodeWithSpan, _this.run, _this.V));
    },
    $signature() {
      return this.V._eval$1("0()");
    }
  };
  A._EvaluateVisitor__runUserDefinedCallable__closure1.prototype = {
    call$0() {
      var _this = this,
        t1 = _this.$this,
        t2 = _this.V;
      return t1._evaluate0$_environment.scope$1$1(new A._EvaluateVisitor__runUserDefinedCallable___closure1(t1, _this.evaluated, _this.callable, _this.nodeWithSpan, _this.run, t2), t2);
    },
    $signature() {
      return this.V._eval$1("0()");
    }
  };
  A._EvaluateVisitor__runUserDefinedCallable___closure1.prototype = {
    call$0() {
      var declaredArguments, t7, minLength, t8, i, argument, t9, value, t10, t11, restArgument, rest, argumentList, result, _this = this,
        t1 = _this.$this,
        t2 = _this.evaluated,
        t3 = t2.positional,
        t4 = t2.named,
        t5 = _this.callable.declaration.$arguments,
        t6 = _this.nodeWithSpan;
      t1._evaluate0$_verifyArguments$4(t3.length, t4, t5, t6);
      declaredArguments = t5.$arguments;
      t7 = declaredArguments.length;
      minLength = Math.min(t3.length, t7);
      for (t8 = t2.positionalNodes, i = 0; i < minLength; ++i)
        t1._evaluate0$_environment.setLocalVariable$3(declaredArguments[i].name, t3[i], t8[i]);
      for (i = t3.length, t8 = t2.namedNodes; i < t7; ++i) {
        argument = declaredArguments[i];
        t9 = argument.name;
        value = t4.remove$1(0, t9);
        if (value == null) {
          t10 = argument.defaultValue;
          value = t1._evaluate0$_withoutSlash$2(t10.accept$1(t1), t1._evaluate0$_expressionNode$1(t10));
        }
        t10 = t1._evaluate0$_environment;
        t11 = t8.$index(0, t9);
        if (t11 == null) {
          t11 = argument.defaultValue;
          t11.toString;
          t11 = t1._evaluate0$_expressionNode$1(t11);
        }
        t10.setLocalVariable$3(t9, value, t11);
      }
      restArgument = t5.restArgument;
      if (restArgument != null) {
        rest = t3.length > t7 ? B.JSArray_methods.sublist$1(t3, t7) : B.List_empty15;
        t2 = t2.separator;
        argumentList = A.SassArgumentList$0(rest, t4, t2 === B.ListSeparator_undecided_null0 ? B.ListSeparator_kWM0 : t2);
        t1._evaluate0$_environment.setLocalVariable$3(restArgument, argumentList, t6);
      } else
        argumentList = null;
      result = _this.run.call$0();
      if (argumentList == null)
        return result;
      t2 = t4.__js_helper$_length;
      if (t2 === 0)
        return result;
      if (argumentList._argument_list$_wereKeywordsAccessed)
        return result;
      t3 = A._instanceType(t4)._eval$1("LinkedHashMapKeyIterable<1>");
      throw A.wrapException(A.MultiSpanSassRuntimeException$0("No " + A.pluralize0("argument", t2, null) + " named " + A.toSentence0(A.MappedIterable_MappedIterable(new A.LinkedHashMapKeyIterable(t4, t3), new A._EvaluateVisitor__runUserDefinedCallable____closure1(), t3._eval$1("Iterable.E"), type$.Object), "or") + ".", t6.get$span(t6), "invocation", A.LinkedHashMap_LinkedHashMap$_literal([t5.get$spanWithName(), "declaration"], type$.FileSpan, type$.String), t1._evaluate0$_stackTrace$1(t6.get$span(t6))));
    },
    $signature() {
      return this.V._eval$1("0()");
    }
  };
  A._EvaluateVisitor__runUserDefinedCallable____closure1.prototype = {
    call$1($name) {
      return "$" + $name;
    },
    $signature: 5
  };
  A._EvaluateVisitor__runFunctionCallable_closure1.prototype = {
    call$0() {
      var t1, t2, t3, t4, _i, $returnValue;
      for (t1 = this.callable.declaration, t2 = t1.children, t3 = t2.length, t4 = this.$this, _i = 0; _i < t3; ++_i) {
        $returnValue = t2[_i].accept$1(t4);
        if ($returnValue instanceof A.Value0)
          return $returnValue;
      }
      throw A.wrapException(t4._evaluate0$_exception$2("Function finished without @return.", t1.span));
    },
    $signature: 47
  };
  A._EvaluateVisitor__runBuiltInCallable_closure3.prototype = {
    call$0() {
      return this.overload.verify$2(this.evaluated.positional.length, this.namedSet);
    },
    $signature: 0
  };
  A._EvaluateVisitor__runBuiltInCallable_closure4.prototype = {
    call$1($name) {
      return "$" + $name;
    },
    $signature: 5
  };
  A._EvaluateVisitor__evaluateArguments_closure7.prototype = {
    call$1(value) {
      return value;
    },
    $signature: 38
  };
  A._EvaluateVisitor__evaluateArguments_closure8.prototype = {
    call$1(value) {
      return this.$this._evaluate0$_withoutSlash$2(value, this.restNodeForSpan);
    },
    $signature: 38
  };
  A._EvaluateVisitor__evaluateArguments_closure9.prototype = {
    call$2(key, value) {
      var _this = this,
        t1 = _this.restNodeForSpan;
      _this.named.$indexSet(0, key, _this.$this._evaluate0$_withoutSlash$2(value, t1));
      _this.namedNodes.$indexSet(0, key, t1);
    },
    $signature: 74
  };
  A._EvaluateVisitor__evaluateArguments_closure10.prototype = {
    call$1(value) {
      return value;
    },
    $signature: 38
  };
  A._EvaluateVisitor__evaluateMacroArguments_closure7.prototype = {
    call$1(value) {
      var t1 = this.restArgs;
      return new A.ValueExpression0(value, t1.get$span(t1));
    },
    $signature: 58
  };
  A._EvaluateVisitor__evaluateMacroArguments_closure8.prototype = {
    call$1(value) {
      var t1 = this.restArgs;
      return new A.ValueExpression0(this.$this._evaluate0$_withoutSlash$2(value, this.restNodeForSpan), t1.get$span(t1));
    },
    $signature: 58
  };
  A._EvaluateVisitor__evaluateMacroArguments_closure9.prototype = {
    call$2(key, value) {
      var _this = this,
        t1 = _this.restArgs;
      _this.named.$indexSet(0, key, new A.ValueExpression0(_this.$this._evaluate0$_withoutSlash$2(value, _this.restNodeForSpan), t1.get$span(t1)));
    },
    $signature: 74
  };
  A._EvaluateVisitor__evaluateMacroArguments_closure10.prototype = {
    call$1(value) {
      var t1 = this.keywordRestArgs;
      return new A.ValueExpression0(this.$this._evaluate0$_withoutSlash$2(value, this.keywordRestNodeForSpan), t1.get$span(t1));
    },
    $signature: 58
  };
  A._EvaluateVisitor__addRestMap_closure1.prototype = {
    call$2(key, value) {
      var t2, _this = this,
        t1 = _this.$this;
      if (key instanceof A.SassString0)
        _this.values.$indexSet(0, key._string0$_text, _this.convert.call$1(t1._evaluate0$_withoutSlash$2(value, _this.expressionNode)));
      else {
        t2 = _this.nodeWithSpan;
        throw A.wrapException(t1._evaluate0$_exception$2(string$.Variab_ + key.toString$0(0) + " is not a string in " + _this.map.toString$0(0) + ".", t2.get$span(t2)));
      }
    },
    $signature: 55
  };
  A._EvaluateVisitor__verifyArguments_closure1.prototype = {
    call$0() {
      return this.$arguments.verify$2(this.positional, new A.MapKeySet(this.named, type$.MapKeySet_String));
    },
    $signature: 0
  };
  A._EvaluateVisitor_visitStringExpression_closure1.prototype = {
    call$1(value) {
      var t1, result;
      if (typeof value == "string")
        return value;
      type$.Expression_2._as(value);
      t1 = this.$this;
      result = value.accept$1(t1);
      return result instanceof A.SassString0 ? result._string0$_text : t1._evaluate0$_serialize$3$quote(result, value, false);
    },
    $signature: 48
  };
  A._EvaluateVisitor_visitCssAtRule_closure3.prototype = {
    call$0() {
      var t1, t2, t3, t4;
      for (t1 = this.node.children, t1 = new A.ListIterator(t1, t1.get$length(t1)), t2 = this.$this, t3 = A._instanceType(t1)._precomputed1; t1.moveNext$0();) {
        t4 = t1.__internal$_current;
        (t4 == null ? t3._as(t4) : t4).accept$1(t2);
      }
    },
    $signature: 1
  };
  A._EvaluateVisitor_visitCssAtRule_closure4.prototype = {
    call$1(node) {
      return type$.CssStyleRule_2._is(node);
    },
    $signature: 7
  };
  A._EvaluateVisitor_visitCssKeyframeBlock_closure3.prototype = {
    call$0() {
      var t1, t2, t3, t4;
      for (t1 = this.node.children, t1 = new A.ListIterator(t1, t1.get$length(t1)), t2 = this.$this, t3 = A._instanceType(t1)._precomputed1; t1.moveNext$0();) {
        t4 = t1.__internal$_current;
        (t4 == null ? t3._as(t4) : t4).accept$1(t2);
      }
    },
    $signature: 1
  };
  A._EvaluateVisitor_visitCssKeyframeBlock_closure4.prototype = {
    call$1(node) {
      return type$.CssStyleRule_2._is(node);
    },
    $signature: 7
  };
  A._EvaluateVisitor_visitCssMediaRule_closure5.prototype = {
    call$1(mediaQueries) {
      return this.$this._evaluate0$_mergeMediaQueries$2(mediaQueries, this.node.queries);
    },
    $signature: 80
  };
  A._EvaluateVisitor_visitCssMediaRule_closure6.prototype = {
    call$0() {
      var _this = this,
        t1 = _this.$this,
        t2 = _this.mergedQueries;
      if (t2 == null)
        t2 = _this.node.queries;
      t1._evaluate0$_withMediaQueries$2(t2, new A._EvaluateVisitor_visitCssMediaRule__closure1(t1, _this.node));
    },
    $signature: 1
  };
  A._EvaluateVisitor_visitCssMediaRule__closure1.prototype = {
    call$0() {
      var t2, t3, t4,
        t1 = this.$this,
        styleRule = t1._evaluate0$_atRootExcludingStyleRule ? null : t1._evaluate0$_styleRuleIgnoringAtRoot;
      if (styleRule == null)
        for (t2 = this.node.children, t2 = new A.ListIterator(t2, t2.get$length(t2)), t3 = A._instanceType(t2)._precomputed1; t2.moveNext$0();) {
          t4 = t2.__internal$_current;
          (t4 == null ? t3._as(t4) : t4).accept$1(t1);
        }
      else
        t1._evaluate0$_withParent$2$3$scopeWhen(A.ModifiableCssStyleRule$0(styleRule.selector, styleRule.span, styleRule.originalSelector), new A._EvaluateVisitor_visitCssMediaRule___closure1(t1, this.node), false, type$.ModifiableCssStyleRule_2, type$.Null);
    },
    $signature: 1
  };
  A._EvaluateVisitor_visitCssMediaRule___closure1.prototype = {
    call$0() {
      var t1, t2, t3, t4;
      for (t1 = this.node.children, t1 = new A.ListIterator(t1, t1.get$length(t1)), t2 = this.$this, t3 = A._instanceType(t1)._precomputed1; t1.moveNext$0();) {
        t4 = t1.__internal$_current;
        (t4 == null ? t3._as(t4) : t4).accept$1(t2);
      }
    },
    $signature: 1
  };
  A._EvaluateVisitor_visitCssMediaRule_closure7.prototype = {
    call$1(node) {
      var t1;
      if (!type$.CssStyleRule_2._is(node))
        t1 = this.mergedQueries != null && type$.CssMediaRule_2._is(node);
      else
        t1 = true;
      return t1;
    },
    $signature: 7
  };
  A._EvaluateVisitor_visitCssStyleRule_closure3.prototype = {
    call$0() {
      var t1 = this.$this;
      t1._evaluate0$_withStyleRule$2(this.rule, new A._EvaluateVisitor_visitCssStyleRule__closure1(t1, this.node));
    },
    $signature: 1
  };
  A._EvaluateVisitor_visitCssStyleRule__closure1.prototype = {
    call$0() {
      var t1, t2, t3, t4;
      for (t1 = this.node.children, t1 = new A.ListIterator(t1, t1.get$length(t1)), t2 = this.$this, t3 = A._instanceType(t1)._precomputed1; t1.moveNext$0();) {
        t4 = t1.__internal$_current;
        (t4 == null ? t3._as(t4) : t4).accept$1(t2);
      }
    },
    $signature: 1
  };
  A._EvaluateVisitor_visitCssStyleRule_closure4.prototype = {
    call$1(node) {
      return type$.CssStyleRule_2._is(node);
    },
    $signature: 7
  };
  A._EvaluateVisitor_visitCssSupportsRule_closure3.prototype = {
    call$0() {
      var t2, t3, t4,
        t1 = this.$this,
        styleRule = t1._evaluate0$_atRootExcludingStyleRule ? null : t1._evaluate0$_styleRuleIgnoringAtRoot;
      if (styleRule == null)
        for (t2 = this.node.children, t2 = new A.ListIterator(t2, t2.get$length(t2)), t3 = A._instanceType(t2)._precomputed1; t2.moveNext$0();) {
          t4 = t2.__internal$_current;
          (t4 == null ? t3._as(t4) : t4).accept$1(t1);
        }
      else
        t1._evaluate0$_withParent$2$2(A.ModifiableCssStyleRule$0(styleRule.selector, styleRule.span, styleRule.originalSelector), new A._EvaluateVisitor_visitCssSupportsRule__closure1(t1, this.node), type$.ModifiableCssStyleRule_2, type$.Null);
    },
    $signature: 1
  };
  A._EvaluateVisitor_visitCssSupportsRule__closure1.prototype = {
    call$0() {
      var t1, t2, t3, t4;
      for (t1 = this.node.children, t1 = new A.ListIterator(t1, t1.get$length(t1)), t2 = this.$this, t3 = A._instanceType(t1)._precomputed1; t1.moveNext$0();) {
        t4 = t1.__internal$_current;
        (t4 == null ? t3._as(t4) : t4).accept$1(t2);
      }
    },
    $signature: 1
  };
  A._EvaluateVisitor_visitCssSupportsRule_closure4.prototype = {
    call$1(node) {
      return type$.CssStyleRule_2._is(node);
    },
    $signature: 7
  };
  A._EvaluateVisitor__performInterpolation_closure1.prototype = {
    call$1(value) {
      var t1, result, t2, t3;
      if (typeof value == "string")
        return value;
      type$.Expression_2._as(value);
      t1 = this.$this;
      result = value.accept$1(t1);
      if (this.warnForColor && result instanceof A.SassColor0 && $.$get$namesByColor0().containsKey$1(result)) {
        t2 = A.Interpolation$0(A._setArrayType([""], type$.JSArray_Object), this.interpolation.span);
        t3 = $.$get$namesByColor0();
        t1._evaluate0$_warn$2(string$.You_pr + A.S(t3.$index(0, result)) + string$.x20in_in + result.toString$0(0) + string$.x2c_whicw + A.S(t3.$index(0, result)) + string$.x22x29__If + new A.BinaryOperationExpression0(B.BinaryOperator_AcR2, new A.StringExpression0(t2, true), value, false).toString$0(0) + "'.", value.get$span(value));
      }
      return t1._evaluate0$_serialize$3$quote(result, value, false);
    },
    $signature: 48
  };
  A._EvaluateVisitor__serialize_closure1.prototype = {
    call$0() {
      return A.serializeValue0(this.value, false, this.quote);
    },
    $signature: 29
  };
  A._EvaluateVisitor__expressionNode_closure1.prototype = {
    call$0() {
      var t1 = this.expression;
      return this.$this._evaluate0$_environment.getVariableNode$2$namespace(t1.name, t1.namespace);
    },
    $signature: 189
  };
  A._EvaluateVisitor__withoutSlash_recommendation1.prototype = {
    call$1(number) {
      var asSlash = number.asSlash;
      if (asSlash != null)
        return "math.div(" + A.S(this.call$1(asSlash.item1)) + ", " + A.S(this.call$1(asSlash.item2)) + ")";
      else
        return A.serializeValue0(number, true, true);
    },
    $signature: 190
  };
  A._EvaluateVisitor__stackFrame_closure1.prototype = {
    call$1(url) {
      var t1 = this.$this._evaluate0$_importCache;
      t1 = t1 == null ? null : t1.humanize$1(url);
      return t1 == null ? url : t1;
    },
    $signature: 90
  };
  A._EvaluateVisitor__stackTrace_closure1.prototype = {
    call$1(tuple) {
      return this.$this._evaluate0$_stackFrame$2(tuple.item1, J.get$span$z(tuple.item2));
    },
    $signature: 191
  };
  A._ImportedCssVisitor1.prototype = {
    visitCssAtRule$1(node) {
      var t1 = node.isChildless ? null : new A._ImportedCssVisitor_visitCssAtRule_closure1();
      this._evaluate0$_visitor._evaluate0$_addChild$2$through(node, t1);
    },
    visitCssComment$1(node) {
      return this._evaluate0$_visitor._evaluate0$_addChild$1(node);
    },
    visitCssDeclaration$1(node) {
    },
    visitCssImport$1(node) {
      var t2,
        _s13_ = "_endOfImports",
        t1 = this._evaluate0$_visitor;
      if (t1._evaluate0$_assertInModule$2(t1._evaluate0$__parent, "__parent") !== t1._evaluate0$_assertInModule$2(t1._evaluate0$__root, "_root"))
        t1._evaluate0$_addChild$1(node);
      else if (t1._evaluate0$_assertInModule$2(t1._evaluate0$__endOfImports, _s13_) === J.get$length$asx(t1._evaluate0$_assertInModule$2(t1._evaluate0$__root, "_root").children._collection$_source)) {
        t1._evaluate0$_addChild$1(node);
        t1._evaluate0$__endOfImports = t1._evaluate0$_assertInModule$2(t1._evaluate0$__endOfImports, _s13_) + 1;
      } else {
        t2 = t1._evaluate0$_outOfOrderImports;
        (t2 == null ? t1._evaluate0$_outOfOrderImports = A._setArrayType([], type$.JSArray_ModifiableCssImport_2) : t2).push(node);
      }
    },
    visitCssKeyframeBlock$1(node) {
    },
    visitCssMediaRule$1(node) {
      var t1 = this._evaluate0$_visitor,
        mediaQueries = t1._evaluate0$_mediaQueries;
      t1._evaluate0$_addChild$2$through(node, new A._ImportedCssVisitor_visitCssMediaRule_closure1(mediaQueries == null || t1._evaluate0$_mergeMediaQueries$2(mediaQueries, node.queries) != null));
    },
    visitCssStyleRule$1(node) {
      return this._evaluate0$_visitor._evaluate0$_addChild$2$through(node, new A._ImportedCssVisitor_visitCssStyleRule_closure1());
    },
    visitCssStylesheet$1(node) {
      var t1, t2, t3;
      for (t1 = node.children, t1 = new A.ListIterator(t1, t1.get$length(t1)), t2 = A._instanceType(t1)._precomputed1; t1.moveNext$0();) {
        t3 = t1.__internal$_current;
        (t3 == null ? t2._as(t3) : t3).accept$1(this);
      }
    },
    visitCssSupportsRule$1(node) {
      return this._evaluate0$_visitor._evaluate0$_addChild$2$through(node, new A._ImportedCssVisitor_visitCssSupportsRule_closure1());
    }
  };
  A._ImportedCssVisitor_visitCssAtRule_closure1.prototype = {
    call$1(node) {
      return type$.CssStyleRule_2._is(node);
    },
    $signature: 7
  };
  A._ImportedCssVisitor_visitCssMediaRule_closure1.prototype = {
    call$1(node) {
      var t1;
      if (!type$.CssStyleRule_2._is(node))
        t1 = this.hasBeenMerged && type$.CssMediaRule_2._is(node);
      else
        t1 = true;
      return t1;
    },
    $signature: 7
  };
  A._ImportedCssVisitor_visitCssStyleRule_closure1.prototype = {
    call$1(node) {
      return type$.CssStyleRule_2._is(node);
    },
    $signature: 7
  };
  A._ImportedCssVisitor_visitCssSupportsRule_closure1.prototype = {
    call$1(node) {
      return type$.CssStyleRule_2._is(node);
    },
    $signature: 7
  };
  A._EvaluationContext1.prototype = {
    get$currentCallableSpan() {
      var callableNode = this._evaluate0$_visitor._evaluate0$_callableNode;
      if (callableNode != null)
        return callableNode.get$span(callableNode);
      throw A.wrapException(A.StateError$(string$.No_Sasc));
    },
    warn$2$deprecation(_, message, deprecation) {
      var t1 = this._evaluate0$_visitor,
        t2 = t1._evaluate0$_importSpan;
      if (t2 == null) {
        t2 = t1._evaluate0$_callableNode;
        t2 = t2 == null ? null : t2.get$span(t2);
      }
      t1._evaluate0$_warn$3$deprecation(message, t2 == null ? this._evaluate0$_defaultWarnNodeWithSpan.span : t2, deprecation);
    },
    $isEvaluationContext0: 1
  };
  A._ArgumentResults1.prototype = {};
  A._LoadedStylesheet1.prototype = {};
  A._NodeException.prototype = {};
  A.exceptionClass_closure.prototype = {
    call$0() {
      var jsClass = type$.JSClass._as(new self.Function("", "    return class Exception extends Error {\n      constructor(dartException, message) {\n        super(message);\n\n        // Define this as non-enumerable so that it doesn't show up when the\n        // exception hits the top level.\n        Object.defineProperty(this, '_dartException', {\n          value: dartException,\n          enumerable: false\n        });\n      }\n\n      toString() {\n        return this.message;\n      }\n    }\n  ").call$0());
      A.defineGetter(jsClass, "name", null, "sass.Exception");
      A.LinkedHashMap_LinkedHashMap$_literal(["sassMessage", new A.exceptionClass__closure(), "sassStack", new A.exceptionClass__closure0(), "span", new A.exceptionClass__closure1()], type$.String, type$.Function).forEach$1(0, A.JSClassExtension_get_defineGetter(jsClass));
      return jsClass;
    },
    $signature: 23
  };
  A.exceptionClass__closure.prototype = {
    call$1(exception) {
      return J.get$_dartException$x(exception)._span_exception$_message;
    },
    $signature: 219
  };
  A.exceptionClass__closure0.prototype = {
    call$1(exception) {
      return J.get$trace$z(J.get$_dartException$x(exception)).toString$0(0);
    },
    $signature: 219
  };
  A.exceptionClass__closure1.prototype = {
    call$1(exception) {
      var t1 = J.get$_dartException$x(exception),
        t2 = J.getInterceptor$z(t1);
      return A.SourceSpanException.prototype.get$span.call(t2, t1);
    },
    $signature: 407
  };
  A.SassException0.prototype = {
    get$trace(_) {
      return A.Trace$(A._setArrayType([A.frameForSpan0(A.SourceSpanException.prototype.get$span.call(this, this), "root stylesheet", null)], type$.JSArray_Frame), null);
    },
    get$span(_) {
      return A.SourceSpanException.prototype.get$span.call(this, this);
    },
    toString$1$color(_, color) {
      var t2, _i, frame, t3, _this = this,
        buffer = new A.StringBuffer(""),
        t1 = "" + ("Error: " + _this._span_exception$_message + "\n");
      buffer._contents = t1;
      buffer._contents = t1 + A.SourceSpanException.prototype.get$span.call(_this, _this).highlight$1$color(color);
      for (t1 = _this.get$trace(_this).toString$0(0).split("\n"), t2 = t1.length, _i = 0; _i < t2; ++_i) {
        frame = t1[_i];
        if (J.get$length$asx(frame) === 0)
          continue;
        t3 = buffer._contents += "\n";
        buffer._contents = t3 + ("  " + A.S(frame));
      }
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    toString$0($receiver) {
      return this.toString$1$color($receiver, null);
    }
  };
  A.MultiSpanSassException0.prototype = {
    toString$1$color(_, color) {
      var t1, t2, _i, frame, _this = this,
        useColor = color === true && true,
        buffer = new A.StringBuffer("Error: " + _this._span_exception$_message + "\n");
      A.NullableExtension_andThen0(A.Highlighter$multiple(A.SourceSpanException.prototype.get$span.call(_this, _this), _this.primaryLabel, _this.secondarySpans, useColor, null, null).highlight$0(), buffer.get$write(buffer));
      for (t1 = _this.get$trace(_this).toString$0(0).split("\n"), t2 = t1.length, _i = 0; _i < t2; ++_i) {
        frame = t1[_i];
        if (J.get$length$asx(frame) === 0)
          continue;
        buffer._contents += "\n";
        buffer._contents += "  " + A.S(frame);
      }
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    toString$0($receiver) {
      return this.toString$1$color($receiver, null);
    }
  };
  A.SassRuntimeException0.prototype = {
    get$trace(receiver) {
      return this.trace;
    }
  };
  A.MultiSpanSassRuntimeException0.prototype = {$isSassRuntimeException0: 1,
    get$trace(receiver) {
      return this.trace;
    }
  };
  A.SassFormatException0.prototype = {
    get$source() {
      return A.String_String$fromCharCodes(B.NativeUint32List_methods.sublist$2(A.SourceSpanException.prototype.get$span.call(this, this).file._decodedChars, 0, null), 0, null);
    },
    $isFormatException: 1,
    $isSourceSpanFormatException: 1
  };
  A.SassScriptException0.prototype = {
    toString$0(_) {
      return this.message + string$.x0a_BUG_;
    },
    get$message(receiver) {
      return this.message;
    }
  };
  A.MultiSpanSassScriptException0.prototype = {};
  A.Exports.prototype = {};
  A.LoggerNamespace.prototype = {};
  A.ExtendRule0.prototype = {
    accept$1$1(visitor) {
      return visitor.visitExtendRule$1(this);
    },
    accept$1(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0(_) {
      var t1 = this.selector.toString$0(0),
        t2 = this.isOptional ? " !optional" : "";
      return "@extend " + t1 + t2 + ";";
    },
    $isAstNode0: 1,
    $isStatement0: 1,
    get$span(receiver) {
      return this.span;
    }
  };
  A.Extension0.prototype = {
    toString$0(_) {
      var t1 = this.extender.toString$0(0),
        t2 = this.target.toString$0(0),
        t3 = this.isOptional ? " !optional" : "";
      return t1 + " {@extend " + t2 + t3 + "}";
    }
  };
  A.Extender0.prototype = {
    assertCompatibleMediaContext$1(mediaContext) {
      var expectedMediaContext,
        extension = this._extension$_extension;
      if (extension == null)
        return;
      expectedMediaContext = extension.mediaContext;
      if (expectedMediaContext == null)
        return;
      if (mediaContext != null && B.C_ListEquality.equals$2(0, expectedMediaContext, mediaContext))
        return;
      throw A.wrapException(A.SassException$0(string$.You_ma, extension.span));
    },
    toString$0(_) {
      return A.serializeSelector0(this.selector, true);
    }
  };
  A.ExtensionStore0.prototype = {
    get$isEmpty(_) {
      return this._extension_store$_extensions.__js_helper$_length === 0;
    },
    get$simpleSelectors() {
      return new A.MapKeySet(this._extension_store$_selectors, type$.MapKeySet_SimpleSelector_2);
    },
    extensionsWhereTarget$1($async$callback) {
      var $async$self = this;
      return A._makeSyncStarIterable(function() {
        var callback = $async$callback;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2, t3;
        return function $async$extensionsWhereTarget$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self._extension_store$_extensions, t1 = t1.get$entries(t1), t1 = t1.get$iterator(t1);
              case 2:
                // for condition
                if (!t1.moveNext$0()) {
                  // goto after for
                  $async$goto = 3;
                  break;
                }
                t2 = t1.get$current(t1);
                if (!callback.call$1(t2.key)) {
                  // goto for condition
                  $async$goto = 2;
                  break;
                }
                t2 = J.get$values$z(t2.value), t2 = t2.get$iterator(t2);
              case 4:
                // for condition
                if (!t2.moveNext$0()) {
                  // goto after for
                  $async$goto = 5;
                  break;
                }
                t3 = t2.get$current(t2);
                $async$goto = t3 instanceof A.MergedExtension0 ? 6 : 8;
                break;
              case 6:
                // then
                t3 = t3.unmerge$0();
                $async$goto = 9;
                return A._IterationMarker_yieldStar(new A.WhereIterable(t3, new A.ExtensionStore_extensionsWhereTarget_closure0(), t3.$ti._eval$1("WhereIterable<Iterable.E>")));
              case 9:
                // after yield
                // goto join
                $async$goto = 7;
                break;
              case 8:
                // else
                $async$goto = !t3.isOptional ? 10 : 11;
                break;
              case 10:
                // then
                $async$goto = 12;
                return t3;
              case 12:
                // after yield
              case 11:
                // join
              case 7:
                // join
                // goto for condition
                $async$goto = 4;
                break;
              case 5:
                // after for
                // goto for condition
                $async$goto = 2;
                break;
              case 3:
                // after for
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.Extension_2);
    },
    addSelector$3(selector, selectorSpan, mediaContext) {
      var originalSelector, error, stackTrace, t1, t2, t3, _i, exception, t4, modifiableSelector, _this = this;
      selector = selector;
      originalSelector = selector;
      if (!originalSelector.get$isInvisible())
        for (t1 = originalSelector.components, t2 = t1.length, t3 = _this._extension_store$_originals, _i = 0; _i < t2; ++_i)
          t3.add$1(0, t1[_i]);
      t1 = _this._extension_store$_extensions;
      if (t1.__js_helper$_length !== 0)
        try {
          selector = _this._extension_store$_extendList$4(originalSelector, selectorSpan, t1, mediaContext);
        } catch (exception) {
          t1 = A.unwrapException(exception);
          if (t1 instanceof A.SassException0) {
            error = t1;
            stackTrace = A.getTraceFromException(exception);
            t1 = error;
            t2 = J.getInterceptor$z(t1);
            t3 = error;
            t4 = J.getInterceptor$z(t3);
            A.throwWithTrace0(new A.SassException0("From " + A.SourceSpanException.prototype.get$span.call(t2, t1).message$1(0, "") + "\n" + error._span_exception$_message, A.SourceSpanException.prototype.get$span.call(t4, t3)), stackTrace);
          } else
            throw exception;
        }
      modifiableSelector = new A.ModifiableCssValue0(selector, selectorSpan, type$.ModifiableCssValue_SelectorList_2);
      if (mediaContext != null)
        _this._extension_store$_mediaContexts.$indexSet(0, modifiableSelector, mediaContext);
      _this._extension_store$_registerSelector$2(selector, modifiableSelector);
      return modifiableSelector;
    },
    _extension_store$_registerSelector$2(list, selector) {
      var t1, t2, t3, _i, t4, t5, _i0, component, t6, t7, _i1, simple, selectorInPseudo;
      for (t1 = list.components, t2 = t1.length, t3 = this._extension_store$_selectors, _i = 0; _i < t2; ++_i)
        for (t4 = t1[_i].components, t5 = t4.length, _i0 = 0; _i0 < t5; ++_i0) {
          component = t4[_i0];
          if (!(component instanceof A.CompoundSelector0))
            continue;
          for (t6 = component.components, t7 = t6.length, _i1 = 0; _i1 < t7; ++_i1) {
            simple = t6[_i1];
            J.add$1$ax(t3.putIfAbsent$2(simple, new A.ExtensionStore__registerSelector_closure0()), selector);
            if (!(simple instanceof A.PseudoSelector0))
              continue;
            selectorInPseudo = simple.selector;
            if (selectorInPseudo != null)
              this._extension_store$_registerSelector$2(selectorInPseudo, selector);
          }
        }
    },
    addExtension$4(extender, target, extend, mediaContext) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, newExtensions, _i, complex, t12, extension, existingExtension, t13, newExtensionsByTarget, additionalExtensions, _this = this,
        selectors = _this._extension_store$_selectors.$index(0, target),
        t1 = _this._extension_store$_extensionsByExtender,
        existingExtensions = t1.$index(0, target),
        sources = _this._extension_store$_extensions.putIfAbsent$2(target, new A.ExtensionStore_addExtension_closure2());
      for (t2 = extender.value.components, t3 = t2.length, t4 = selectors == null, t5 = _this._extension_store$_sourceSpecificity, t6 = extender.span, t7 = extend.span, t8 = extend.isOptional, t9 = existingExtensions != null, t10 = type$.ComplexSelector_2, t11 = type$.Extension_2, newExtensions = null, _i = 0; _i < t3; ++_i) {
        complex = t2[_i];
        if (complex._complex0$_maxSpecificity == null)
          complex._complex0$_computeSpecificity$0();
        complex._complex0$_maxSpecificity.toString;
        t12 = new A.Extender0(complex, false, t6);
        extension = t12._extension$_extension = new A.Extension0(t12, target, mediaContext, t8, t7);
        existingExtension = sources.$index(0, complex);
        if (existingExtension != null) {
          sources.$indexSet(0, complex, A.MergedExtension_merge0(existingExtension, extension));
          continue;
        }
        sources.$indexSet(0, complex, extension);
        for (t12 = new A._SyncStarIterator(_this._extension_store$_simpleSelectors$1(complex)._outerHelper()); t12.moveNext$0();) {
          t13 = t12.get$current(t12);
          J.add$1$ax(t1.putIfAbsent$2(t13, new A.ExtensionStore_addExtension_closure3()), extension);
          t5.putIfAbsent$2(t13, new A.ExtensionStore_addExtension_closure4(complex));
        }
        if (!t4 || t9) {
          if (newExtensions == null)
            newExtensions = A.LinkedHashMap_LinkedHashMap$_empty(t10, t11);
          newExtensions.$indexSet(0, complex, extension);
        }
      }
      if (newExtensions == null)
        return;
      t1 = type$.SimpleSelector_2;
      newExtensionsByTarget = A.LinkedHashMap_LinkedHashMap$_literal([target, newExtensions], t1, type$.Map_ComplexSelector_Extension_2);
      if (t9) {
        additionalExtensions = _this._extension_store$_extendExistingExtensions$2(existingExtensions, newExtensionsByTarget);
        if (additionalExtensions != null)
          A.mapAddAll20(newExtensionsByTarget, additionalExtensions, t1, t10, t11);
      }
      if (!t4)
        _this._extension_store$_extendExistingSelectors$2(selectors, newExtensionsByTarget);
    },
    _extension_store$_simpleSelectors$1(complex) {
      return this._simpleSelectors$body$ExtensionStore0(complex);
    },
    _simpleSelectors$body$ExtensionStore0($async$complex) {
      var $async$self = this;
      return A._makeSyncStarIterable(function() {
        var complex = $async$complex;
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2, _i, component, t3, t4, _i0, simple, selector, t5, t6, _i1;
        return function $async$_extension_store$_simpleSelectors$1($async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = complex.components, t2 = t1.length, _i = 0;
              case 2:
                // for condition
                if (!(_i < t2)) {
                  // goto after for
                  $async$goto = 4;
                  break;
                }
                component = t1[_i];
                $async$goto = component instanceof A.CompoundSelector0 ? 5 : 6;
                break;
              case 5:
                // then
                t3 = component.components, t4 = t3.length, _i0 = 0;
              case 7:
                // for condition
                if (!(_i0 < t4)) {
                  // goto after for
                  $async$goto = 9;
                  break;
                }
                simple = t3[_i0];
                $async$goto = 10;
                return simple;
              case 10:
                // after yield
                if (!(simple instanceof A.PseudoSelector0)) {
                  // goto for update
                  $async$goto = 8;
                  break;
                }
                selector = simple.selector;
                if (selector == null) {
                  // goto for update
                  $async$goto = 8;
                  break;
                }
                t5 = selector.components, t6 = t5.length, _i1 = 0;
              case 11:
                // for condition
                if (!(_i1 < t6)) {
                  // goto after for
                  $async$goto = 13;
                  break;
                }
                $async$goto = 14;
                return A._IterationMarker_yieldStar($async$self._extension_store$_simpleSelectors$1(t5[_i1]));
              case 14:
                // after yield
              case 12:
                // for update
                ++_i1;
                // goto for condition
                $async$goto = 11;
                break;
              case 13:
                // after for
              case 8:
                // for update
                ++_i0;
                // goto for condition
                $async$goto = 7;
                break;
              case 9:
                // after for
              case 6:
                // join
              case 3:
                // for update
                ++_i;
                // goto for condition
                $async$goto = 2;
                break;
              case 4:
                // after for
                // implicit return
                return A._IterationMarker_endOfIteration();
              case 1:
                // rethrow
                return A._IterationMarker_uncaughtError($async$currentError);
            }
        };
      }, type$.SimpleSelector_2);
    },
    _extension_store$_extendExistingExtensions$2(extensions, newExtensions) {
      var extension, selectors, error, stackTrace, t1, t2, t3, t4, t5, t6, additionalExtensions, _i, t7, exception, t8, t9, containsExtension, first, _i0, complex, t10, t11, t12, t13, t14, withExtender, existingExtension, _i1, component, _i2;
      for (t1 = J.toList$0$ax(extensions), t2 = t1.length, t3 = this._extension_store$_extensionsByExtender, t4 = type$.SimpleSelector_2, t5 = type$.Map_ComplexSelector_Extension_2, t6 = this._extension_store$_extensions, additionalExtensions = null, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        extension = t1[_i];
        t7 = t6.$index(0, extension.target);
        t7.toString;
        selectors = null;
        try {
          selectors = this._extension_store$_extendComplex$4(extension.extender.selector, extension.extender.span, newExtensions, extension.mediaContext);
          if (selectors == null)
            continue;
        } catch (exception) {
          t8 = A.unwrapException(exception);
          if (t8 instanceof A.SassException0) {
            error = t8;
            stackTrace = A.getTraceFromException(exception);
            t8 = error;
            t9 = J.getInterceptor$z(t8);
            A.throwWithTrace0(new A.SassException0("From " + extension.extender.span.message$1(0, "") + "\n" + error._span_exception$_message, A.SourceSpanException.prototype.get$span.call(t9, t8)), stackTrace);
          } else
            throw exception;
        }
        t8 = J.get$first$ax(selectors);
        t9 = extension.extender;
        containsExtension = B.C_ListEquality.equals$2(0, t8.components, t9.selector.components);
        for (t8 = selectors, t9 = t8.length, first = true, _i0 = 0; _i0 < t8.length; t8.length === t9 || (0, A.throwConcurrentModificationError)(t8), ++_i0) {
          complex = t8[_i0];
          if (containsExtension && first) {
            first = false;
            continue;
          }
          t10 = extension;
          t11 = t10.extender;
          t12 = t10.target;
          t13 = t10.span;
          t14 = t10.mediaContext;
          t10 = t10.isOptional;
          if (complex._complex0$_maxSpecificity == null)
            complex._complex0$_computeSpecificity$0();
          complex._complex0$_maxSpecificity.toString;
          t11 = new A.Extender0(complex, false, t11.span);
          withExtender = t11._extension$_extension = new A.Extension0(t11, t12, t14, t10, t13);
          existingExtension = t7.$index(0, complex);
          if (existingExtension != null)
            t7.$indexSet(0, complex, A.MergedExtension_merge0(existingExtension, withExtender));
          else {
            t7.$indexSet(0, complex, withExtender);
            for (t10 = complex.components, t11 = t10.length, _i1 = 0; _i1 < t11; ++_i1) {
              component = t10[_i1];
              if (component instanceof A.CompoundSelector0)
                for (t12 = component.components, t13 = t12.length, _i2 = 0; _i2 < t13; ++_i2)
                  J.add$1$ax(t3.putIfAbsent$2(t12[_i2], new A.ExtensionStore__extendExistingExtensions_closure1()), withExtender);
            }
            if (newExtensions.containsKey$1(extension.target)) {
              if (additionalExtensions == null)
                additionalExtensions = A.LinkedHashMap_LinkedHashMap$_empty(t4, t5);
              additionalExtensions.putIfAbsent$2(extension.target, new A.ExtensionStore__extendExistingExtensions_closure2()).$indexSet(0, complex, withExtender);
            }
          }
        }
        if (!containsExtension)
          t7.remove$1(0, extension.extender);
      }
      return additionalExtensions;
    },
    _extension_store$_extendExistingSelectors$2(selectors, newExtensions) {
      var selector, error, stackTrace, t1, t2, oldValue, exception, t3, t4;
      for (t1 = selectors.get$iterator(selectors), t2 = this._extension_store$_mediaContexts; t1.moveNext$0();) {
        selector = t1.get$current(t1);
        oldValue = selector.value;
        try {
          selector.value = this._extension_store$_extendList$4(selector.value, selector.span, newExtensions, t2.$index(0, selector));
        } catch (exception) {
          t3 = A.unwrapException(exception);
          if (t3 instanceof A.SassException0) {
            error = t3;
            stackTrace = A.getTraceFromException(exception);
            t3 = error;
            t4 = J.getInterceptor$z(t3);
            A.throwWithTrace0(new A.SassException0("From " + selector.span.message$1(0, "") + "\n" + error._span_exception$_message, A.SourceSpanException.prototype.get$span.call(t4, t3)), stackTrace);
          } else
            throw exception;
        }
        if (oldValue === selector.value)
          continue;
        this._extension_store$_registerSelector$2(selector.value, selector);
      }
    },
    addExtensions$1(extensionStores) {
      var t1, t2, t3, _box_0 = {};
      _box_0.newExtensions = _box_0.selectorsToExtend = _box_0.extensionsToExtend = null;
      for (t1 = J.get$iterator$ax(extensionStores), t2 = this._extension_store$_sourceSpecificity; t1.moveNext$0();) {
        t3 = t1.get$current(t1);
        if (t3.get$isEmpty(t3))
          continue;
        t2.addAll$1(0, t3.get$_extension_store$_sourceSpecificity());
        t3.get$_extension_store$_extensions().forEach$1(0, new A.ExtensionStore_addExtensions_closure1(_box_0, this));
      }
      A.NullableExtension_andThen0(_box_0.newExtensions, new A.ExtensionStore_addExtensions_closure2(_box_0, this));
    },
    _extension_store$_extendList$4(list, listSpan, extensions, mediaQueryContext) {
      var t1, t2, t3, extended, i, complex, result, t4;
      for (t1 = list.components, t2 = t1.length, t3 = type$.JSArray_ComplexSelector_2, extended = null, i = 0; i < t2; ++i) {
        complex = t1[i];
        result = this._extension_store$_extendComplex$4(complex, listSpan, extensions, mediaQueryContext);
        if (result == null) {
          if (extended != null)
            extended.push(complex);
        } else {
          if (extended == null)
            if (i === 0)
              extended = A._setArrayType([], t3);
            else {
              t4 = B.JSArray_methods.sublist$2(t1, 0, i);
              extended = A._setArrayType(t4.slice(0), A._arrayInstanceType(t4));
            }
          B.JSArray_methods.addAll$1(extended, result);
        }
      }
      if (extended == null)
        return list;
      t1 = this._extension_store$_originals;
      return A.SelectorList$0(this._extension_store$_trim$2(extended, t1.get$contains(t1)));
    },
    _extension_store$_extendList$3(list, listSpan, extensions) {
      return this._extension_store$_extendList$4(list, listSpan, extensions, null);
    },
    _extension_store$_extendComplex$4(complex, complexSpan, extensions, mediaQueryContext) {
      var t1, t2, t3, t4, t5, extendedNotExpanded, i, component, extended, result, t6, t7, t8, _null = null,
        _s28_ = "components may not be empty.",
        _box_0 = {},
        isOriginal = this._extension_store$_originals.contains$1(0, complex);
      for (t1 = complex.components, t2 = t1.length, t3 = type$.JSArray_ComplexSelector_2, t4 = type$.JSArray_ComplexSelectorComponent_2, t5 = type$.ComplexSelectorComponent_2, extendedNotExpanded = _null, i = 0; i < t2; ++i) {
        component = t1[i];
        if (component instanceof A.CompoundSelector0) {
          extended = this._extension_store$_extendCompound$5$inOriginal(component, complexSpan, extensions, mediaQueryContext, isOriginal);
          if (extended == null) {
            if (extendedNotExpanded != null) {
              result = A.List_List$from(A._setArrayType([component], t4), false, t5);
              result.fixed$length = Array;
              result.immutable$list = Array;
              t6 = result;
              if (t6.length === 0)
                A.throwExpression(A.ArgumentError$(_s28_, _null));
              B.JSArray_methods.add$1(extendedNotExpanded, A._setArrayType([new A.ComplexSelector0(t6, false)], t3));
            }
          } else {
            if (extendedNotExpanded == null) {
              t6 = A._arrayInstanceType(t1);
              t7 = t6._eval$1("SubListIterable<1>");
              t8 = new A.SubListIterable(t1, 0, i, t7);
              t8.SubListIterable$3(t1, 0, i, t6._precomputed1);
              t7 = t7._eval$1("MappedListIterable<ListIterable.E,List<ComplexSelector0>>");
              extendedNotExpanded = A.List_List$of(new A.MappedListIterable(t8, new A.ExtensionStore__extendComplex_closure1(complex), t7), true, t7._eval$1("ListIterable.E"));
            }
            B.JSArray_methods.add$1(extendedNotExpanded, extended);
          }
        } else if (extendedNotExpanded != null) {
          result = A.List_List$from(A._setArrayType([component], t4), false, t5);
          result.fixed$length = Array;
          result.immutable$list = Array;
          t6 = result;
          if (t6.length === 0)
            A.throwExpression(A.ArgumentError$(_s28_, _null));
          B.JSArray_methods.add$1(extendedNotExpanded, A._setArrayType([new A.ComplexSelector0(t6, false)], t3));
        }
      }
      if (extendedNotExpanded == null)
        return _null;
      _box_0.first = true;
      t1 = type$.ComplexSelector_2;
      t1 = J.expand$1$1$ax(A.paths0(extendedNotExpanded, t1), new A.ExtensionStore__extendComplex_closure2(_box_0, this, complex), t1);
      return A.List_List$of(t1, true, t1.$ti._eval$1("Iterable.E"));
    },
    _extension_store$_extendCompound$5$inOriginal(compound, compoundSpan, extensions, mediaQueryContext, inOriginal) {
      var t2, t3, t4, t5, t6, t7, t8, t9, t10, options, i, simple, extended, result, t11, t12, isOriginal, _this = this, _null = null,
        _s28_ = "components may not be empty.",
        _box_1 = {},
        t1 = _this._extension_store$_mode,
        targetsUsed = t1 === B.ExtendMode_normal0 || extensions.get$length(extensions) < 2 ? _null : A.LinkedHashSet_LinkedHashSet$_empty(type$.SimpleSelector_2);
      for (t2 = compound.components, t3 = t2.length, t4 = type$.JSArray_List_Extender_2, t5 = type$.JSArray_Extender_2, t6 = type$.JSArray_ComplexSelectorComponent_2, t7 = type$.ComplexSelectorComponent_2, t8 = type$.SimpleSelector_2, t9 = _this._extension_store$_sourceSpecificity, t10 = type$.JSArray_SimpleSelector_2, options = _null, i = 0; i < t3; ++i) {
        simple = t2[i];
        extended = _this._extension_store$_extendSimple$5(simple, compoundSpan, extensions, mediaQueryContext, targetsUsed);
        if (extended == null) {
          if (options != null) {
            result = A.List_List$from(A._setArrayType([simple], t10), false, t8);
            result.fixed$length = Array;
            result.immutable$list = Array;
            t11 = result;
            if (t11.length === 0)
              A.throwExpression(A.ArgumentError$(_s28_, _null));
            result = A.List_List$from(A._setArrayType([new A.CompoundSelector0(t11)], t6), false, t7);
            result.fixed$length = Array;
            result.immutable$list = Array;
            t11 = result;
            if (t11.length === 0)
              A.throwExpression(A.ArgumentError$(_s28_, _null));
            t9.$index(0, simple);
            options.push(A._setArrayType([new A.Extender0(new A.ComplexSelector0(t11, false), true, compoundSpan)], t5));
          }
        } else {
          if (options == null) {
            options = A._setArrayType([], t4);
            if (i !== 0) {
              t11 = A._arrayInstanceType(t2);
              t12 = new A.SubListIterable(t2, 0, i, t11._eval$1("SubListIterable<1>"));
              t12.SubListIterable$3(t2, 0, i, t11._precomputed1);
              result = A.List_List$from(t12, false, t8);
              result.fixed$length = Array;
              result.immutable$list = Array;
              t12 = result;
              compound = new A.CompoundSelector0(t12);
              if (t12.length === 0)
                A.throwExpression(A.ArgumentError$(_s28_, _null));
              result = A.List_List$from(A._setArrayType([compound], t6), false, t7);
              result.fixed$length = Array;
              result.immutable$list = Array;
              t11 = result;
              if (t11.length === 0)
                A.throwExpression(A.ArgumentError$(_s28_, _null));
              _this._extension_store$_sourceSpecificityFor$1(compound);
              options.push(A._setArrayType([new A.Extender0(new A.ComplexSelector0(t11, false), true, compoundSpan)], t5));
            }
          }
          B.JSArray_methods.addAll$1(options, extended);
        }
      }
      if (options == null)
        return _null;
      if (targetsUsed != null && targetsUsed._collection$_length !== extensions.get$length(extensions))
        return _null;
      if (options.length === 1)
        return J.map$1$1$ax(B.JSArray_methods.get$first(options), new A.ExtensionStore__extendCompound_closure4(mediaQueryContext), type$.ComplexSelector_2).toList$0(0);
      t1 = _box_1.first = t1 !== B.ExtendMode_replace0;
      t2 = A.IterableNullableExtension_whereNotNull(J.map$1$1$ax(A.paths0(options, type$.Extender_2), new A.ExtensionStore__extendCompound_closure5(_box_1, mediaQueryContext), type$.nullable_List_ComplexSelector_2), type$.List_ComplexSelector_2);
      t3 = t2.$ti._eval$1("ExpandIterable<Iterable.E,ComplexSelector0>");
      result = A.List_List$of(new A.ExpandIterable(t2, new A.ExtensionStore__extendCompound_closure6(), t3), true, t3._eval$1("Iterable.E"));
      isOriginal = new A.ExtensionStore__extendCompound_closure7();
      return _this._extension_store$_trim$2(result, inOriginal && t1 ? new A.ExtensionStore__extendCompound_closure8(B.JSArray_methods.get$first(result)) : isOriginal);
    },
    _extension_store$_extendSimple$5(simple, simpleSpan, extensions, mediaQueryContext, targetsUsed) {
      var extended,
        t1 = new A.ExtensionStore__extendSimple_withoutPseudo0(this, extensions, targetsUsed, simpleSpan);
      if (simple instanceof A.PseudoSelector0 && simple.selector != null) {
        extended = this._extension_store$_extendPseudo$4(simple, simpleSpan, extensions, mediaQueryContext);
        if (extended != null)
          return new A.MappedListIterable(extended, new A.ExtensionStore__extendSimple_closure1(this, t1, simpleSpan), A._arrayInstanceType(extended)._eval$1("MappedListIterable<1,List<Extender0>>"));
      }
      return A.NullableExtension_andThen0(t1.call$1(simple), new A.ExtensionStore__extendSimple_closure2());
    },
    _extension_store$_extenderForSimple$2(simple, span) {
      var t1 = A.ComplexSelector$0(A._setArrayType([A.CompoundSelector$0(A._setArrayType([simple], type$.JSArray_SimpleSelector_2))], type$.JSArray_ComplexSelectorComponent_2), false);
      this._extension_store$_sourceSpecificity.$index(0, simple);
      return new A.Extender0(t1, true, span);
    },
    _extension_store$_extendPseudo$4(pseudo, pseudoSpan, extensions, mediaQueryContext) {
      var extended, complexes, t1, result,
        selector = pseudo.selector;
      if (selector == null)
        throw A.wrapException(A.ArgumentError$("Selector " + pseudo.toString$0(0) + " must have a selector argument.", null));
      extended = this._extension_store$_extendList$4(selector, pseudoSpan, extensions, mediaQueryContext);
      if (extended === selector)
        return null;
      complexes = extended.components;
      t1 = pseudo.normalizedName === "not";
      if (t1 && !B.JSArray_methods.any$1(selector.components, new A.ExtensionStore__extendPseudo_closure4()) && B.JSArray_methods.any$1(complexes, new A.ExtensionStore__extendPseudo_closure5()))
        complexes = new A.WhereIterable(complexes, new A.ExtensionStore__extendPseudo_closure6(), A._arrayInstanceType(complexes)._eval$1("WhereIterable<1>"));
      complexes = J.expand$1$1$ax(complexes, new A.ExtensionStore__extendPseudo_closure7(pseudo), type$.ComplexSelector_2);
      if (t1 && selector.components.length === 1) {
        t1 = A.MappedIterable_MappedIterable(complexes, new A.ExtensionStore__extendPseudo_closure8(pseudo), complexes.$ti._eval$1("Iterable.E"), type$.PseudoSelector_2);
        result = A.List_List$of(t1, true, A._instanceType(t1)._eval$1("Iterable.E"));
        return result.length === 0 ? null : result;
      } else
        return A._setArrayType([A.PseudoSelector$0(pseudo.name, pseudo.argument, !pseudo.isClass, A.SelectorList$0(complexes))], type$.JSArray_PseudoSelector_2);
    },
    _extension_store$_trim$2(selectors, isOriginal) {
      var result, i, t1, t2, numOriginals, _box_0, complex1, j, t3, t4, _i, component;
      if (selectors.length > 100)
        return selectors;
      result = A.QueueList$(null, type$.ComplexSelector_2);
      $label0$0:
        for (i = selectors.length - 1, t1 = A._arrayInstanceType(selectors), t2 = t1._precomputed1, t1 = t1._eval$1("SubListIterable<1>"), numOriginals = 0; i >= 0; --i) {
          _box_0 = {};
          complex1 = selectors[i];
          if (isOriginal.call$1(complex1)) {
            for (j = 0; j < numOriginals; ++j)
              if (J.$eq$(result.$index(0, j), complex1)) {
                A.rotateSlice0(result, 0, j + 1);
                continue $label0$0;
              }
            ++numOriginals;
            result.addFirst$1(complex1);
            continue $label0$0;
          }
          _box_0.maxSpecificity = 0;
          for (t3 = complex1.components, t4 = t3.length, _i = 0; _i < t4; ++_i) {
            component = t3[_i];
            if (component instanceof A.CompoundSelector0)
              _box_0.maxSpecificity = Math.max(_box_0.maxSpecificity, this._extension_store$_sourceSpecificityFor$1(component));
          }
          if (result.any$1(result, new A.ExtensionStore__trim_closure1(_box_0, complex1)))
            continue $label0$0;
          t3 = new A.SubListIterable(selectors, 0, i, t1);
          t3.SubListIterable$3(selectors, 0, i, t2);
          if (t3.any$1(0, new A.ExtensionStore__trim_closure2(_box_0, complex1)))
            continue $label0$0;
          result.addFirst$1(complex1);
        }
      return result;
    },
    _extension_store$_sourceSpecificityFor$1(compound) {
      var t1, t2, t3, specificity, _i, t4;
      for (t1 = compound.components, t2 = t1.length, t3 = this._extension_store$_sourceSpecificity, specificity = 0, _i = 0; _i < t2; ++_i) {
        t4 = t3.$index(0, t1[_i]);
        specificity = Math.max(specificity, A.checkNum(t4 == null ? 0 : t4));
      }
      return specificity;
    },
    clone$0() {
      var t3, t4, _this = this,
        t1 = type$.SimpleSelector_2,
        newSelectors = A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.Set_ModifiableCssValue_SelectorList_2),
        t2 = type$.ModifiableCssValue_SelectorList_2,
        newMediaContexts = A.LinkedHashMap_LinkedHashMap$_empty(t2, type$.List_CssMediaQuery_2),
        oldToNewSelectors = A.LinkedHashMap_LinkedHashMap$_empty(type$.CssValue_SelectorList_2, t2);
      _this._extension_store$_selectors.forEach$1(0, new A.ExtensionStore_clone_closure0(_this, newSelectors, oldToNewSelectors, newMediaContexts));
      t2 = type$.Extension_2;
      t3 = A.copyMapOfMap0(_this._extension_store$_extensions, t1, type$.ComplexSelector_2, t2);
      t2 = A.copyMapOfList0(_this._extension_store$_extensionsByExtender, t1, t2);
      t1 = new A._LinkedIdentityHashMap(type$._LinkedIdentityHashMap_SimpleSelector_int_2);
      t1.addAll$1(0, _this._extension_store$_sourceSpecificity);
      t4 = new A._LinkedIdentityHashSet(type$._LinkedIdentityHashSet_ComplexSelector_2);
      t4.addAll$1(0, _this._extension_store$_originals);
      return new A.Tuple2(new A.ExtensionStore0(newSelectors, t3, t2, newMediaContexts, t1, t4, B.ExtendMode_normal0), oldToNewSelectors, type$.Tuple2_of_ExtensionStore_and_Map_of_CssValue_SelectorList_and_ModifiableCssValue_SelectorList_2);
    },
    get$_extension_store$_extensions() {
      return this._extension_store$_extensions;
    },
    get$_extension_store$_sourceSpecificity() {
      return this._extension_store$_sourceSpecificity;
    }
  };
  A.ExtensionStore_extensionsWhereTarget_closure0.prototype = {
    call$1(extension) {
      return !extension.isOptional;
    },
    $signature: 408
  };
  A.ExtensionStore__registerSelector_closure0.prototype = {
    call$0() {
      return A.LinkedHashSet_LinkedHashSet$_empty(type$.ModifiableCssValue_SelectorList_2);
    },
    $signature: 409
  };
  A.ExtensionStore_addExtension_closure2.prototype = {
    call$0() {
      return A.LinkedHashMap_LinkedHashMap$_empty(type$.ComplexSelector_2, type$.Extension_2);
    },
    $signature: 101
  };
  A.ExtensionStore_addExtension_closure3.prototype = {
    call$0() {
      return A._setArrayType([], type$.JSArray_Extension_2);
    },
    $signature: 221
  };
  A.ExtensionStore_addExtension_closure4.prototype = {
    call$0() {
      return this.complex.get$maxSpecificity();
    },
    $signature: 12
  };
  A.ExtensionStore__extendExistingExtensions_closure1.prototype = {
    call$0() {
      return A._setArrayType([], type$.JSArray_Extension_2);
    },
    $signature: 221
  };
  A.ExtensionStore__extendExistingExtensions_closure2.prototype = {
    call$0() {
      return A.LinkedHashMap_LinkedHashMap$_empty(type$.ComplexSelector_2, type$.Extension_2);
    },
    $signature: 101
  };
  A.ExtensionStore_addExtensions_closure1.prototype = {
    call$2(target, newSources) {
      var first, t1, extensionsForTarget, t2, t3, t4, selectorsForTarget, t5, existingSources, _this = this;
      if (target instanceof A.PlaceholderSelector0) {
        first = B.JSString_methods._codeUnitAt$1(target.name, 0);
        t1 = first === 45 || first === 95;
      } else
        t1 = false;
      if (t1)
        return;
      t1 = _this.$this;
      extensionsForTarget = t1._extension_store$_extensionsByExtender.$index(0, target);
      t2 = extensionsForTarget == null;
      if (!t2) {
        t3 = _this._box_0;
        t4 = t3.extensionsToExtend;
        B.JSArray_methods.addAll$1(t4 == null ? t3.extensionsToExtend = A._setArrayType([], type$.JSArray_Extension_2) : t4, extensionsForTarget);
      }
      selectorsForTarget = t1._extension_store$_selectors.$index(0, target);
      t3 = selectorsForTarget != null;
      if (t3) {
        t4 = _this._box_0;
        t5 = t4.selectorsToExtend;
        (t5 == null ? t4.selectorsToExtend = A.LinkedHashSet_LinkedHashSet$_empty(type$.ModifiableCssValue_SelectorList_2) : t5).addAll$1(0, selectorsForTarget);
      }
      t1 = t1._extension_store$_extensions;
      existingSources = t1.$index(0, target);
      if (existingSources == null) {
        t4 = type$.ComplexSelector_2;
        t5 = type$.Extension_2;
        t1.$indexSet(0, target, A.LinkedHashMap_LinkedHashMap$of(newSources, t4, t5));
        if (!t2 || t3) {
          t1 = _this._box_0;
          t2 = t1.newExtensions;
          t1 = t2 == null ? t1.newExtensions = A.LinkedHashMap_LinkedHashMap$_empty(type$.SimpleSelector_2, type$.Map_ComplexSelector_Extension_2) : t2;
          t1.$indexSet(0, target, A.LinkedHashMap_LinkedHashMap$of(newSources, t4, t5));
        }
      } else
        newSources.forEach$1(0, new A.ExtensionStore_addExtensions__closure4(_this._box_0, existingSources, extensionsForTarget, selectorsForTarget, target));
    },
    $signature: 412
  };
  A.ExtensionStore_addExtensions__closure4.prototype = {
    call$2(extender, extension) {
      var t2, _this = this,
        t1 = _this.existingSources;
      if (t1.containsKey$1(extender)) {
        t2 = t1.$index(0, extender);
        t2.toString;
        extension = A.MergedExtension_merge0(t2, extension);
        t1.$indexSet(0, extender, extension);
      } else
        t1.$indexSet(0, extender, extension);
      if (_this.extensionsForTarget != null || _this.selectorsForTarget != null) {
        t1 = _this._box_0;
        t2 = t1.newExtensions;
        t1 = t2 == null ? t1.newExtensions = A.LinkedHashMap_LinkedHashMap$_empty(type$.SimpleSelector_2, type$.Map_ComplexSelector_Extension_2) : t2;
        J.$indexSet$ax(t1.putIfAbsent$2(_this.target, new A.ExtensionStore_addExtensions___closure0()), extender, extension);
      }
    },
    $signature: 413
  };
  A.ExtensionStore_addExtensions___closure0.prototype = {
    call$0() {
      return A.LinkedHashMap_LinkedHashMap$_empty(type$.ComplexSelector_2, type$.Extension_2);
    },
    $signature: 101
  };
  A.ExtensionStore_addExtensions_closure2.prototype = {
    call$1(newExtensions) {
      var t1 = this._box_0,
        t2 = this.$this;
      A.NullableExtension_andThen0(t1.extensionsToExtend, new A.ExtensionStore_addExtensions__closure2(t2, newExtensions));
      A.NullableExtension_andThen0(t1.selectorsToExtend, new A.ExtensionStore_addExtensions__closure3(t2, newExtensions));
    },
    $signature: 414
  };
  A.ExtensionStore_addExtensions__closure2.prototype = {
    call$1(extensionsToExtend) {
      return this.$this._extension_store$_extendExistingExtensions$2(extensionsToExtend, this.newExtensions);
    },
    $signature: 415
  };
  A.ExtensionStore_addExtensions__closure3.prototype = {
    call$1(selectorsToExtend) {
      return this.$this._extension_store$_extendExistingSelectors$2(selectorsToExtend, this.newExtensions);
    },
    $signature: 416
  };
  A.ExtensionStore__extendComplex_closure1.prototype = {
    call$1(component) {
      return A._setArrayType([A.ComplexSelector$0(A._setArrayType([component], type$.JSArray_ComplexSelectorComponent_2), this.complex.lineBreak)], type$.JSArray_ComplexSelector_2);
    },
    $signature: 417
  };
  A.ExtensionStore__extendComplex_closure2.prototype = {
    call$1(path) {
      var t1 = A.weave0(J.map$1$1$ax(path, new A.ExtensionStore__extendComplex__closure1(), type$.List_ComplexSelectorComponent_2).toList$0(0));
      return new A.MappedListIterable(t1, new A.ExtensionStore__extendComplex__closure2(this._box_0, this.$this, this.complex, path), A._arrayInstanceType(t1)._eval$1("MappedListIterable<1,ComplexSelector0>"));
    },
    $signature: 418
  };
  A.ExtensionStore__extendComplex__closure1.prototype = {
    call$1(complex) {
      return complex.components;
    },
    $signature: 419
  };
  A.ExtensionStore__extendComplex__closure2.prototype = {
    call$1(components) {
      var _this = this,
        t1 = _this.complex,
        outputComplex = A.ComplexSelector$0(components, t1.lineBreak || J.any$1$ax(_this.path, new A.ExtensionStore__extendComplex___closure0())),
        t2 = _this._box_0;
      if (t2.first && _this.$this._extension_store$_originals.contains$1(0, t1))
        _this.$this._extension_store$_originals.add$1(0, outputComplex);
      t2.first = false;
      return outputComplex;
    },
    $signature: 72
  };
  A.ExtensionStore__extendComplex___closure0.prototype = {
    call$1(inputComplex) {
      return inputComplex.lineBreak;
    },
    $signature: 20
  };
  A.ExtensionStore__extendCompound_closure4.prototype = {
    call$1(extender) {
      extender.assertCompatibleMediaContext$1(this.mediaQueryContext);
      return extender.selector;
    },
    $signature: 422
  };
  A.ExtensionStore__extendCompound_closure5.prototype = {
    call$1(path) {
      var complexes, toUnify, t2, t3, originals, t4, _box_0 = {},
        t1 = this._box_1;
      if (t1.first) {
        t1.first = false;
        complexes = A._setArrayType([A._setArrayType([A.CompoundSelector$0(J.expand$1$1$ax(path, new A.ExtensionStore__extendCompound__closure1(), type$.SimpleSelector_2))], type$.JSArray_ComplexSelectorComponent_2)], type$.JSArray_List_ComplexSelectorComponent_2);
      } else {
        toUnify = A.QueueList$(null, type$.List_ComplexSelectorComponent_2);
        for (t1 = J.get$iterator$ax(path), t2 = type$.CompoundSelector_2, t3 = type$.JSArray_SimpleSelector_2, originals = null; t1.moveNext$0();) {
          t4 = t1.get$current(t1);
          if (t4.isOriginal) {
            if (originals == null)
              originals = A._setArrayType([], t3);
            B.JSArray_methods.addAll$1(originals, t2._as(B.JSArray_methods.get$last(t4.selector.components)).components);
          } else
            toUnify._queue_list$_add$1(t4.selector.components);
        }
        if (originals != null)
          toUnify.addFirst$1(A._setArrayType([A.CompoundSelector$0(originals)], type$.JSArray_ComplexSelectorComponent_2));
        complexes = A.unifyComplex0(toUnify);
        if (complexes == null)
          return null;
      }
      _box_0.lineBreak = false;
      for (t1 = J.get$iterator$ax(path), t2 = this.mediaQueryContext; t1.moveNext$0();) {
        t3 = t1.get$current(t1);
        t3.assertCompatibleMediaContext$1(t2);
        _box_0.lineBreak = _box_0.lineBreak || t3.selector.lineBreak;
      }
      t1 = J.map$1$1$ax(complexes, new A.ExtensionStore__extendCompound__closure2(_box_0), type$.ComplexSelector_2);
      return A.List_List$of(t1, true, t1.$ti._eval$1("ListIterable.E"));
    },
    $signature: 423
  };
  A.ExtensionStore__extendCompound__closure1.prototype = {
    call$1(extender) {
      return type$.CompoundSelector_2._as(B.JSArray_methods.get$last(extender.selector.components)).components;
    },
    $signature: 424
  };
  A.ExtensionStore__extendCompound__closure2.prototype = {
    call$1(components) {
      return A.ComplexSelector$0(components, this._box_0.lineBreak);
    },
    $signature: 72
  };
  A.ExtensionStore__extendCompound_closure6.prototype = {
    call$1(l) {
      return l;
    },
    $signature: 425
  };
  A.ExtensionStore__extendCompound_closure7.prototype = {
    call$1(_) {
      return false;
    },
    $signature: 20
  };
  A.ExtensionStore__extendCompound_closure8.prototype = {
    call$1(complex) {
      var t1 = B.C_ListEquality.equals$2(0, complex.components, this.original.components);
      return t1;
    },
    $signature: 20
  };
  A.ExtensionStore__extendSimple_withoutPseudo0.prototype = {
    call$1(simple) {
      var t1, t2, _this = this,
        extensionsForSimple = _this.extensions.$index(0, simple);
      if (extensionsForSimple == null)
        return null;
      t1 = _this.targetsUsed;
      if (t1 != null)
        t1.add$1(0, simple);
      t1 = A._setArrayType([], type$.JSArray_Extender_2);
      t2 = _this.$this;
      if (t2._extension_store$_mode !== B.ExtendMode_replace0)
        t1.push(t2._extension_store$_extenderForSimple$2(simple, _this.simpleSpan));
      for (t2 = extensionsForSimple.get$values(extensionsForSimple), t2 = t2.get$iterator(t2); t2.moveNext$0();)
        t1.push(t2.get$current(t2).extender);
      return t1;
    },
    $signature: 426
  };
  A.ExtensionStore__extendSimple_closure1.prototype = {
    call$1(pseudo) {
      var t1 = this.withoutPseudo.call$1(pseudo);
      return t1 == null ? A._setArrayType([this.$this._extension_store$_extenderForSimple$2(pseudo, this.simpleSpan)], type$.JSArray_Extender_2) : t1;
    },
    $signature: 427
  };
  A.ExtensionStore__extendSimple_closure2.prototype = {
    call$1(result) {
      return A._setArrayType([result], type$.JSArray_List_Extender_2);
    },
    $signature: 428
  };
  A.ExtensionStore__extendPseudo_closure4.prototype = {
    call$1(complex) {
      return complex.components.length > 1;
    },
    $signature: 20
  };
  A.ExtensionStore__extendPseudo_closure5.prototype = {
    call$1(complex) {
      return complex.components.length === 1;
    },
    $signature: 20
  };
  A.ExtensionStore__extendPseudo_closure6.prototype = {
    call$1(complex) {
      return complex.components.length <= 1;
    },
    $signature: 20
  };
  A.ExtensionStore__extendPseudo_closure7.prototype = {
    call$1(complex) {
      var innerPseudo, innerSelector,
        t1 = complex.components;
      if (t1.length !== 1)
        return A._setArrayType([complex], type$.JSArray_ComplexSelector_2);
      if (!(B.JSArray_methods.get$first(t1) instanceof A.CompoundSelector0))
        return A._setArrayType([complex], type$.JSArray_ComplexSelector_2);
      t1 = type$.CompoundSelector_2._as(B.JSArray_methods.get$first(t1)).components;
      if (t1.length !== 1)
        return A._setArrayType([complex], type$.JSArray_ComplexSelector_2);
      if (!(B.JSArray_methods.get$first(t1) instanceof A.PseudoSelector0))
        return A._setArrayType([complex], type$.JSArray_ComplexSelector_2);
      innerPseudo = type$.PseudoSelector_2._as(B.JSArray_methods.get$first(t1));
      innerSelector = innerPseudo.selector;
      if (innerSelector == null)
        return A._setArrayType([complex], type$.JSArray_ComplexSelector_2);
      t1 = this.pseudo;
      switch (t1.normalizedName) {
        case "not":
          if (!B.Set_YEQji._map.containsKey$1(innerPseudo.normalizedName))
            return A._setArrayType([], type$.JSArray_ComplexSelector_2);
          return innerSelector.components;
        case "is":
        case "matches":
        case "where":
        case "any":
        case "current":
        case "nth-child":
        case "nth-last-child":
          if (innerPseudo.name !== t1.name)
            return A._setArrayType([], type$.JSArray_ComplexSelector_2);
          if (innerPseudo.argument != t1.argument)
            return A._setArrayType([], type$.JSArray_ComplexSelector_2);
          return innerSelector.components;
        case "has":
        case "host":
        case "host-context":
        case "slotted":
          return A._setArrayType([complex], type$.JSArray_ComplexSelector_2);
        default:
          return A._setArrayType([], type$.JSArray_ComplexSelector_2);
      }
    },
    $signature: 429
  };
  A.ExtensionStore__extendPseudo_closure8.prototype = {
    call$1(complex) {
      var t1 = this.pseudo;
      return A.PseudoSelector$0(t1.name, t1.argument, !t1.isClass, A.SelectorList$0(A._setArrayType([complex], type$.JSArray_ComplexSelector_2)));
    },
    $signature: 430
  };
  A.ExtensionStore__trim_closure1.prototype = {
    call$1(complex2) {
      return complex2.get$minSpecificity() >= this._box_0.maxSpecificity && A.complexIsSuperselector0(complex2.components, this.complex1.components);
    },
    $signature: 20
  };
  A.ExtensionStore__trim_closure2.prototype = {
    call$1(complex2) {
      return complex2.get$minSpecificity() >= this._box_0.maxSpecificity && A.complexIsSuperselector0(complex2.components, this.complex1.components);
    },
    $signature: 20
  };
  A.ExtensionStore_clone_closure0.prototype = {
    call$2(simple, selectors) {
      var t2, t3, t4, t5, t6, newSelector, mediaContext, _this = this,
        t1 = type$.ModifiableCssValue_SelectorList_2,
        newSelectorSet = A.LinkedHashSet_LinkedHashSet$_empty(t1);
      _this.newSelectors.$indexSet(0, simple, newSelectorSet);
      for (t2 = selectors.get$iterator(selectors), t3 = _this.oldToNewSelectors, t4 = _this.$this._extension_store$_mediaContexts, t5 = _this.newMediaContexts; t2.moveNext$0();) {
        t6 = t2.get$current(t2);
        newSelector = new A.ModifiableCssValue0(t6.value, t6.span, t1);
        newSelectorSet.add$1(0, newSelector);
        t3.$indexSet(0, t6, newSelector);
        mediaContext = t4.$index(0, t6);
        if (mediaContext != null)
          t5.$indexSet(0, newSelector, mediaContext);
      }
    },
    $signature: 431
  };
  A.FiberClass.prototype = {};
  A.Fiber.prototype = {};
  A.NodeToDartFileImporter.prototype = {
    canonicalize$1(_, url) {
      var result, t1, resultUrl;
      if (url.get$scheme() === "file")
        return $.$get$_filesystemImporter0().canonicalize$1(0, url);
      result = this._file0$_findFileUrl.call$2(url.toString$0(0), {fromImport: A.fromImport0()});
      if (result == null)
        return null;
      t1 = self.Promise;
      if (result instanceof t1)
        A.jsThrow(new self.Error("The findFileUrl() function can't return a Promise for synchron compile functions."));
      else {
        t1 = self.URL;
        if (!(result instanceof t1))
          A.jsThrow(new self.Error(string$.The_fie));
      }
      resultUrl = A.Uri_parse(J.toString$0$(type$.JSUrl._as(result)));
      if (resultUrl.get$scheme() !== "file")
        A.jsThrow(new self.Error(string$.The_fiu + url.toString$0(0) + '".'));
      return $.$get$_filesystemImporter0().canonicalize$1(0, resultUrl);
    },
    load$1(_, url) {
      return $.$get$_filesystemImporter0().load$1(0, url);
    }
  };
  A.FilesystemImporter0.prototype = {
    canonicalize$1(_, url) {
      if (url.get$scheme() !== "file" && url.get$scheme() !== "")
        return null;
      return A.NullableExtension_andThen0(A.resolveImportPath0(A.join(this._filesystem$_loadPath, $.$get$context().style.pathFromUri$1(A._parseUri(url)), null)), new A.FilesystemImporter_canonicalize_closure0());
    },
    load$1(_, url) {
      var path = $.$get$context().style.pathFromUri$1(A._parseUri(url));
      return A.ImporterResult$(A.readFile0(path), url, A.Syntax_forPath0(path));
    },
    toString$0(_) {
      return this._filesystem$_loadPath;
    }
  };
  A.FilesystemImporter_canonicalize_closure0.prototype = {
    call$1(resolved) {
      var t1, t2, t0, _null = null;
      if (J.$eq$(J.get$platform$x(self.process), "win32") || J.$eq$(J.get$platform$x(self.process), "darwin")) {
        t1 = $.$get$context();
        t2 = A._realCasePath0(t1.absolute$7(t1.normalize$1(resolved), _null, _null, _null, _null, _null, _null));
        t0 = t2;
        t2 = t1;
        t1 = t0;
      } else {
        t1 = $.$get$context();
        t2 = t1.canonicalize$1(0, resolved);
        t0 = t2;
        t2 = t1;
        t1 = t0;
      }
      return t2.toUri$1(t1);
    },
    $signature: 184
  };
  A.ForRule0.prototype = {
    accept$1$1(visitor) {
      return visitor.visitForRule$1(this);
    },
    accept$1(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0(_) {
      var _this = this,
        t1 = _this.from.toString$0(0),
        t2 = _this.isExclusive ? "to" : "through",
        t3 = _this.children;
      return "@for $" + _this.variable + " from " + t1 + " " + t2 + " " + _this.to.toString$0(0) + " {" + (t3 && B.JSArray_methods).join$1(t3, " ") + "}";
    },
    get$span(receiver) {
      return this.span;
    }
  };
  A.ForwardRule0.prototype = {
    accept$1$1(visitor) {
      return visitor.visitForwardRule$1(this);
    },
    accept$1(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0(_) {
      var t2, prefix, _this = this,
        t1 = "@forward " + A.StringExpression_quoteText0(_this.url.toString$0(0)),
        shownMixinsAndFunctions = _this.shownMixinsAndFunctions,
        hiddenMixinsAndFunctions = _this.hiddenMixinsAndFunctions;
      if (shownMixinsAndFunctions != null) {
        t2 = _this.shownVariables;
        t2.toString;
        t2 = t1 + " show " + _this._forward_rule0$_memberList$2(shownMixinsAndFunctions, t2);
        t1 = t2;
      } else {
        if (hiddenMixinsAndFunctions != null) {
          t2 = hiddenMixinsAndFunctions._base;
          t2 = t2.get$isNotEmpty(t2);
        } else
          t2 = false;
        if (t2) {
          t2 = _this.hiddenVariables;
          t2.toString;
          t2 = t1 + " hide " + _this._forward_rule0$_memberList$2(hiddenMixinsAndFunctions, t2);
          t1 = t2;
        }
      }
      prefix = _this.prefix;
      if (prefix != null)
        t1 += " as " + prefix + "*";
      t2 = _this.configuration;
      t1 = (t2.length !== 0 ? t1 + (" with (" + B.JSArray_methods.join$1(t2, ", ") + ")") : t1) + ";";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _forward_rule0$_memberList$2(mixinsAndFunctions, variables) {
      var t2,
        t1 = A.List_List$of(mixinsAndFunctions, true, type$.String);
      for (t2 = variables._base, t2 = t2.get$iterator(t2); t2.moveNext$0();)
        t1.push("$" + t2.get$current(t2));
      return B.JSArray_methods.join$1(t1, ", ");
    },
    $isAstNode0: 1,
    $isStatement0: 1,
    get$span(receiver) {
      return this.span;
    }
  };
  A.ForwardedModuleView0.prototype = {
    get$url(_) {
      var t1 = this._forwarded_view0$_inner;
      return t1.get$url(t1);
    },
    get$upstream() {
      return this._forwarded_view0$_inner.get$upstream();
    },
    get$extensionStore() {
      return this._forwarded_view0$_inner.get$extensionStore();
    },
    get$css(_) {
      var t1 = this._forwarded_view0$_inner;
      return t1.get$css(t1);
    },
    get$transitivelyContainsCss() {
      return this._forwarded_view0$_inner.get$transitivelyContainsCss();
    },
    get$transitivelyContainsExtensions() {
      return this._forwarded_view0$_inner.get$transitivelyContainsExtensions();
    },
    setVariable$3($name, value, nodeWithSpan) {
      var prefix,
        _s19_ = "Undefined variable.",
        t1 = this._forwarded_view0$_rule,
        shownVariables = t1.shownVariables,
        hiddenVariables = t1.hiddenVariables;
      if (shownVariables != null && !shownVariables._base.contains$1(0, $name))
        throw A.wrapException(A.SassScriptException$0(_s19_));
      else if (hiddenVariables != null && hiddenVariables._base.contains$1(0, $name))
        throw A.wrapException(A.SassScriptException$0(_s19_));
      prefix = t1.prefix;
      if (prefix != null) {
        if (!B.JSString_methods.startsWith$1($name, prefix))
          throw A.wrapException(A.SassScriptException$0(_s19_));
        $name = B.JSString_methods.substring$1($name, prefix.length);
      }
      return this._forwarded_view0$_inner.setVariable$3($name, value, nodeWithSpan);
    },
    variableIdentity$1($name) {
      var prefix = this._forwarded_view0$_rule.prefix;
      if (prefix != null)
        $name = B.JSString_methods.substring$1($name, prefix.length);
      return this._forwarded_view0$_inner.variableIdentity$1($name);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.ForwardedModuleView0 && this._forwarded_view0$_inner.$eq(0, other._forwarded_view0$_inner) && this._forwarded_view0$_rule === other._forwarded_view0$_rule;
    },
    get$hashCode(_) {
      var t1 = this._forwarded_view0$_inner;
      return (t1.get$hashCode(t1) ^ A.Primitives_objectHashCode(this._forwarded_view0$_rule)) >>> 0;
    },
    cloneCss$0() {
      return A.ForwardedModuleView$0(this._forwarded_view0$_inner.cloneCss$0(), this._forwarded_view0$_rule, this.$ti._precomputed1);
    },
    toString$0(_) {
      return "forwarded " + this._forwarded_view0$_inner.toString$0(0);
    },
    $isModule0: 1,
    get$variables() {
      return this.variables;
    },
    get$variableNodes() {
      return this.variableNodes;
    },
    get$functions(receiver) {
      return this.functions;
    },
    get$mixins() {
      return this.mixins;
    }
  };
  A.FunctionExpression0.prototype = {
    accept$1$1(visitor) {
      return visitor.visitFunctionExpression$1(this);
    },
    accept$1(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0(_) {
      var t1 = this.namespace;
      t1 = t1 != null ? "" + (t1 + ".") : "";
      t1 += this.originalName + this.$arguments.toString$0(0);
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    $isExpression0: 1,
    $isAstNode0: 1,
    get$span(receiver) {
      return this.span;
    }
  };
  A.JSFunction0.prototype = {};
  A.SupportsFunction0.prototype = {
    toString$0(_) {
      return this.name.toString$0(0) + "(" + this.$arguments.toString$0(0) + ")";
    },
    $isAstNode0: 1,
    get$span(receiver) {
      return this.span;
    }
  };
  A.functionClass_closure.prototype = {
    call$0() {
      var t1 = type$.JSClass,
        jsClass = t1._as(A.allowInteropCaptureThisNamed("sass.SassFunction", new A.functionClass__closure()));
      A.JSClassExtension_injectSuperclass(t1._as(new A.SassFunction0(A.BuiltInCallable$function0("f", "", new A.functionClass__closure0(), null)).constructor), jsClass);
      return jsClass;
    },
    $signature: 23
  };
  A.functionClass__closure.prototype = {
    call$3($self, signature, callback) {
      var paren = B.JSString_methods.indexOf$1(signature, "(");
      if (paren === -1 || !B.JSString_methods.endsWith$1(signature, ")"))
        A.jsThrow(new self.Error('Invalid signature for new sass.SassFunction(): "' + signature + '"'));
      return new A.SassFunction0(A.BuiltInCallable$function0(B.JSString_methods.substring$2(signature, 0, paren), B.JSString_methods.substring$2(signature, paren + 1, signature.length - 1), callback, null));
    },
    "call*": "call$3",
    $requiredArgCount: 3,
    $signature: 432
  };
  A.functionClass__closure0.prototype = {
    call$1(_) {
      return B.C__SassNull0;
    },
    $signature: 3
  };
  A.SassFunction0.prototype = {
    accept$1$1(visitor) {
      var t1, t2;
      if (!visitor._serialize0$_inspect)
        A.throwExpression(A.SassScriptException$0(this.toString$0(0) + " isn't a valid CSS value."));
      t1 = visitor._serialize0$_buffer;
      t1.write$1(0, "get-function(");
      t2 = this.callable;
      visitor._serialize0$_visitQuotedString$1(t2.get$name(t2));
      t1.writeCharCode$1(41);
      return null;
    },
    accept$1(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    assertFunction$1($name) {
      return this;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.SassFunction0 && this.callable.$eq(0, other.callable);
    },
    get$hashCode(_) {
      var t1 = this.callable;
      return t1.get$hashCode(t1);
    }
  };
  A.FunctionRule0.prototype = {
    accept$1$1(visitor) {
      return visitor.visitFunctionRule$1(this);
    },
    accept$1(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0(_) {
      var t1 = this.children;
      return "@function " + this.name + "(" + this.$arguments.toString$0(0) + ") {" + (t1 && B.JSArray_methods).join$1(t1, " ") + "}";
    }
  };
  A.unifyComplex_closure0.prototype = {
    call$1(complex) {
      var t1 = J.getInterceptor$asx(complex);
      return t1.sublist$2(complex, 0, t1.get$length(complex) - 1);
    },
    $signature: 141
  };
  A._weaveParents_closure6.prototype = {
    call$2(group1, group2) {
      var unified, t1, _null = null;
      if (B.C_ListEquality.equals$2(0, group1, group2))
        return group1;
      if (!(J.get$first$ax(group1) instanceof A.CompoundSelector0) || !(J.get$first$ax(group2) instanceof A.CompoundSelector0))
        return _null;
      if (A.complexIsParentSuperselector0(group1, group2))
        return group2;
      if (A.complexIsParentSuperselector0(group2, group1))
        return group1;
      if (!A._mustUnify0(group1, group2))
        return _null;
      unified = A.unifyComplex0(A._setArrayType([group1, group2], type$.JSArray_List_ComplexSelectorComponent_2));
      if (unified == null)
        return _null;
      t1 = J.getInterceptor$asx(unified);
      if (t1.get$length(unified) > 1)
        return _null;
      return t1.get$first(unified);
    },
    $signature: 434
  };
  A._weaveParents_closure7.prototype = {
    call$1(sequence) {
      return A.complexIsParentSuperselector0(sequence.get$first(sequence), this.group);
    },
    $signature: 435
  };
  A._weaveParents_closure8.prototype = {
    call$1(chunk) {
      return J.expand$1$1$ax(chunk, new A._weaveParents__closure4(), type$.ComplexSelectorComponent_2);
    },
    $signature: 225
  };
  A._weaveParents__closure4.prototype = {
    call$1(group) {
      return group;
    },
    $signature: 141
  };
  A._weaveParents_closure9.prototype = {
    call$1(sequence) {
      return sequence.get$length(sequence) === 0;
    },
    $signature: 197
  };
  A._weaveParents_closure10.prototype = {
    call$1(chunk) {
      return J.expand$1$1$ax(chunk, new A._weaveParents__closure3(), type$.ComplexSelectorComponent_2);
    },
    $signature: 225
  };
  A._weaveParents__closure3.prototype = {
    call$1(group) {
      return group;
    },
    $signature: 141
  };
  A._weaveParents_closure11.prototype = {
    call$1(choice) {
      return J.get$isNotEmpty$asx(choice);
    },
    $signature: 437
  };
  A._weaveParents_closure12.prototype = {
    call$1(path) {
      var t1 = J.expand$1$1$ax(path, new A._weaveParents__closure2(), type$.ComplexSelectorComponent_2);
      return A.List_List$of(t1, true, t1.$ti._eval$1("Iterable.E"));
    },
    $signature: 438
  };
  A._weaveParents__closure2.prototype = {
    call$1(group) {
      return group;
    },
    $signature: 439
  };
  A._mustUnify_closure0.prototype = {
    call$1(component) {
      return component instanceof A.CompoundSelector0 && B.JSArray_methods.any$1(component.components, new A._mustUnify__closure0(this.uniqueSelectors));
    },
    $signature: 106
  };
  A._mustUnify__closure0.prototype = {
    call$1(simple) {
      var t1;
      if (!(simple instanceof A.IDSelector0))
        t1 = simple instanceof A.PseudoSelector0 && !simple.isClass;
      else
        t1 = true;
      return t1 && this.uniqueSelectors.contains$1(0, simple);
    },
    $signature: 15
  };
  A.paths_closure0.prototype = {
    call$2(paths, choice) {
      var t1 = this.T;
      t1 = J.expand$1$1$ax(choice, new A.paths__closure0(paths, t1), t1._eval$1("List<0>"));
      return A.List_List$of(t1, true, t1.$ti._eval$1("Iterable.E"));
    },
    $signature() {
      return this.T._eval$1("List<List<0>>(List<List<0>>,List<0>)");
    }
  };
  A.paths__closure0.prototype = {
    call$1(option) {
      var t1 = this.T;
      return J.map$1$1$ax(this.paths, new A.paths___closure0(option, t1), t1._eval$1("List<0>"));
    },
    $signature() {
      return this.T._eval$1("Iterable<List<0>>(0)");
    }
  };
  A.paths___closure0.prototype = {
    call$1(path) {
      var t1 = A.List_List$of(path, true, this.T);
      t1.push(this.option);
      return t1;
    },
    $signature() {
      return this.T._eval$1("List<0>(List<0>)");
    }
  };
  A._hasRoot_closure0.prototype = {
    call$1(simple) {
      return simple instanceof A.PseudoSelector0 && simple.isClass && simple.normalizedName === "root";
    },
    $signature: 15
  };
  A.listIsSuperselector_closure0.prototype = {
    call$1(complex1) {
      return B.JSArray_methods.any$1(this.list1, new A.listIsSuperselector__closure0(complex1));
    },
    $signature: 20
  };
  A.listIsSuperselector__closure0.prototype = {
    call$1(complex2) {
      return A.complexIsSuperselector0(complex2.components, this.complex1.components);
    },
    $signature: 20
  };
  A._simpleIsSuperselectorOfCompound_closure0.prototype = {
    call$1(theirSimple) {
      var selector,
        t1 = this.simple;
      if (t1.$eq(0, theirSimple))
        return true;
      if (!(theirSimple instanceof A.PseudoSelector0))
        return false;
      selector = theirSimple.selector;
      if (selector == null)
        return false;
      if (!$._subselectorPseudos0.contains$1(0, theirSimple.normalizedName))
        return false;
      return B.JSArray_methods.every$1(selector.components, new A._simpleIsSuperselectorOfCompound__closure0(t1));
    },
    $signature: 15
  };
  A._simpleIsSuperselectorOfCompound__closure0.prototype = {
    call$1(complex) {
      var t1 = complex.components;
      if (t1.length !== 1)
        return false;
      return B.JSArray_methods.contains$1(type$.CompoundSelector_2._as(B.JSArray_methods.get$single(t1)).components, this.simple);
    },
    $signature: 20
  };
  A._selectorPseudoIsSuperselector_closure6.prototype = {
    call$1(selector2) {
      return A.listIsSuperselector0(this.selector1.components, selector2.components);
    },
    $signature: 86
  };
  A._selectorPseudoIsSuperselector_closure7.prototype = {
    call$1(complex1) {
      var t1 = complex1.components,
        t2 = A._setArrayType([], type$.JSArray_ComplexSelectorComponent_2),
        t3 = this.parents;
      if (t3 != null)
        B.JSArray_methods.addAll$1(t2, t3);
      t2.push(this.compound2);
      return A.complexIsSuperselector0(t1, t2);
    },
    $signature: 20
  };
  A._selectorPseudoIsSuperselector_closure8.prototype = {
    call$1(selector2) {
      return A.listIsSuperselector0(this.selector1.components, selector2.components);
    },
    $signature: 86
  };
  A._selectorPseudoIsSuperselector_closure9.prototype = {
    call$1(selector2) {
      return A.listIsSuperselector0(this.selector1.components, selector2.components);
    },
    $signature: 86
  };
  A._selectorPseudoIsSuperselector_closure10.prototype = {
    call$1(complex) {
      return B.JSArray_methods.any$1(this.compound2.components, new A._selectorPseudoIsSuperselector__closure0(complex, this.pseudo1));
    },
    $signature: 20
  };
  A._selectorPseudoIsSuperselector__closure0.prototype = {
    call$1(simple2) {
      var compound1, selector2, _this = this;
      if (simple2 instanceof A.TypeSelector0) {
        compound1 = B.JSArray_methods.get$last(_this.complex.components);
        return compound1 instanceof A.CompoundSelector0 && B.JSArray_methods.any$1(compound1.components, new A._selectorPseudoIsSuperselector___closure1(simple2));
      } else if (simple2 instanceof A.IDSelector0) {
        compound1 = B.JSArray_methods.get$last(_this.complex.components);
        return compound1 instanceof A.CompoundSelector0 && B.JSArray_methods.any$1(compound1.components, new A._selectorPseudoIsSuperselector___closure2(simple2));
      } else if (simple2 instanceof A.PseudoSelector0 && simple2.name === _this.pseudo1.name) {
        selector2 = simple2.selector;
        if (selector2 == null)
          return false;
        return A.listIsSuperselector0(selector2.components, A._setArrayType([_this.complex], type$.JSArray_ComplexSelector_2));
      } else
        return false;
    },
    $signature: 15
  };
  A._selectorPseudoIsSuperselector___closure1.prototype = {
    call$1(simple1) {
      var t1;
      if (simple1 instanceof A.TypeSelector0) {
        t1 = this.simple2.name.$eq(0, simple1.name);
        t1 = !t1;
      } else
        t1 = false;
      return t1;
    },
    $signature: 15
  };
  A._selectorPseudoIsSuperselector___closure2.prototype = {
    call$1(simple1) {
      var t1;
      if (simple1 instanceof A.IDSelector0) {
        t1 = simple1.name;
        t1 = this.simple2.name !== t1;
      } else
        t1 = false;
      return t1;
    },
    $signature: 15
  };
  A._selectorPseudoIsSuperselector_closure11.prototype = {
    call$1(selector2) {
      var t1 = B.C_ListEquality.equals$2(0, this.selector1.components, selector2.components);
      return t1;
    },
    $signature: 86
  };
  A._selectorPseudoIsSuperselector_closure12.prototype = {
    call$1(pseudo2) {
      var t1, selector2;
      if (!(pseudo2 instanceof A.PseudoSelector0))
        return false;
      t1 = this.pseudo1;
      if (pseudo2.name !== t1.name)
        return false;
      if (pseudo2.argument != t1.argument)
        return false;
      selector2 = pseudo2.selector;
      if (selector2 == null)
        return false;
      return A.listIsSuperselector0(this.selector1.components, selector2.components);
    },
    $signature: 15
  };
  A._selectorPseudoArgs_closure1.prototype = {
    call$1(pseudo) {
      return pseudo.isClass === this.isClass && pseudo.name === this.name;
    },
    $signature: 441
  };
  A._selectorPseudoArgs_closure2.prototype = {
    call$1(pseudo) {
      return pseudo.selector;
    },
    $signature: 442
  };
  A.globalFunctions_closure0.prototype = {
    call$1($arguments) {
      var t1 = J.getInterceptor$asx($arguments);
      return t1.$index($arguments, 0).get$isTruthy() ? t1.$index($arguments, 1) : t1.$index($arguments, 2);
    },
    $signature: 3
  };
  A.IDSelector0.prototype = {
    get$minSpecificity() {
      return A._asInt(Math.pow(A.SimpleSelector0.prototype.get$minSpecificity.call(this), 2));
    },
    accept$1$1(visitor) {
      var t1 = visitor._serialize0$_buffer;
      t1.writeCharCode$1(35);
      t1.write$1(0, this.name);
      return null;
    },
    accept$1(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    addSuffix$1(suffix) {
      return new A.IDSelector0(this.name + suffix);
    },
    unify$1(compound) {
      if (B.JSArray_methods.any$1(compound, new A.IDSelector_unify_closure0(this)))
        return null;
      return this.super$SimpleSelector$unify0(compound);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.IDSelector0 && other.name === this.name;
    },
    get$hashCode(_) {
      return B.JSString_methods.get$hashCode(this.name);
    }
  };
  A.IDSelector_unify_closure0.prototype = {
    call$1(simple) {
      var t1;
      if (simple instanceof A.IDSelector0) {
        t1 = simple.name;
        t1 = this.$this.name !== t1;
      } else
        t1 = false;
      return t1;
    },
    $signature: 15
  };
  A.IfExpression0.prototype = {
    accept$1$1(visitor) {
      return visitor.visitIfExpression$1(this);
    },
    accept$1(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0(_) {
      return "if" + this.$arguments.toString$0(0);
    },
    $isExpression0: 1,
    $isAstNode0: 1,
    get$span(receiver) {
      return this.span;
    }
  };
  A.IfRule0.prototype = {
    accept$1$1(visitor) {
      return visitor.visitIfRule$1(this);
    },
    accept$1(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0(_) {
      var result = A.ListExtensions_mapIndexed(this.clauses, new A.IfRule_toString_closure0(), type$.IfClause_2, type$.String).join$1(0, " "),
        lastClause = this.lastClause;
      return lastClause != null ? result + (" " + lastClause.toString$0(0)) : result;
    },
    $isAstNode0: 1,
    $isStatement0: 1,
    get$span(receiver) {
      return this.span;
    }
  };
  A.IfRule_toString_closure0.prototype = {
    call$2(index, clause) {
      var t1 = index === 0 ? "if" : "else if";
      return "@" + t1 + " " + clause.expression.toString$0(0) + " {" + B.JSArray_methods.join$1(clause.children, " ") + "}";
    },
    $signature: 443
  };
  A.IfRuleClause0.prototype = {};
  A.IfRuleClause$__closure0.prototype = {
    call$1(child) {
      var t1;
      if (!(child instanceof A.VariableDeclaration0))
        if (!(child instanceof A.FunctionRule0))
          if (!(child instanceof A.MixinRule0))
            t1 = child instanceof A.ImportRule0 && B.JSArray_methods.any$1(child.imports, new A.IfRuleClause$___closure0());
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      return t1;
    },
    $signature: 227
  };
  A.IfRuleClause$___closure0.prototype = {
    call$1($import) {
      return $import instanceof A.DynamicImport0;
    },
    $signature: 228
  };
  A.IfClause0.prototype = {
    toString$0(_) {
      return "@if " + this.expression.toString$0(0) + " {" + B.JSArray_methods.join$1(this.children, " ") + "}";
    }
  };
  A.ElseClause0.prototype = {
    toString$0(_) {
      return "@else {" + B.JSArray_methods.join$1(this.children, " ") + "}";
    }
  };
  A.ImmutableList.prototype = {};
  A.ImmutableMap.prototype = {};
  A.immutableMapToDartMap_closure.prototype = {
    call$3(value, key, _) {
      this.dartMap.$indexSet(0, key, value);
    },
    "call*": "call$3",
    $requiredArgCount: 3,
    $signature: 446
  };
  A.NodeImporter.prototype = {
    loadRelative$3(url, previous, forImport) {
      var t1, t2, _null = null;
      if ($.$get$url().style.rootLength$1(url) > 0) {
        if (!B.JSString_methods.startsWith$1(url, "/") && !B.JSString_methods.startsWith$1(url, "file:"))
          return _null;
        return this._tryPath$2($.$get$context().style.pathFromUri$1(A._parseUri(url)), forImport);
      }
      if ((previous == null ? _null : previous.get$scheme()) !== "file")
        return _null;
      t1 = $.$get$context();
      t2 = t1.style;
      return this._tryPath$2(A.join(t1.dirname$1(t2.pathFromUri$1(A._parseUri(previous))), t2.pathFromUri$1(A._parseUri(url)), _null), forImport);
    },
    load$3(_, url, previous, forImport) {
      var t1, t2, t3, t4, t5, _i, importer, context, value, _this = this,
        previousString = _this._previousToString$1(previous);
      for (t1 = _this._implementation$_importers, t2 = t1.length, t3 = _this._implementation$_options, t4 = type$.RenderContextOptions, t5 = type$.JSArray_Object, _i = 0; _i < t2; ++_i) {
        importer = t1[_i];
        context = {options: t4._as(t3), fromImport: forImport};
        J.set$context$x(J.get$options$x(context), context);
        value = J.apply$2$x(importer, context, A._setArrayType([url, previousString], t5));
        if (value != null)
          return _this._handleImportResult$4(url, previous, value, forImport);
      }
      return _this._resolveLoadPathFromUrl$2(A.Uri_parse(url), forImport);
    },
    loadAsync$3(url, previous, forImport) {
      return this.loadAsync$body$NodeImporter(url, previous, forImport);
    },
    loadAsync$body$NodeImporter(url, previous, forImport) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_Tuple2_String_String),
        $async$returnValue, $async$self = this, t1, t2, _i, value, previousString;
      var $async$loadAsync$3 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              previousString = $async$self._previousToString$1(previous);
              t1 = $async$self._implementation$_importers, t2 = t1.length, _i = 0;
            case 3:
              // for condition
              if (!(_i < t2)) {
                // goto after for
                $async$goto = 5;
                break;
              }
              $async$goto = 6;
              return A._asyncAwait($async$self._callImporterAsync$4(t1[_i], url, previousString, forImport), $async$loadAsync$3);
            case 6:
              // returning from await.
              value = $async$result;
              if (value != null) {
                $async$returnValue = $async$self._handleImportResult$4(url, previous, value, forImport);
                // goto return
                $async$goto = 1;
                break;
              }
            case 4:
              // for update
              ++_i;
              // goto for condition
              $async$goto = 3;
              break;
            case 5:
              // after for
              $async$returnValue = $async$self._resolveLoadPathFromUrl$2(A.Uri_parse(url), forImport);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$loadAsync$3, $async$completer);
    },
    _previousToString$1(previous) {
      if (previous == null)
        return "stdin";
      if (previous.get$scheme() === "file")
        return $.$get$context().style.pathFromUri$1(A._parseUri(previous));
      return previous.toString$0(0);
    },
    _resolveLoadPathFromUrl$2(url, forImport) {
      return url.get$scheme() === "" || url.get$scheme() === "file" ? this._resolveLoadPath$2($.$get$context().style.pathFromUri$1(A._parseUri(url)), forImport) : null;
    },
    _resolveLoadPath$2(path, forImport) {
      var t2, t3, t4, t5, _i, parts, result, _null = null,
        t1 = $.$get$context(),
        cwdResult = this._tryPath$2(t1.absolute$7(path, _null, _null, _null, _null, _null, _null), forImport);
      if (cwdResult != null)
        return cwdResult;
      for (t2 = this._includePaths, t3 = t2.length, t4 = type$.JSArray_nullable_String, t5 = type$.WhereTypeIterable_String, _i = 0; _i < t3; ++_i) {
        parts = A._setArrayType([t2[_i], path, null, null, null, null, null, null], t4);
        A._validateArgList("join", parts);
        result = this._tryPath$2(t1.absolute$7(t1.joinAll$1(new A.WhereTypeIterable(parts, t5)), _null, _null, _null, _null, _null, _null), forImport);
        if (result != null)
          return result;
      }
      return _null;
    },
    _tryPath$2(path, forImport) {
      var t1;
      if (forImport) {
        t1 = type$.nullable_Object;
        t1 = A.runZoned(new A.NodeImporter__tryPath_closure(path), A.LinkedHashMap_LinkedHashMap$_literal([B.Symbol__inImportRule, true], t1, t1), type$.nullable_String);
      } else
        t1 = A.resolveImportPath0(path);
      return A.NullableExtension_andThen0(t1, new A.NodeImporter__tryPath_closure0());
    },
    _handleImportResult$4(url, previous, value, forImport) {
      var t1, file, contents, resolved;
      if (value instanceof self.Error)
        throw A.wrapException(value);
      if (!type$.NodeImporterResult_2._is(value))
        return null;
      t1 = J.getInterceptor$x(value);
      file = t1.get$file(value);
      contents = t1.get$contents(value);
      if (file == null) {
        t1 = contents == null ? "" : contents;
        return new A.Tuple2(t1, url, type$.Tuple2_String_String);
      } else if (contents != null)
        return new A.Tuple2(contents, $.$get$context().toUri$1(file).toString$0(0), type$.Tuple2_String_String);
      else {
        resolved = this.loadRelative$3($.$get$context().toUri$1(file).toString$0(0), previous, forImport);
        if (resolved == null)
          resolved = this._resolveLoadPath$2(file, forImport);
        if (resolved != null)
          return resolved;
        throw A.wrapException("Can't find stylesheet to import.");
      }
    },
    _callImporterAsync$4(importer, url, previousString, forImport) {
      return this._callImporterAsync$body$NodeImporter(importer, url, previousString, forImport);
    },
    _callImporterAsync$body$NodeImporter(importer, url, previousString, forImport) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.nullable_Object),
        $async$returnValue, $async$self = this, t1, result;
      var $async$_callImporterAsync$4 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = new A._Future($.Zone__current, type$._Future_Object);
              result = J.apply$2$x(importer, $async$self._renderContext$1(forImport), A._setArrayType([url, previousString, A.allowInterop(new A._AsyncCompleter(t1, type$._AsyncCompleter_Object).get$complete())], type$.JSArray_Object));
              $async$goto = A._asBool($.$get$_isUndefined().call$1(result)) ? 3 : 4;
              break;
            case 3:
              // then
              $async$goto = 5;
              return A._asyncAwait(t1, $async$_callImporterAsync$4);
            case 5:
              // returning from await.
              $async$returnValue = $async$result;
              // goto return
              $async$goto = 1;
              break;
            case 4:
              // join
              $async$returnValue = result;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_callImporterAsync$4, $async$completer);
    },
    _renderContext$1(fromImport) {
      var context = {options: type$.RenderContextOptions._as(this._implementation$_options), fromImport: fromImport};
      J.set$context$x(J.get$options$x(context), context);
      return context;
    }
  };
  A.NodeImporter__tryPath_closure.prototype = {
    call$0() {
      return A.resolveImportPath0(this.path);
    },
    $signature: 41
  };
  A.NodeImporter__tryPath_closure0.prototype = {
    call$1(resolved) {
      return new A.Tuple2(A.readFile0(resolved), $.$get$context().toUri$1(resolved).toString$0(0), type$.Tuple2_String_String);
    },
    $signature: 447
  };
  A.ModifiableCssImport0.prototype = {
    accept$1$1(visitor) {
      return visitor.visitCssImport$1(this);
    },
    accept$1(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    $isCssImport0: 1,
    get$span(receiver) {
      return this.span;
    }
  };
  A.ImportCache0.prototype = {
    canonicalize$4$baseImporter$baseUrl$forImport(_, url, baseImporter, baseUrl, forImport) {
      var relativeResult, _this = this;
      if (baseImporter != null) {
        relativeResult = _this._import_cache$_relativeCanonicalizeCache.putIfAbsent$2(new A.Tuple4(url, forImport, baseImporter, baseUrl, type$.Tuple4_of_Uri_and_bool_and_Importer_and_nullable_Uri_2), new A.ImportCache_canonicalize_closure1(_this, baseUrl, url, baseImporter, forImport));
        if (relativeResult != null)
          return relativeResult;
      }
      return _this._import_cache$_canonicalizeCache.putIfAbsent$2(new A.Tuple2(url, forImport, type$.Tuple2_Uri_bool), new A.ImportCache_canonicalize_closure2(_this, url, forImport));
    },
    _import_cache$_canonicalize$3(importer, url, forImport) {
      var t1, result;
      if (forImport) {
        t1 = type$.nullable_Object;
        result = A.runZoned(new A.ImportCache__canonicalize_closure0(importer, url), A.LinkedHashMap_LinkedHashMap$_literal([B.Symbol__inImportRule, true], t1, t1), type$.nullable_Uri);
      } else
        result = importer.canonicalize$1(0, url);
      if ((result == null ? null : result.get$scheme()) === "")
        this._import_cache$_logger.warn$2$deprecation(0, "Importer " + importer.toString$0(0) + " canonicalized " + url.toString$0(0) + " to " + A.S(result) + string$.x2e_Rela, true);
      return result;
    },
    importCanonical$4$originalUrl$quiet(importer, canonicalUrl, originalUrl, quiet) {
      return this._import_cache$_importCache.putIfAbsent$2(canonicalUrl, new A.ImportCache_importCanonical_closure0(this, importer, canonicalUrl, originalUrl, quiet));
    },
    importCanonical$3$originalUrl(importer, canonicalUrl, originalUrl) {
      return this.importCanonical$4$originalUrl$quiet(importer, canonicalUrl, originalUrl, false);
    },
    humanize$1(canonicalUrl) {
      var t2, url,
        t1 = this._import_cache$_canonicalizeCache;
      t1 = A.IterableNullableExtension_whereNotNull(t1.get$values(t1), type$.Tuple3_Importer_Uri_Uri_2);
      t2 = t1.$ti;
      url = A.minBy(new A.MappedIterable(new A.WhereIterable(t1, new A.ImportCache_humanize_closure2(canonicalUrl), t2._eval$1("WhereIterable<Iterable.E>")), new A.ImportCache_humanize_closure3(), t2._eval$1("MappedIterable<Iterable.E,Uri>")), new A.ImportCache_humanize_closure4());
      if (url == null)
        return canonicalUrl;
      t1 = $.$get$url();
      return url.resolve$1(A.ParsedPath_ParsedPath$parse(canonicalUrl.get$path(canonicalUrl), t1.style).get$basename());
    },
    sourceMapUrl$1(_, canonicalUrl) {
      var t1 = this._import_cache$_resultsCache.$index(0, canonicalUrl);
      t1 = t1 == null ? null : t1.get$sourceMapUrl(t1);
      return t1 == null ? canonicalUrl : t1;
    }
  };
  A.ImportCache_canonicalize_closure1.prototype = {
    call$0() {
      var canonicalUrl, _this = this,
        t1 = _this.baseUrl,
        resolvedUrl = t1 == null ? null : t1.resolveUri$1(_this.url);
      if (resolvedUrl == null)
        resolvedUrl = _this.url;
      t1 = _this.baseImporter;
      canonicalUrl = _this.$this._import_cache$_canonicalize$3(t1, resolvedUrl, _this.forImport);
      if (canonicalUrl == null)
        return null;
      return new A.Tuple3(t1, canonicalUrl, resolvedUrl, type$.Tuple3_Importer_Uri_Uri_2);
    },
    $signature: 229
  };
  A.ImportCache_canonicalize_closure2.prototype = {
    call$0() {
      var t1, t2, t3, t4, t5, _i, importer, canonicalUrl;
      for (t1 = this.$this, t2 = t1._import_cache$_importers, t3 = t2.length, t4 = this.url, t5 = this.forImport, _i = 0; _i < t2.length; t2.length === t3 || (0, A.throwConcurrentModificationError)(t2), ++_i) {
        importer = t2[_i];
        canonicalUrl = t1._import_cache$_canonicalize$3(importer, t4, t5);
        if (canonicalUrl != null)
          return new A.Tuple3(importer, canonicalUrl, t4, type$.Tuple3_Importer_Uri_Uri_2);
      }
      return null;
    },
    $signature: 229
  };
  A.ImportCache__canonicalize_closure0.prototype = {
    call$0() {
      return this.importer.canonicalize$1(0, this.url);
    },
    $signature: 185
  };
  A.ImportCache_importCanonical_closure0.prototype = {
    call$0() {
      var t2, t3, t4, _this = this,
        t1 = _this.canonicalUrl,
        result = _this.importer.load$1(0, t1);
      if (result == null)
        return null;
      t2 = _this.$this;
      t2._import_cache$_resultsCache.$indexSet(0, t1, result);
      t3 = result.contents;
      t4 = result.syntax;
      t1 = _this.originalUrl.resolveUri$1(t1);
      return A.Stylesheet_Stylesheet$parse0(t3, t4, _this.quiet ? $.$get$Logger_quiet0() : t2._import_cache$_logger, t1);
    },
    $signature: 449
  };
  A.ImportCache_humanize_closure2.prototype = {
    call$1(tuple) {
      return tuple.item2.$eq(0, this.canonicalUrl);
    },
    $signature: 450
  };
  A.ImportCache_humanize_closure3.prototype = {
    call$1(tuple) {
      return tuple.item3;
    },
    $signature: 451
  };
  A.ImportCache_humanize_closure4.prototype = {
    call$1(url) {
      return url.get$path(url).length;
    },
    $signature: 96
  };
  A.ImportRule0.prototype = {
    accept$1$1(visitor) {
      return visitor.visitImportRule$1(this);
    },
    accept$1(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0(_) {
      return "@import " + B.JSArray_methods.join$1(this.imports, ", ") + ";";
    },
    $isAstNode0: 1,
    $isStatement0: 1,
    get$span(receiver) {
      return this.span;
    }
  };
  A.NodeImporter0.prototype = {};
  A.CanonicalizeOptions.prototype = {};
  A.NodeImporterResult0.prototype = {};
  A.Importer0.prototype = {};
  A.NodeImporterResult1.prototype = {};
  A.IncludeRule0.prototype = {
    get$spanWithoutContent() {
      var t2, t3,
        t1 = this.span;
      if (!(this.content == null)) {
        t2 = t1.file;
        t3 = this.$arguments.span;
        t3 = A.SpanExtensions_trimRight0(A.SpanExtensions_trimLeft0(t2.span$2(0, A.FileLocation$_(t2, t1._file$_start).offset, A.FileLocation$_(t3.file, t3._end).offset)));
        t1 = t3;
      }
      return t1;
    },
    accept$1$1(visitor) {
      return visitor.visitIncludeRule$1(this);
    },
    accept$1(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0(_) {
      var t2, _this = this,
        t1 = _this.namespace;
      t1 = t1 != null ? "@include " + (t1 + ".") : "@include ";
      t1 += _this.name;
      t2 = _this.$arguments;
      if (!t2.get$isEmpty(t2))
        t1 += "(" + t2.toString$0(0) + ")";
      t2 = _this.content;
      t1 += t2 == null ? ";" : " " + t2.toString$0(0);
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    $isAstNode0: 1,
    $isStatement0: 1,
    get$span(receiver) {
      return this.span;
    }
  };
  A.InterpolatedFunctionExpression0.prototype = {
    accept$1$1(visitor) {
      return visitor.visitInterpolatedFunctionExpression$1(this);
    },
    accept$1(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0(_) {
      return this.name.toString$0(0) + this.$arguments.toString$0(0);
    },
    $isExpression0: 1,
    $isAstNode0: 1,
    get$span(receiver) {
      return this.span;
    }
  };
  A.Interpolation0.prototype = {
    get$asPlain() {
      var first,
        t1 = this.contents,
        t2 = t1.length;
      if (t2 === 0)
        return "";
      if (t2 > 1)
        return null;
      first = B.JSArray_methods.get$first(t1);
      return typeof first == "string" ? first : null;
    },
    get$initialPlain() {
      var first = B.JSArray_methods.get$first(this.contents);
      return typeof first == "string" ? first : "";
    },
    Interpolation$20(contents, span) {
      var t1, t2, t3, i, t4, t5,
        _s8_ = "contents";
      for (t1 = this.contents, t2 = t1.length, t3 = type$.Expression_2, i = 0; i < t2; ++i) {
        t4 = t1[i];
        t5 = typeof t4 == "string";
        if (!t5 && !t3._is(t4))
          throw A.wrapException(A.ArgumentError$value(t1, _s8_, string$.May_on));
        if (i !== 0 && typeof t1[i - 1] == "string" && t5)
          throw A.wrapException(A.ArgumentError$value(t1, _s8_, "May not contain adjacent Strings."));
      }
    },
    toString$0(_) {
      var t1 = this.contents;
      return new A.MappedListIterable(t1, new A.Interpolation_toString_closure0(), A._arrayInstanceType(t1)._eval$1("MappedListIterable<1,String>")).join$0(0);
    },
    $isAstNode0: 1,
    get$span(receiver) {
      return this.span;
    }
  };
  A.Interpolation_toString_closure0.prototype = {
    call$1(value) {
      return typeof value == "string" ? value : "#{" + A.S(value) + "}";
    },
    $signature: 48
  };
  A.SupportsInterpolation0.prototype = {
    toString$0(_) {
      return "#{" + this.expression.toString$0(0) + "}";
    },
    $isAstNode0: 1,
    get$span(receiver) {
      return this.span;
    }
  };
  A.InterpolationBuffer0.prototype = {
    writeCharCode$1(character) {
      this._interpolation_buffer0$_text._contents += A.Primitives_stringFromCharCode(character);
      return null;
    },
    add$1(_, expression) {
      this._interpolation_buffer0$_flushText$0();
      this._interpolation_buffer0$_contents.push(expression);
    },
    addInterpolation$1(interpolation) {
      var first, t1, _this = this,
        toAdd = interpolation.contents;
      if (toAdd.length === 0)
        return;
      first = B.JSArray_methods.get$first(toAdd);
      if (typeof first == "string") {
        _this._interpolation_buffer0$_text._contents += first;
        toAdd = A.SubListIterable$(toAdd, 1, null, A._arrayInstanceType(toAdd)._precomputed1);
      }
      _this._interpolation_buffer0$_flushText$0();
      t1 = _this._interpolation_buffer0$_contents;
      B.JSArray_methods.addAll$1(t1, toAdd);
      if (typeof B.JSArray_methods.get$last(t1) == "string")
        _this._interpolation_buffer0$_text._contents += A.S(t1.pop());
    },
    _interpolation_buffer0$_flushText$0() {
      var t1 = this._interpolation_buffer0$_text,
        t2 = t1._contents;
      if (t2.length === 0)
        return;
      this._interpolation_buffer0$_contents.push(t2.charCodeAt(0) == 0 ? t2 : t2);
      t1._contents = "";
    },
    interpolation$1(span) {
      var t1 = A.List_List$of(this._interpolation_buffer0$_contents, true, type$.Object),
        t2 = this._interpolation_buffer0$_text._contents;
      if (t2.length !== 0)
        t1.push(t2.charCodeAt(0) == 0 ? t2 : t2);
      return A.Interpolation$0(t1, span);
    },
    toString$0(_) {
      var t1, t2, _i, t3, element;
      for (t1 = this._interpolation_buffer0$_contents, t2 = t1.length, _i = 0, t3 = ""; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        element = t1[_i];
        t3 = typeof element == "string" ? t3 + element : t3 + "#{" + A.S(element) + A.Primitives_stringFromCharCode(125);
      }
      t1 = t3 + this._interpolation_buffer0$_text.toString$0(0);
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A._realCasePath_helper0.prototype = {
    call$1(path) {
      var dirname = $.$get$context().dirname$1(path);
      if (dirname === path)
        return path;
      return $._realCaseCache0.putIfAbsent$2(path, new A._realCasePath_helper_closure0(this, dirname, path));
    },
    $signature: 5
  };
  A._realCasePath_helper_closure0.prototype = {
    call$0() {
      var matches, t2, exception,
        realDirname = this.helper.call$1(this.dirname),
        t1 = this.path,
        basename = A.ParsedPath_ParsedPath$parse(t1, $.$get$context().style).get$basename();
      try {
        matches = J.where$1$ax(A.listDir0(realDirname), new A._realCasePath_helper__closure0(basename)).toList$0(0);
        t2 = J.get$length$asx(matches) !== 1 ? A.join(realDirname, basename, null) : J.$index$asx(matches, 0);
        return t2;
      } catch (exception) {
        if (A.unwrapException(exception) instanceof A.FileSystemException0)
          return t1;
        else
          throw exception;
      }
    },
    $signature: 29
  };
  A._realCasePath_helper__closure0.prototype = {
    call$1(realPath) {
      return A.equalsIgnoreCase0(A.ParsedPath_ParsedPath$parse(realPath, $.$get$context().style).get$basename(), this.basename);
    },
    $signature: 6
  };
  A.ModifiableCssKeyframeBlock0.prototype = {
    accept$1$1(visitor) {
      return visitor.visitCssKeyframeBlock$1(this);
    },
    accept$1(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    copyWithoutChildren$0() {
      return A.ModifiableCssKeyframeBlock$0(this.selector, this.span);
    },
    get$span(receiver) {
      return this.span;
    }
  };
  A.KeyframeSelectorParser0.prototype = {
    parse$0() {
      return this.wrapSpanFormatException$1(new A.KeyframeSelectorParser_parse_closure0(this));
    },
    _keyframe_selector$_percentage$0() {
      var t3, next,
        t1 = this.scanner,
        t2 = t1.scanChar$1(43) ? "" + A.Primitives_stringFromCharCode(43) : "",
        second = t1.peekChar$0();
      if (!A.isDigit0(second) && second !== 46)
        t1.error$1(0, "Expected number.");
      while (true) {
        t3 = t1.peekChar$0();
        if (!(t3 != null && t3 >= 48 && t3 <= 57))
          break;
        t2 += A.Primitives_stringFromCharCode(t1.readChar$0());
      }
      if (t1.peekChar$0() === 46) {
        t2 += A.Primitives_stringFromCharCode(t1.readChar$0());
        while (true) {
          t3 = t1.peekChar$0();
          if (!(t3 != null && t3 >= 48 && t3 <= 57))
            break;
          t2 += A.Primitives_stringFromCharCode(t1.readChar$0());
        }
      }
      if (this.scanIdentChar$1(101)) {
        t2 += A.Primitives_stringFromCharCode(101);
        next = t1.peekChar$0();
        if (next === 43 || next === 45)
          t2 += A.Primitives_stringFromCharCode(t1.readChar$0());
        if (!A.isDigit0(t1.peekChar$0()))
          t1.error$1(0, "Expected digit.");
        while (true) {
          t3 = t1.peekChar$0();
          if (!(t3 != null && t3 >= 48 && t3 <= 57))
            break;
          t2 += A.Primitives_stringFromCharCode(t1.readChar$0());
        }
      }
      t1.expectChar$1(37);
      t2 += A.Primitives_stringFromCharCode(37);
      return t2.charCodeAt(0) == 0 ? t2 : t2;
    }
  };
  A.KeyframeSelectorParser_parse_closure0.prototype = {
    call$0() {
      var selectors = A._setArrayType([], type$.JSArray_String),
        t1 = this.$this,
        t2 = t1.scanner;
      do {
        t1.whitespace$0();
        if (t1.lookingAtIdentifier$0())
          if (t1.scanIdentifier$1("from"))
            selectors.push("from");
          else {
            t1.expectIdentifier$2$name("to", '"to" or "from"');
            selectors.push("to");
          }
        else
          selectors.push(t1._keyframe_selector$_percentage$0());
        t1.whitespace$0();
      } while (t2.scanChar$1(44));
      t2.expectDone$0();
      return selectors;
    },
    $signature: 46
  };
  A.render_closure.prototype = {
    call$0() {
      var error, exception;
      try {
        this.callback.call$2(null, A.renderSync(this.options));
      } catch (exception) {
        error = A.unwrapException(exception);
        this.callback.call$2(error, null);
      }
      return null;
    },
    $signature: 1
  };
  A.render_closure0.prototype = {
    call$1(result) {
      this.callback.call$2(null, result);
    },
    $signature: 452
  };
  A.render_closure1.prototype = {
    call$2(error, stackTrace) {
      var t2, t3, _null = null,
        t1 = this.callback;
      if (error instanceof A.SassException0)
        t1.call$2(A._wrapException(error, stackTrace), _null);
      else {
        t2 = J.toString$0$(error);
        t3 = A.getTrace0(error);
        t1.call$2(A._newRenderError(t2, t3 == null ? stackTrace : t3, _null, _null, _null, 3), _null);
      }
    },
    $signature: 63
  };
  A._parseFunctions_closure.prototype = {
    call$2(signature, callback) {
      var error, stackTrace, exception, t1, t2, context, fiber, _this = this, tuple = null;
      try {
        tuple = A.ScssParser$0(signature, null, null).parseSignature$1$requireParens(false);
      } catch (exception) {
        t1 = A.unwrapException(exception);
        if (t1 instanceof A.SassFormatException0) {
          error = t1;
          stackTrace = A.getTraceFromException(exception);
          t1 = error;
          t2 = J.getInterceptor$z(t1);
          A.throwWithTrace0(new A.SassFormatException0('Invalid signature "' + signature + '": ' + error._span_exception$_message, A.SourceSpanException.prototype.get$span.call(t2, t1)), stackTrace);
        } else
          throw exception;
      }
      t1 = _this.options;
      context = {options: A._contextOptions(t1, _this.start)};
      J.set$context$x(J.get$options$x(context), context);
      fiber = J.get$fiber$x(t1);
      if (fiber != null)
        _this.result.push(A.BuiltInCallable$parsed(tuple.item1, tuple.item2, new A._parseFunctions__closure(fiber, callback, context)));
      else {
        t1 = _this.result;
        if (!_this.asynch)
          t1.push(A.BuiltInCallable$parsed(tuple.item1, tuple.item2, new A._parseFunctions__closure0(callback, context)));
        else
          t1.push(new A.AsyncBuiltInCallable0(tuple.item1, tuple.item2, new A._parseFunctions__closure1(callback, context)));
      }
    },
    $signature: 111
  };
  A._parseFunctions__closure.prototype = {
    call$1($arguments) {
      var result,
        t1 = this.fiber,
        currentFiber = J.get$current$x(t1),
        t2 = type$.Object;
      t2 = A.List_List$of(J.map$1$1$ax($arguments, A.value1__wrapValue$closure(), t2), true, t2);
      t2.push(A.allowInterop(new A._parseFunctions___closure0(currentFiber)));
      result = J.apply$2$x(type$.JSFunction._as(this.callback), this.context, t2);
      return A.unwrapValue(A._asBool($.$get$_isUndefined().call$1(result)) ? A.runZoned(new A._parseFunctions___closure1(t1), null, type$.nullable_Object) : result);
    },
    $signature: 3
  };
  A._parseFunctions___closure0.prototype = {
    call$1(result) {
      A.scheduleMicrotask(new A._parseFunctions____closure(this.currentFiber, result));
    },
    call$0() {
      return this.call$1(null);
    },
    "call*": "call$1",
    $requiredArgCount: 0,
    $defaultValues() {
      return [null];
    },
    $signature: 71
  };
  A._parseFunctions____closure.prototype = {
    call$0() {
      return J.run$1$x(this.currentFiber, this.result);
    },
    $signature: 0
  };
  A._parseFunctions___closure1.prototype = {
    call$0() {
      return J.yield$0$x(this.fiber);
    },
    $signature: 88
  };
  A._parseFunctions__closure0.prototype = {
    call$1($arguments) {
      return A.unwrapValue(J.apply$2$x(type$.JSFunction._as(this.callback), this.context, J.map$1$1$ax($arguments, A.value1__wrapValue$closure(), type$.Object).toList$0(0)));
    },
    $signature: 3
  };
  A._parseFunctions__closure1.prototype = {
    call$1($arguments) {
      return this.$call$body$_parseFunctions__closure($arguments);
    },
    $call$body$_parseFunctions__closure($arguments) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Value_2),
        $async$returnValue, $async$self = this, result, t1, t2, $async$temp1;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = new A._Future($.Zone__current, type$._Future_nullable_Object);
              t2 = type$.Object;
              t2 = A.List_List$of(J.map$1$1$ax($arguments, A.value1__wrapValue$closure(), t2), true, t2);
              t2.push(A.allowInterop(new A._parseFunctions___closure(new A._AsyncCompleter(t1, type$._AsyncCompleter_nullable_Object))));
              result = J.apply$2$x(type$.JSFunction._as($async$self.callback), $async$self.context, t2);
              $async$temp1 = A;
              $async$goto = A._asBool($.$get$_isUndefined().call$1(result)) ? 3 : 5;
              break;
            case 3:
              // then
              $async$goto = 6;
              return A._asyncAwait(t1, $async$call$1);
            case 6:
              // returning from await.
              // goto join
              $async$goto = 4;
              break;
            case 5:
              // else
              $async$result = result;
            case 4:
              // join
              $async$returnValue = $async$temp1.unwrapValue($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 99
  };
  A._parseFunctions___closure.prototype = {
    call$1(result) {
      return this.completer.complete$1(result);
    },
    call$0() {
      return this.call$1(null);
    },
    "call*": "call$1",
    $requiredArgCount: 0,
    $defaultValues() {
      return [null];
    },
    $signature: 251
  };
  A._parseImporter_closure.prototype = {
    call$1(importer) {
      return type$.JSFunction._as(A.allowInteropCaptureThis(new A._parseImporter__closure(this.fiber, importer)));
    },
    $signature: 453
  };
  A._parseImporter__closure.prototype = {
    call$4(thisArg, url, previous, _) {
      var t1 = this.fiber,
        result = J.apply$2$x(this.importer, thisArg, A._setArrayType([url, previous, A.allowInterop(new A._parseImporter___closure(J.get$current$x(t1)))], type$.JSArray_Object));
      if (A._asBool($.$get$_isUndefined().call$1(result)))
        return A.runZoned(new A._parseImporter___closure0(t1), null, type$.Object);
      return result;
    },
    call$3(thisArg, url, previous) {
      return this.call$4(thisArg, url, previous, null);
    },
    "call*": "call$4",
    $requiredArgCount: 3,
    $defaultValues() {
      return [null];
    },
    $signature: 454
  };
  A._parseImporter___closure.prototype = {
    call$1(result) {
      A.scheduleMicrotask(new A._parseImporter____closure(this.currentFiber, result));
    },
    $signature: 455
  };
  A._parseImporter____closure.prototype = {
    call$0() {
      return J.run$1$x(this.currentFiber, this.result);
    },
    $signature: 0
  };
  A._parseImporter___closure0.prototype = {
    call$0() {
      return J.yield$0$x(this.fiber);
    },
    $signature: 88
  };
  A.LimitedMapView0.prototype = {
    get$keys(_) {
      return this._limited_map_view0$_keys;
    },
    get$length(_) {
      return this._limited_map_view0$_keys._collection$_length;
    },
    get$isEmpty(_) {
      return this._limited_map_view0$_keys._collection$_length === 0;
    },
    get$isNotEmpty(_) {
      return this._limited_map_view0$_keys._collection$_length !== 0;
    },
    $index(_, key) {
      return this._limited_map_view0$_keys.contains$1(0, key) ? this._limited_map_view0$_map.$index(0, key) : null;
    },
    containsKey$1(key) {
      return this._limited_map_view0$_keys.contains$1(0, key);
    },
    remove$1(_, key) {
      return this._limited_map_view0$_keys.contains$1(0, key) ? this._limited_map_view0$_map.remove$1(0, key) : null;
    }
  };
  A.ListExpression0.prototype = {
    accept$1$1(visitor) {
      return visitor.visitListExpression$1(this);
    },
    accept$1(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    toString$0(_) {
      var _this = this,
        t1 = _this.hasBrackets,
        t2 = t1 ? "" + A.Primitives_stringFromCharCode(91) : "",
        t3 = _this.contents,
        t4 = _this.separator === B.ListSeparator_kWM0 ? ", " : " ";
      t4 = t2 + new A.MappedListIterable(t3, new A.ListExpression_toString_closure0(_this), A._arrayInstanceType(t3)._eval$1("MappedListIterable<1,String>")).join$1(0, t4);
      t1 = t1 ? t4 + A.Primitives_stringFromCharCode(93) : t4;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _list3$_elementNeedsParens$1(expression) {
      var t1;
      if (expression instanceof A.ListExpression0) {
        if (expression.contents.length < 2)
          return false;
        if (expression.hasBrackets)
          return false;
        t1 = expression.separator;
        return this.separator === B.ListSeparator_kWM0 ? t1 === B.ListSeparator_kWM0 : t1 !== B.ListSeparator_undecided_null0;
      }
      if (this.separator !== B.ListSeparator_woc0)
        return false;
      if (expression instanceof A.UnaryOperationExpression0) {
        t1 = expression.operator;
        return t1 === B.UnaryOperator_j2w0 || t1 === B.UnaryOperator_U4G0;
      }
      return false;
    },
    $isExpression0: 1,
    $isAstNode0: 1,
    get$span(receiver) {
      return this.span;
    }
  };
  A.ListExpression_toString_closure0.prototype = {
    call$1(element) {
      return this.$this._list3$_elementNeedsParens$1(element) ? "(" + element.toString$0(0) + ")" : element.toString$0(0);
    },
    $signature: 122
  };
  A._length_closure2.prototype = {
    call$1($arguments) {
      var t1 = J.$index$asx($arguments, 0).get$asList().length;
      return new A.UnitlessSassNumber0(t1, null);
    },
    $signature: 10
  };
  A._nth_closure0.prototype = {
    call$1($arguments) {
      var t1 = J.getInterceptor$asx($arguments),
        list = t1.$index($arguments, 0),
        index = t1.$index($arguments, 1);
      return list.get$asList()[list.sassIndexToListIndex$2(index, "n")];
    },
    $signature: 3
  };
  A._setNth_closure0.prototype = {
    call$1($arguments) {
      var t1 = J.getInterceptor$asx($arguments),
        list = t1.$index($arguments, 0),
        index = t1.$index($arguments, 1),
        value = t1.$index($arguments, 2),
        t2 = list.get$asList(),
        newList = A._setArrayType(t2.slice(0), A._arrayInstanceType(t2));
      newList[list.sassIndexToListIndex$2(index, "n")] = value;
      return t1.$index($arguments, 0).withListContents$1(newList);
    },
    $signature: 22
  };
  A._join_closure0.prototype = {
    call$1($arguments) {
      var separator, bracketed,
        t1 = J.getInterceptor$asx($arguments),
        list1 = t1.$index($arguments, 0),
        list2 = t1.$index($arguments, 1),
        separatorParam = t1.$index($arguments, 2).assertString$1("separator"),
        bracketedParam = t1.$index($arguments, 3);
      t1 = separatorParam._string0$_text;
      if (t1 === "auto")
        if (list1.get$separator(list1) !== B.ListSeparator_undecided_null0)
          separator = list1.get$separator(list1);
        else
          separator = list2.get$separator(list2) !== B.ListSeparator_undecided_null0 ? list2.get$separator(list2) : B.ListSeparator_woc0;
      else if (t1 === "space")
        separator = B.ListSeparator_woc0;
      else if (t1 === "comma")
        separator = B.ListSeparator_kWM0;
      else {
        if (t1 !== "slash")
          throw A.wrapException(A.SassScriptException$0(string$.x24separ));
        separator = B.ListSeparator_1gm0;
      }
      bracketed = bracketedParam instanceof A.SassString0 && bracketedParam._string0$_text === "auto" ? list1.get$hasBrackets() : bracketedParam.get$isTruthy();
      t1 = A.List_List$of(list1.get$asList(), true, type$.Value_2);
      B.JSArray_methods.addAll$1(t1, list2.get$asList());
      return A.SassList$0(t1, separator, bracketed);
    },
    $signature: 22
  };
  A._append_closure2.prototype = {
    call$1($arguments) {
      var separator,
        t1 = J.getInterceptor$asx($arguments),
        list = t1.$index($arguments, 0),
        value = t1.$index($arguments, 1);
      t1 = t1.$index($arguments, 2).assertString$1("separator")._string0$_text;
      if (t1 === "auto")
        separator = list.get$separator(list) === B.ListSeparator_undecided_null0 ? B.ListSeparator_woc0 : list.get$separator(list);
      else if (t1 === "space")
        separator = B.ListSeparator_woc0;
      else if (t1 === "comma")
        separator = B.ListSeparator_kWM0;
      else {
        if (t1 !== "slash")
          throw A.wrapException(A.SassScriptException$0(string$.x24separ));
        separator = B.ListSeparator_1gm0;
      }
      t1 = A.List_List$of(list.get$asList(), true, type$.Value_2);
      t1.push(value);
      return list.withListContents$2$separator(t1, separator);
    },
    $signature: 22
  };
  A._zip_closure0.prototype = {
    call$1($arguments) {
      var results, result, _box_0 = {},
        t1 = J.$index$asx($arguments, 0).get$asList(),
        t2 = A._arrayInstanceType(t1)._eval$1("MappedListIterable<1,List<Value0>>"),
        lists = A.List_List$of(new A.MappedListIterable(t1, new A._zip__closure2(), t2), true, t2._eval$1("ListIterable.E"));
      if (lists.length === 0)
        return B.SassList_yfz0;
      _box_0.i = 0;
      results = A._setArrayType([], type$.JSArray_SassList_2);
      for (t1 = A._arrayInstanceType(lists)._eval$1("MappedListIterable<1,Value0>"), t2 = type$.Value_2; B.JSArray_methods.every$1(lists, new A._zip__closure3(_box_0));) {
        result = A.List_List$from(new A.MappedListIterable(lists, new A._zip__closure4(_box_0), t1), false, t2);
        result.fixed$length = Array;
        result.immutable$list = Array;
        results.push(new A.SassList0(result, B.ListSeparator_woc0, false));
        ++_box_0.i;
      }
      return A.SassList$0(results, B.ListSeparator_kWM0, false);
    },
    $signature: 22
  };
  A._zip__closure2.prototype = {
    call$1(list) {
      return list.get$asList();
    },
    $signature: 457
  };
  A._zip__closure3.prototype = {
    call$1(list) {
      return this._box_0.i !== J.get$length$asx(list);
    },
    $signature: 458
  };
  A._zip__closure4.prototype = {
    call$1(list) {
      return J.$index$asx(list, this._box_0.i);
    },
    $signature: 3
  };
  A._index_closure2.prototype = {
    call$1($arguments) {
      var t1 = J.getInterceptor$asx($arguments),
        index = B.JSArray_methods.indexOf$1(t1.$index($arguments, 0).get$asList(), t1.$index($arguments, 1));
      if (index === -1)
        t1 = B.C__SassNull0;
      else
        t1 = new A.UnitlessSassNumber0(index + 1, null);
      return t1;
    },
    $signature: 3
  };
  A._separator_closure0.prototype = {
    call$1($arguments) {
      switch (J.get$separator$x(J.$index$asx($arguments, 0))) {
        case B.ListSeparator_kWM0:
          return new A.SassString0("comma", false);
        case B.ListSeparator_1gm0:
          return new A.SassString0("slash", false);
        default:
          return new A.SassString0("space", false);
      }
    },
    $signature: 13
  };
  A._isBracketed_closure0.prototype = {
    call$1($arguments) {
      return J.$index$asx($arguments, 0).get$hasBrackets() ? B.SassBoolean_true0 : B.SassBoolean_false0;
    },
    $signature: 18
  };
  A._slash_closure0.prototype = {
    call$1($arguments) {
      var list = J.$index$asx($arguments, 0).get$asList();
      if (list.length < 2)
        throw A.wrapException(A.SassScriptException$0("At least two elements are required."));
      return A.SassList$0(list, B.ListSeparator_1gm0, false);
    },
    $signature: 22
  };
  A.SelectorList0.prototype = {
    get$isInvisible() {
      return B.JSArray_methods.every$1(this.components, new A.SelectorList_isInvisible_closure0());
    },
    get$asSassList() {
      var t1 = this.components;
      return A.SassList$0(new A.MappedListIterable(t1, new A.SelectorList_asSassList_closure0(), A._arrayInstanceType(t1)._eval$1("MappedListIterable<1,Value0>")), B.ListSeparator_kWM0, false);
    },
    accept$1$1(visitor) {
      return visitor.visitSelectorList$1(this);
    },
    accept$1(visitor) {
      return this.accept$1$1(visitor, type$.dynamic);
    },
    unify$1(other) {
      var t1 = this.components,
        t2 = A._arrayInstanceType(t1)._eval$1("ExpandIterable<1,ComplexSelector0>"),
        contents = A.List_List$of(new A.ExpandIterable(t1, new A.SelectorList_unify_closure0(other), t2), true, t2._eval$1("Iterable.E"));
      return contents.length === 0 ? null : A.SelectorList$0(contents);
    },
    resolveParentSelectors$2$implicitParent($parent, implicitParent) {
      var t1, _this = this;
      if ($parent == null) {
        if (!B.JSArray_methods.any$1(_this.components, _this.get$_list2$_complexContainsParentSelector()))
          return _this;
        throw A.wrapException(A.SassScriptException$0(string$.Top_le));
      }
      t1 = _this.components;
      return A.SelectorList$0(A.flattenVertically0(new A.MappedListIterable(t1, new A.SelectorList_resolveParentSelectors_closure0(_this, implicitParent, $parent), A._arrayInstanceType(t1)._eval$1("MappedListIterable<1,Iterable<ComplexSelector0>>")), type$.ComplexSelector_2));
    },
    resolveParentSelectors$1($parent) {
      return this.resolveParentSelectors$2$implicitParent($parent, true);
    },
    _list2$_complexContainsParentSelector$1(complex) {
      return B.JSArray_methods.any$1(complex.components, new A.SelectorList__complexContainsParentSelector_closure0());
    },
    _list2$_resolveParentSelectorsCompound$2(compound, $parent) {
      var resolvedMembers0, parentSelector, t1,
        resolvedMembers = compound.components,
        containsSelectorPseudo = B.JSArray_methods.any$1(resolvedMembers, new A.SelectorList__resolveParentSelectorsCompound_closure2());
      if (!containsSelectorPseudo && !(B.JSArray_methods.get$first(resolvedMembers) instanceof A.ParentSelector0))
        return null;
      resolvedMembers0 = containsSelectorPseudo ? new A.MappedListIterable(resolvedMembers, new A.SelectorList__resolveParentSelectorsCompound_closure3($parent), A._arrayInstanceType(resolvedMembers)._eval$1("MappedListIterable<1,SimpleSelector0>")) : resolvedMembers;
      parentSelector = B.JSArray_methods.get$first(resolvedMembers);
      if (parentSelector instanceof A.ParentSelector0) {
        if (resolvedMembers.length === 1 && parentSelector.suffix == null)
          return $parent.components;
      } else
        return A._setArrayType([A.ComplexSelector$0(A._setArrayType([A.CompoundSelector$0(resolvedMembers0)], type$.JSArray_ComplexSelectorComponent_2), false)], type$.JSArray_ComplexSelector_2);
      t1 = $parent.components;
      return new A.MappedListIterable(t1, new A.SelectorList__resolveParentSelectorsCompound_closure4(compound, resolvedMembers0), A._arrayInstanceType(t1)._eval$1("MappedListIterable<1,ComplexSelector0>"));
    },
    get$hashCode(_) {
      return B.C_ListEquality0.hash$1(this.components);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.SelectorList0 && B.C_ListEquality.equals$2(0, this.components, other.components);
    }
  };
  A.SelectorList_isInvisible_closure0.prototype = {
    call$1(complex) {
      return complex.get$isInvisible();
    },
    $signature: 20
  };
  A.SelectorList_asSassList_closure0.prototype = {
    call$1(complex) {
      var t1 = complex.components;
      return A.SassList$0(new A.MappedListIterable(t1, new A.SelectorList_asSassList__closure0(), A._arrayInstanceType(t1)._eval$1("MappedListIterable<1,Value0>")), B.ListSeparator_woc0, false);
    },
    $signature: 459
  };
  A.SelectorList_asSassList__closure0.prototype = {
    call$1(component) {
      return new A.SassString0(component.toString$0(0), false);
    },
    $signature: 460
  };
  A.SelectorList_unify_closure0.prototype = {
    call$1(complex1) {
      var t1 = this.other.components;
      return new A.ExpandIterable(t1, new A.SelectorList_unify__closure0(complex1), A._arrayInstanceType(t1)._eval$1("ExpandIterable<1,ComplexSelector0>"));
    },
    $signature: 119
  };
  A.SelectorList_unify__closure0.prototype = {
    call$1(complex2) {
      var unified = A.unifyComplex0(A._setArrayType([this.complex1.components, complex2.components], typ